;; Object detail/
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "detail/"
  :tables (list 
   (semanticdb-table "operator_actions.hpp"
    :major-mode 'c++-mode
    :tags 
        '( ("BOOST_LAMBDA_OPERATOR_ACTIONS_HPP" variable (:constant-flag t) nil [406 439])
            ("boost" type
               (:members 
                  ( ("lambda" type
                       (:members 
                          ( ("plus_action" type (:type "class") (reparse-symbol namespacesubparts) [522 543])
                            ("minus_action" type (:type "class") (reparse-symbol namespacesubparts) [544 566])
                            ("multiply_action" type (:type "class") (reparse-symbol namespacesubparts) [567 592])
                            ("divide_action" type (:type "class") (reparse-symbol namespacesubparts) [593 616])
                            ("remainder_action" type (:type "class") (reparse-symbol namespacesubparts) [617 643])
                            ("leftshift_action" type (:type "class") (reparse-symbol namespacesubparts) [681 707])
                            ("rightshift_action" type (:type "class") (reparse-symbol namespacesubparts) [708 735])
                            ("xor_action" type (:type "class") (reparse-symbol namespacesubparts) [736 756])
                            ("and_action" type (:type "class") (reparse-symbol namespacesubparts) [802 822])
                            ("or_action" type (:type "class") (reparse-symbol namespacesubparts) [823 842])
                            ("not_action" type (:type "class") (reparse-symbol namespacesubparts) [843 863])
                            ("less_action" type (:type "class") (reparse-symbol namespacesubparts) [909 930])
                            ("greater_action" type (:type "class") (reparse-symbol namespacesubparts) [931 955])
                            ("lessorequal_action" type (:type "class") (reparse-symbol namespacesubparts) [956 984])
                            ("greaterorequal_action" type (:type "class") (reparse-symbol namespacesubparts) [985 1016])
                            ("equal_action" type (:type "class") (reparse-symbol namespacesubparts) [1017 1039])
                            ("notequal_action" type (:type "class") (reparse-symbol namespacesubparts) [1040 1065])
                            ("increment_action" type (:type "class") (reparse-symbol namespacesubparts) [1125 1151])
                            ("decrement_action" type (:type "class") (reparse-symbol namespacesubparts) [1152 1178])
                            ("addressof_action" type (:type "class") (reparse-symbol namespacesubparts) [1275 1301])
                            ("contentsof_action" type (:type "class") (reparse-symbol namespacesubparts) [1356 1383])
                            ("arithmetic_action" type
                               (:template 
                                  ( ("Action" type (:type "class") nil nil))                                  
                                :type "class"
                                :prototype t)
                                (reparse-symbol namespacesubparts) [1501 1549])
                            ("bitwise_action" type
                               (:template 
                                  ( ("Action" type (:type "class") nil nil))                                  
                                :type "class"
                                :prototype t)
                                (reparse-symbol namespacesubparts) [1550 1595])
                            ("logical_action" type
                               (:template 
                                  ( ("Action" type (:type "class") nil nil))                                  
                                :type "class"
                                :prototype t)
                                (reparse-symbol namespacesubparts) [1596 1641])
                            ("relational_action" type
                               (:template 
                                  ( ("Action" type (:type "class") nil nil))                                  
                                :type "class"
                                :prototype t)
                                (reparse-symbol namespacesubparts) [1642 1690])
                            ("arithmetic_assignment_action" type
                               (:template 
                                  ( ("Action" type (:type "class") nil nil))                                  
                                :type "class"
                                :prototype t)
                                (reparse-symbol namespacesubparts) [1691 1750])
                            ("bitwise_assignment_action" type
                               (:template 
                                  ( ("Action" type (:type "class") nil nil))                                  
                                :type "class"
                                :prototype t)
                                (reparse-symbol namespacesubparts) [1751 1807])
                            ("unary_arithmetic_action" type
                               (:template 
                                  ( ("Action" type (:type "class") nil nil))                                  
                                :type "class"
                                :prototype t)
                                (reparse-symbol namespacesubparts) [1808 1862])
                            ("pre_increment_decrement_action" type
                               (:template 
                                  ( ("Action" type (:type "class") nil nil))                                  
                                :type "class"
                                :prototype t)
                                (reparse-symbol namespacesubparts) [1863 1924])
                            ("post_increment_decrement_action" type
                               (:template 
                                  ( ("Action" type (:type "class") nil nil))                                  
                                :type "class"
                                :prototype t)
                                (reparse-symbol namespacesubparts) [1925 1987])
                            ("is_protectable" type
                               (:template 
                                  ( ("Act" type (:type "class") nil nil))                                  
                                :type "struct"
                                :members 
                                  ( ("BOOST_STATIC_CONSTANT" function
                                       (:prototype-flag t
                                        :arguments 
                                          ( ("" variable (:type "bool") (reparse-symbol arg-sub-list) [2238 2243])
                                            ("" variable (:type ("value" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2244 2251])
                                            ("" variable (:type ("true" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2252 2257]))                                          
                                        :type "int")
                                        (reparse-symbol classsubparts) [2216 2258]))                                  
                                :template-specifier 
                                  ( ("arithmetic_action" type nil nil nil))                                  )
                                (reparse-symbol namespacesubparts) [2144 2261])
                            ("is_protectable" type
                               (:template 
                                  ( ("Act" type (:type "class") nil nil))                                  
                                :type "struct"
                                :members 
                                  ( ("BOOST_STATIC_CONSTANT" function
                                       (:prototype-flag t
                                        :arguments 
                                          ( ("" variable (:type "bool") (reparse-symbol arg-sub-list) [2353 2358])
                                            ("" variable (:type ("value" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2359 2366])
                                            ("" variable (:type ("true" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2367 2372]))                                          
                                        :type "int")
                                        (reparse-symbol classsubparts) [2331 2373]))                                  
                                :template-specifier 
                                  ( ("bitwise_action" type nil nil nil))                                  )
                                (reparse-symbol namespacesubparts) [2262 2376])
                            ("is_protectable" type
                               (:template 
                                  ( ("Act" type (:type "class") nil nil))                                  
                                :type "struct"
                                :members 
                                  ( ("BOOST_STATIC_CONSTANT" function
                                       (:prototype-flag t
                                        :arguments 
                                          ( ("" variable (:type "bool") (reparse-symbol arg-sub-list) [2468 2473])
                                            ("" variable (:type ("value" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2474 2481])
                                            ("" variable (:type ("true" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2482 2487]))                                          
                                        :type "int")
                                        (reparse-symbol classsubparts) [2446 2488]))                                  
                                :template-specifier 
                                  ( ("logical_action" type nil nil nil))                                  )
                                (reparse-symbol namespacesubparts) [2377 2491])
                            ("is_protectable" type
                               (:template 
                                  ( ("Act" type (:type "class") nil nil))                                  
                                :type "struct"
                                :members 
                                  ( ("BOOST_STATIC_CONSTANT" function
                                       (:prototype-flag t
                                        :arguments 
                                          ( ("" variable (:type "bool") (reparse-symbol arg-sub-list) [2586 2591])
                                            ("" variable (:type ("value" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2592 2599])
                                            ("" variable (:type ("true" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2600 2605]))                                          
                                        :type "int")
                                        (reparse-symbol classsubparts) [2564 2606]))                                  
                                :template-specifier 
                                  ( ("relational_action" type nil nil nil))                                  )
                                (reparse-symbol namespacesubparts) [2492 2609])
                            ("is_protectable" type
                               (:template 
                                  ( ("Act" type (:type "class") nil nil))                                  
                                :type "struct"
                                :members 
                                  ( ("BOOST_STATIC_CONSTANT" function
                                       (:prototype-flag t
                                        :arguments 
                                          ( ("" variable (:type "bool") (reparse-symbol arg-sub-list) [2716 2721])
                                            ("" variable (:type ("value" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2722 2729])
                                            ("" variable (:type ("true" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2730 2735]))                                          
                                        :type "int")
                                        (reparse-symbol classsubparts) [2694 2736]))                                  
                                :template-specifier 
                                  ( ("arithmetic_assignment_action" type nil nil nil))                                  )
                                (reparse-symbol namespacesubparts) [2610 2739])
                            ("is_protectable" type
                               (:template 
                                  ( ("Act" type (:type "class") nil nil))                                  
                                :type "struct"
                                :members 
                                  ( ("BOOST_STATIC_CONSTANT" function
                                       (:prototype-flag t
                                        :arguments 
                                          ( ("" variable (:type "bool") (reparse-symbol arg-sub-list) [2842 2847])
                                            ("" variable (:type ("value" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2848 2855])
                                            ("" variable (:type ("true" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2856 2861]))                                          
                                        :type "int")
                                        (reparse-symbol classsubparts) [2820 2862]))                                  
                                :template-specifier 
                                  ( ("bitwise_assignment_action" type nil nil nil))                                  )
                                (reparse-symbol namespacesubparts) [2740 2865])
                            ("is_protectable" type
                               (:template 
                                  ( ("Act" type (:type "class") nil nil))                                  
                                :type "struct"
                                :members 
                                  ( ("BOOST_STATIC_CONSTANT" function
                                       (:prototype-flag t
                                        :arguments 
                                          ( ("" variable (:type "bool") (reparse-symbol arg-sub-list) [2966 2971])
                                            ("" variable (:type ("value" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2972 2979])
                                            ("" variable (:type ("true" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2980 2985]))                                          
                                        :type "int")
                                        (reparse-symbol classsubparts) [2944 2986]))                                  
                                :template-specifier 
                                  ( ("unary_arithmetic_action" type nil nil nil))                                  )
                                (reparse-symbol namespacesubparts) [2866 2989])
                            ("is_protectable" type
                               (:template 
                                  ( ("Act" type (:type "class") nil nil))                                  
                                :type "struct"
                                :members 
                                  ( ("BOOST_STATIC_CONSTANT" function
                                       (:prototype-flag t
                                        :arguments 
                                          ( ("" variable (:type "bool") (reparse-symbol arg-sub-list) [3098 3103])
                                            ("" variable (:type ("value" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3104 3111])
                                            ("" variable (:type ("true" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3112 3117]))                                          
                                        :type "int")
                                        (reparse-symbol classsubparts) [3076 3118]))                                  
                                :template-specifier 
                                  ( ("pre_increment_decrement_action" type nil nil nil))                                  )
                                (reparse-symbol namespacesubparts) [2990 3121])
                            ("is_protectable" type
                               (:template 
                                  ( ("Act" type (:type "class") nil nil))                                  
                                :type "struct"
                                :members 
                                  ( ("BOOST_STATIC_CONSTANT" function
                                       (:prototype-flag t
                                        :arguments 
                                          ( ("" variable (:type "bool") (reparse-symbol arg-sub-list) [3231 3236])
                                            ("" variable (:type ("value" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3237 3244])
                                            ("" variable (:type ("true" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3245 3250]))                                          
                                        :type "int")
                                        (reparse-symbol classsubparts) [3209 3251]))                                  
                                :template-specifier 
                                  ( ("post_increment_decrement_action" type nil nil nil))                                  )
                                (reparse-symbol namespacesubparts) [3122 3254])
                            ("is_protectable" type
                               (:type "struct"
                                :members 
                                  ( ("BOOST_STATIC_CONSTANT" function
                                       (:prototype-flag t
                                        :arguments 
                                          ( ("" variable (:type "bool") (reparse-symbol arg-sub-list) [3349 3354])
                                            ("" variable (:type ("value" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3355 3362])
                                            ("" variable (:type ("true" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3363 3368]))                                          
                                        :type "int")
                                        (reparse-symbol classsubparts) [3327 3369]))                                  
                                :template-specifier 
                                  ( ("other_action" type nil nil nil))                                  )
                                (reparse-symbol namespacesubparts) [3256 3372])
                            ("is_protectable" type
                               (:type "struct"
                                :members 
                                  ( ("BOOST_STATIC_CONSTANT" function
                                       (:prototype-flag t
                                        :arguments 
                                          ( ("" variable (:type "bool") (reparse-symbol arg-sub-list) [3467 3472])
                                            ("" variable (:type ("value" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3473 3480])
                                            ("" variable (:type ("true" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3481 3486]))                                          
                                        :type "int")
                                        (reparse-symbol classsubparts) [3445 3487]))                                  
                                :template-specifier 
                                  ( ("other_action" type nil nil nil))                                  )
                                (reparse-symbol namespacesubparts) [3373 3490])
                            ("is_protectable" type
                               (:type "struct"
                                :members 
                                  ( ("BOOST_STATIC_CONSTANT" function
                                       (:prototype-flag t
                                        :arguments 
                                          ( ("" variable (:type "bool") (reparse-symbol arg-sub-list) [3584 3589])
                                            ("" variable (:type ("value" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3590 3597])
                                            ("" variable (:type ("true" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3598 3603]))                                          
                                        :type "int")
                                        (reparse-symbol classsubparts) [3562 3604]))                                  
                                :template-specifier 
                                  ( ("other_action" type nil nil nil))                                  )
                                (reparse-symbol namespacesubparts) [3492 3607])
                            ("is_protectable" type
                               (:type "struct"
                                :members 
                                  ( ("BOOST_STATIC_CONSTANT" function
                                       (:prototype-flag t
                                        :arguments 
                                          ( ("" variable (:type "bool") (reparse-symbol arg-sub-list) [3701 3706])
                                            ("" variable (:type ("value" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3707 3714])
                                            ("" variable (:type ("true" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3715 3720]))                                          
                                        :type "int")
                                        (reparse-symbol classsubparts) [3679 3721]))                                  
                                :template-specifier 
                                  ( ("other_action" type nil nil nil))                                  )
                                (reparse-symbol namespacesubparts) [3608 3724]))                          
                        :type "namespace")
                        (reparse-symbol namespacesubparts) [460 3818]))                  
                :type "namespace")
                nil [441 3841]))          
    :file "operator_actions.hpp"
    :pointmax 3876
    :fsize 3875
    :lastmodtime '(17765 48449)
    :unmatched-syntax '((punctuation 3713 . 3714) (punctuation 3596 . 3597) (punctuation 3479 . 3480) (punctuation 3361 . 3362) (punctuation 3243 . 3244) (punctuation 3110 . 3111) (punctuation 2978 . 2979) (punctuation 2854 . 2855) (punctuation 2728 . 2729) (punctuation 2598 . 2599) (punctuation 2480 . 2481) (punctuation 2365 . 2366) (punctuation 2250 . 2251))
    :lexical-table 
        '(("BOOST_LAMBDA_OPERATOR_ACTIONS_HPP")
          )

    )
   (semanticdb-table "operator_lambda_func_base.hpp"
    :major-mode 'c++-mode
    :tags 
        '( ("BOOST_LAMBDA_OPERATOR_LAMBDA_FUNC_BASE_HPP" variable (:constant-flag t) nil [475 517])
            ("boost" type
               (:members 
                  ( ("lambda" type
                       (:members 
                          ( ("lambda_functor_base" type
                               (:template 
                                  ( ("Args" type (:type "class") nil nil))                                  
                                :type "class"
                                :members 
                                  ( ("public" label nil (reparse-symbol classsubparts) [757 764])
                                    ("args" variable (:type ("Args" type (:type "class") nil nil)) (reparse-symbol classsubparts) [767 777])
                                    ("public" label nil (reparse-symbol classsubparts) [778 785])
                                    ("lambda_functor_base" function
                                       (:constructor-flag t
                                        :arguments 
                                          ( ("a" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("Args" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [817 831]))                                          
                                        :type ("explicit" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [788 844])
                                    ("call" function
                                       (:template 
                                          ( ("RET" type (:type "class") nil nil)
                                            ("CALL_TEMPLATE_ARGS" type nil nil nil))                                          
                                        :type ("RET" type (:type "class") nil nil)
                                        :arguments 
                                          ( ("" variable (:type ("CALL_FORMAL_ARGS" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [899 916]))                                          )
                                        (reparse-symbol classsubparts) [848 1078])
                                    ("sig" type
                                       (:template 
                                          ( ("SigArgs" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :members 
                                          ( ("private" label nil (reparse-symbol classsubparts) [1123 1131])
                                            ("rets_t" type
                                               (:typedef ("detail::deduce_argument_types::type" type (:type "class") nil nil)
                                                :superclasses "detail::deduce_argument_types::type"
                                                :type "typedef")
                                                (reparse-symbol classsubparts) [1136 1217])
                                            ("public" label nil (reparse-symbol classsubparts) [1226 1233])
                                            ("type" variable (:type ("type" type (:type "class") nil nil)) (reparse-symbol classsubparts) [1428 1438]))                                          )
                                        (reparse-symbol classsubparts) [1083 1443]))                                  
                                :template-specifier 
                                  ( ("other_action" type nil nil nil)
                                    ("Args" type nil nil nil))                                  )
                                (reparse-symbol namespacesubparts) [674 1447])
                            ("detail" type
                               (:members 
                                  ( ("binary_rt" type
                                       (:template 
                                          ( ("Action" type (:type "class") nil nil)
                                            ("Bound" type (:type "class") nil nil)
                                            ("Open" type (:type "class") nil nil))                                          
                                        :type "class"
                                        :members 
                                          ( ("private" label nil (reparse-symbol classsubparts) [1680 1688])
                                            ("rets_t" type
                                               (:typedef ("detail::deduce_argument_types::type" type (:type "class") nil nil)
                                                :superclasses "detail::deduce_argument_types::type"
                                                :type "typedef")
                                                (reparse-symbol classsubparts) [1693 1772])
                                            ("public" label nil (reparse-symbol classsubparts) [1781 1788])
                                            ("type" variable (:type ("type" type (:type "class") nil nil)) (reparse-symbol classsubparts) [1966 1976]))                                          )
                                        (reparse-symbol namespacesubparts) [1612 1979])
                                    ("unary_rt" type
                                       (:template 
                                          ( ("Action" type (:type "class") nil nil)
                                            ("Bound" type (:type "class") nil nil)
                                            ("Open" type (:type "class") nil nil))                                          
                                        :type "class"
                                        :members 
                                          ( ("private" label nil (reparse-symbol classsubparts) [2077 2085])
                                            ("rets_t" type
                                               (:typedef ("detail::deduce_argument_types::type" type (:type "class") nil nil)
                                                :superclasses "detail::deduce_argument_types::type"
                                                :type "typedef")
                                                (reparse-symbol classsubparts) [2090 2169])
                                            ("public" label nil (reparse-symbol classsubparts) [2178 2185])
                                            ("type" variable (:type ("type" type (:type "class") nil nil)) (reparse-symbol classsubparts) [2306 2316]))                                          )
                                        (reparse-symbol namespacesubparts) [2010 2319]))                                  
                                :type "namespace")
                                (reparse-symbol namespacesubparts) [1451 2323])
                            ("lambda_functor_base" type
                               (:template 
                                  ( ("Args" type (:type "class") nil nil))                                  
                                :type "class"
                                :members 
                                  ( ("public" label nil (reparse-symbol classsubparts) [2562 2569])
                                    ("args" variable (:type ("Args" type (:type "class") nil nil)) (reparse-symbol classsubparts) [2572 2582])
                                    ("public" label nil (reparse-symbol classsubparts) [2583 2590])
                                    ("lambda_functor_base" function
                                       (:constructor-flag t
                                        :arguments 
                                          ( ("a" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("Args" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [2622 2636]))                                          
                                        :type ("explicit" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [2593 2649])
                                    ("call" function
                                       (:template 
                                          ( ("RET" type (:type "class") nil nil)
                                            ("CALL_TEMPLATE_ARGS" type nil nil nil))                                          
                                        :type ("RET" type (:type "class") nil nil)
                                        :arguments 
                                          ( ("" variable (:type ("CALL_FORMAL_ARGS" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2704 2721]))                                          )
                                        (reparse-symbol classsubparts) [2653 2885])
                                    ("sig" type
                                       (:template 
                                          ( ("SigArgs" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :members 
                                          ( ("type" type
                                               (:typedef ("detail::binary_rt::type" type (:type "class") nil nil)
                                                :superclasses "detail::binary_rt::type"
                                                :type "typedef")
                                                (reparse-symbol classsubparts) [2930 3025]))                                          )
                                        (reparse-symbol classsubparts) [2888 3030]))                                  
                                :template-specifier 
                                  ( ("logical_action" type nil nil nil)
                                    ("Args" type nil nil nil))                                  )
                                (reparse-symbol namespacesubparts) [2479 3039])
                            ("lambda_functor_base" type
                               (:template 
                                  ( ("Args" type (:type "class") nil nil))                                  
                                :type "class"
                                :members 
                                  ( ("public" label nil (reparse-symbol classsubparts) [3265 3272])
                                    ("args" variable (:type ("Args" type (:type "class") nil nil)) (reparse-symbol classsubparts) [3275 3285])
                                    ("public" label nil (reparse-symbol classsubparts) [3286 3293])
                                    ("lambda_functor_base" function
                                       (:constructor-flag t
                                        :arguments 
                                          ( ("a" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("Args" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [3325 3339]))                                          
                                        :type ("explicit" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [3296 3352])
                                    ("call" function
                                       (:template 
                                          ( ("RET" type (:type "class") nil nil)
                                            ("CALL_TEMPLATE_ARGS" type nil nil nil))                                          
                                        :type ("RET" type (:type "class") nil nil)
                                        :arguments 
                                          ( ("" variable (:type ("CALL_FORMAL_ARGS" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3407 3424]))                                          )
                                        (reparse-symbol classsubparts) [3356 3588])
                                    ("sig" type
                                       (:template 
                                          ( ("SigArgs" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :members 
                                          ( ("type" type
                                               (:typedef ("detail::binary_rt::type" type (:type "class") nil nil)
                                                :superclasses "detail::binary_rt::type"
                                                :type "typedef")
                                                (reparse-symbol classsubparts) [3634 3728]))                                          )
                                        (reparse-symbol classsubparts) [3592 3733]))                                  
                                :template-specifier 
                                  ( ("logical_action" type nil nil nil)
                                    ("Args" type nil nil nil))                                  )
                                (reparse-symbol namespacesubparts) [3182 3742])
                            ("lambda_functor_base" type
                               (:template 
                                  ( ("Args" type (:type "class") nil nil))                                  
                                :type "class"
                                :members 
                                  ( ("public" label nil (reparse-symbol classsubparts) [3865 3872])
                                    ("args" variable (:type ("Args" type (:type "class") nil nil)) (reparse-symbol classsubparts) [3875 3885])
                                    ("public" label nil (reparse-symbol classsubparts) [3886 3893])
                                    ("lambda_functor_base" function
                                       (:constructor-flag t
                                        :arguments 
                                          ( ("a" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("Args" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [3925 3939]))                                          
                                        :type ("explicit" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [3896 3952])
                                    ("call" function
                                       (:template 
                                          ( ("RET" type (:type "class") nil nil)
                                            ("CALL_TEMPLATE_ARGS" type nil nil nil))                                          
                                        :type ("RET" type (:type "class") nil nil)
                                        :arguments 
                                          ( ("" variable (:type ("CALL_FORMAL_ARGS" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4007 4024]))                                          )
                                        (reparse-symbol classsubparts) [3956 4187])
                                    ("sig" type
                                       (:template 
                                          ( ("SigArgs" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :members 
                                          ( ("type" type
                                               (:typedef ("detail::binary_rt::type" type (:type "class") nil nil)
                                                :superclasses "detail::binary_rt::type"
                                                :type "typedef")
                                                (reparse-symbol classsubparts) [4233 4341]))                                          )
                                        (reparse-symbol classsubparts) [4191 4346]))                                  
                                :template-specifier 
                                  ( ("other_action" type nil nil nil)
                                    ("Args" type nil nil nil))                                  )
                                (reparse-symbol namespacesubparts) [3778 4355])
                            ("BOOST_LAMBDA_BINARY_ACTION" variable (:constant-flag t) (reparse-symbol namespacesubparts) [4368 4394])
                            ("BOOST_LAMBDA_PREFIX_UNARY_ACTION" variable (:constant-flag t) (reparse-symbol namespacesubparts) [5726 5758])
                            ("BOOST_LAMBDA_POSTFIX_UNARY_ACTION" variable (:constant-flag t) (reparse-symbol namespacesubparts) [7024 7057])
                            ("lambda_functor_base" variable (:type "int") (reparse-symbol namespacesubparts) [8314 8374])
                            ("lambda_functor_base" variable (:type "int") (reparse-symbol namespacesubparts) [8375 8436])
                            ("lambda_functor_base" variable (:type "int") (reparse-symbol namespacesubparts) [8437 8501])
                            ("lambda_functor_base" variable (:type "int") (reparse-symbol namespacesubparts) [8502 8564])
                            ("lambda_functor_base" variable (:type "int") (reparse-symbol namespacesubparts) [8565 8630])
                            ("lambda_functor_base" variable (:type "int") (reparse-symbol namespacesubparts) [8632 8695])
                            ("lambda_functor_base" variable (:type "int") (reparse-symbol namespacesubparts) [8696 8760])
                            ("lambda_functor_base" variable (:type "int") (reparse-symbol namespacesubparts) [8761 8817])
                            ("lambda_functor_base" variable (:type "int") (reparse-symbol namespacesubparts) [8818 8873])
                            ("lambda_functor_base" variable (:type "int") (reparse-symbol namespacesubparts) [8874 8930])
                            ("lambda_functor_base" variable (:type "int") (reparse-symbol namespacesubparts) [8932 8992])
                            ("lambda_functor_base" variable (:type "int") (reparse-symbol namespacesubparts) [8993 9056])
                            ("lambda_functor_base" variable (:type "int") (reparse-symbol namespacesubparts) [9057 9125])
                            ("lambda_functor_base" variable (:type "int") (reparse-symbol namespacesubparts) [9126 9197])
                            ("lambda_functor_base" variable (:type "int") (reparse-symbol namespacesubparts) [9198 9260])
                            ("lambda_functor_base" variable (:type "int") (reparse-symbol namespacesubparts) [9261 9326])
                            ("lambda_functor_base" variable (:type "int") (reparse-symbol namespacesubparts) [9328 9400])
                            ("lambda_functor_base" variable (:type "int") (reparse-symbol namespacesubparts) [9401 9474])
                            ("lambda_functor_base" variable (:type "int") (reparse-symbol namespacesubparts) [9475 9551])
                            ("lambda_functor_base" variable (:type "int") (reparse-symbol namespacesubparts) [9552 9626])
                            ("lambda_functor_base" variable (:type "int") (reparse-symbol namespacesubparts) [9627 9704])
                            ("lambda_functor_base" variable (:type "int") (reparse-symbol namespacesubparts) [9706 9781])
                            ("lambda_functor_base" variable (:type "int") (reparse-symbol namespacesubparts) [9782 9858])
                            ("lambda_functor_base" variable (:type "int") (reparse-symbol namespacesubparts) [9859 9927])
                            ("lambda_functor_base" variable (:type "int") (reparse-symbol namespacesubparts) [9928 9995])
                            ("lambda_functor_base" variable (:type "int") (reparse-symbol namespacesubparts) [9996 10064])
                            ("lambda_functor_base" variable (:type "int") (reparse-symbol namespacesubparts) [10066 10128])
                            ("lambda_functor_base" variable (:type "int") (reparse-symbol namespacesubparts) [10131 10204])
                            ("lambda_functor_base" variable (:type "int") (reparse-symbol namespacesubparts) [10205 10279])
                            ("lambda_functor_base" variable (:type "int") (reparse-symbol namespacesubparts) [10280 10343])
                            ("lambda_functor_base" variable (:type "int") (reparse-symbol namespacesubparts) [10344 10407])
                            ("lambda_functor_base" variable (:type "int") (reparse-symbol namespacesubparts) [10408 10494])
                            ("lambda_functor_base" variable (:type "int") (reparse-symbol namespacesubparts) [10495 10581])
                            ("lambda_functor_base" variable (:type "int") (reparse-symbol namespacesubparts) [10583 10649])
                            ("lambda_functor_base" variable (:type "int") (reparse-symbol namespacesubparts) [10650 10717])
                            ("lambda_functor_base" variable (:type "int") (reparse-symbol namespacesubparts) [10719 10807])
                            ("lambda_functor_base" variable (:type "int") (reparse-symbol namespacesubparts) [10808 10896]))                          
                        :type "namespace")
                        (reparse-symbol namespacesubparts) [538 11016]))                  
                :type "namespace")
                nil [519 11038]))          
    :file "operator_lambda_func_base.hpp"
    :pointmax 11076
    :fsize 11075
    :lastmodtime '(17765 48449)
    :unmatched-syntax '((CLASS "class" 10808 . 10896) (punctuation ">" 10808 . 10896) (symbol "Args" 10808 . 10896) (CLASS "class" 10808 . 10896) (punctuation "<" 10808 . 10896) (TEMPLATE "template" 10808 . 10896) (CLASS "class" 10719 . 10807) (punctuation ">" 10719 . 10807) (symbol "Args" 10719 . 10807) (CLASS "class" 10719 . 10807) (punctuation "<" 10719 . 10807) (TEMPLATE "template" 10719 . 10807) (CLASS "class" 10650 . 10717) (punctuation ">" 10650 . 10717) (symbol "Args" 10650 . 10717) (CLASS "class" 10650 . 10717) (punctuation "<" 10650 . 10717) (TEMPLATE "template" 10650 . 10717) (CLASS "class" 10583 . 10649) (punctuation ">" 10583 . 10649) (symbol "Args" 10583 . 10649) (CLASS "class" 10583 . 10649) (punctuation "<" 10583 . 10649) (TEMPLATE "template" 10583 . 10649) (CLASS "class" 10495 . 10581) (punctuation ">" 10495 . 10581) (symbol "Args" 10495 . 10581) (CLASS "class" 10495 . 10581) (punctuation "<" 10495 . 10581) (TEMPLATE "template" 10495 . 10581) (CLASS "class" 10408 . 10494) (punctuation ">" 10408 . 10494) (symbol "Args" 10408 . 10494) (CLASS "class" 10408 . 10494) (punctuation "<" 10408 . 10494) (TEMPLATE "template" 10408 . 10494) (CLASS "class" 10344 . 10407) (punctuation ">" 10344 . 10407) (symbol "Args" 10344 . 10407) (CLASS "class" 10344 . 10407) (punctuation "<" 10344 . 10407) (TEMPLATE "template" 10344 . 10407) (CLASS "class" 10280 . 10343) (punctuation ">" 10280 . 10343) (symbol "Args" 10280 . 10343) (CLASS "class" 10280 . 10343) (punctuation "<" 10280 . 10343) (TEMPLATE "template" 10280 . 10343) (CLASS "class" 10205 . 10279) (punctuation ">" 10205 . 10279) (symbol "Args" 10205 . 10279) (CLASS "class" 10205 . 10279) (punctuation "<" 10205 . 10279) (TEMPLATE "template" 10205 . 10279) (CLASS "class" 10131 . 10204) (punctuation ">" 10131 . 10204) (symbol "Args" 10131 . 10204) (CLASS "class" 10131 . 10204) (punctuation "<" 10131 . 10204) (TEMPLATE "template" 10131 . 10204) (CLASS "class" 10066 . 10128) (punctuation ">" 10066 . 10128) (symbol "Args" 10066 . 10128) (CLASS "class" 10066 . 10128) (punctuation "<" 10066 . 10128) (TEMPLATE "template" 10066 . 10128) (CLASS "class" 9996 . 10064) (punctuation ">" 9996 . 10064) (symbol "Args" 9996 . 10064) (CLASS "class" 9996 . 10064) (punctuation "<" 9996 . 10064) (TEMPLATE "template" 9996 . 10064) (CLASS "class" 9928 . 9995) (punctuation ">" 9928 . 9995) (symbol "Args" 9928 . 9995) (CLASS "class" 9928 . 9995) (punctuation "<" 9928 . 9995) (TEMPLATE "template" 9928 . 9995) (CLASS "class" 9859 . 9927) (punctuation ">" 9859 . 9927) (symbol "Args" 9859 . 9927) (CLASS "class" 9859 . 9927) (punctuation "<" 9859 . 9927) (TEMPLATE "template" 9859 . 9927) (CLASS "class" 9782 . 9858) (punctuation ">" 9782 . 9858) (symbol "Args" 9782 . 9858) (CLASS "class" 9782 . 9858) (punctuation "<" 9782 . 9858) (TEMPLATE "template" 9782 . 9858) (CLASS "class" 9706 . 9781) (punctuation ">" 9706 . 9781) (symbol "Args" 9706 . 9781) (CLASS "class" 9706 . 9781) (punctuation "<" 9706 . 9781) (TEMPLATE "template" 9706 . 9781) (CLASS "class" 9627 . 9704) (punctuation ">" 9627 . 9704) (symbol "Args" 9627 . 9704) (CLASS "class" 9627 . 9704) (punctuation "<" 9627 . 9704) (TEMPLATE "template" 9627 . 9704) (CLASS "class" 9552 . 9626) (punctuation ">" 9552 . 9626) (symbol "Args" 9552 . 9626) (CLASS "class" 9552 . 9626) (punctuation "<" 9552 . 9626) (TEMPLATE "template" 9552 . 9626) (CLASS "class" 9475 . 9551) (punctuation ">" 9475 . 9551) (symbol "Args" 9475 . 9551) (CLASS "class" 9475 . 9551) (punctuation "<" 9475 . 9551) (TEMPLATE "template" 9475 . 9551) (CLASS "class" 9401 . 9474) (punctuation ">" 9401 . 9474) (symbol "Args" 9401 . 9474) (CLASS "class" 9401 . 9474) (punctuation "<" 9401 . 9474) (TEMPLATE "template" 9401 . 9474) (CLASS "class" 9328 . 9400) (punctuation ">" 9328 . 9400) (symbol "Args" 9328 . 9400) (CLASS "class" 9328 . 9400) (punctuation "<" 9328 . 9400) (TEMPLATE "template" 9328 . 9400) (CLASS "class" 9261 . 9326) (punctuation ">" 9261 . 9326) (symbol "Args" 9261 . 9326) (CLASS "class" 9261 . 9326) (punctuation "<" 9261 . 9326) (TEMPLATE "template" 9261 . 9326) (CLASS "class" 9198 . 9260) (punctuation ">" 9198 . 9260) (symbol "Args" 9198 . 9260) (CLASS "class" 9198 . 9260) (punctuation "<" 9198 . 9260) (TEMPLATE "template" 9198 . 9260) (CLASS "class" 9126 . 9197) (punctuation ">" 9126 . 9197) (symbol "Args" 9126 . 9197) (CLASS "class" 9126 . 9197) (punctuation "<" 9126 . 9197) (TEMPLATE "template" 9126 . 9197) (CLASS "class" 9057 . 9125) (punctuation ">" 9057 . 9125) (symbol "Args" 9057 . 9125) (CLASS "class" 9057 . 9125) (punctuation "<" 9057 . 9125) (TEMPLATE "template" 9057 . 9125) (CLASS "class" 8993 . 9056) (punctuation ">" 8993 . 9056) (symbol "Args" 8993 . 9056) (CLASS "class" 8993 . 9056) (punctuation "<" 8993 . 9056) (TEMPLATE "template" 8993 . 9056) (CLASS "class" 8932 . 8992) (punctuation ">" 8932 . 8992) (symbol "Args" 8932 . 8992) (CLASS "class" 8932 . 8992) (punctuation "<" 8932 . 8992) (TEMPLATE "template" 8932 . 8992) (CLASS "class" 8874 . 8930) (punctuation ">" 8874 . 8930) (symbol "Args" 8874 . 8930) (CLASS "class" 8874 . 8930) (punctuation "<" 8874 . 8930) (TEMPLATE "template" 8874 . 8930) (CLASS "class" 8818 . 8873) (punctuation ">" 8818 . 8873) (symbol "Args" 8818 . 8873) (CLASS "class" 8818 . 8873) (punctuation "<" 8818 . 8873) (TEMPLATE "template" 8818 . 8873) (CLASS "class" 8761 . 8817) (punctuation ">" 8761 . 8817) (symbol "Args" 8761 . 8817) (CLASS "class" 8761 . 8817) (punctuation "<" 8761 . 8817) (TEMPLATE "template" 8761 . 8817) (CLASS "class" 8696 . 8760) (punctuation ">" 8696 . 8760) (symbol "Args" 8696 . 8760) (CLASS "class" 8696 . 8760) (punctuation "<" 8696 . 8760) (TEMPLATE "template" 8696 . 8760) (CLASS "class" 8632 . 8695) (punctuation ">" 8632 . 8695) (symbol "Args" 8632 . 8695) (CLASS "class" 8632 . 8695) (punctuation "<" 8632 . 8695) (TEMPLATE "template" 8632 . 8695) (CLASS "class" 8565 . 8630) (punctuation ">" 8565 . 8630) (symbol "Args" 8565 . 8630) (CLASS "class" 8565 . 8630) (punctuation "<" 8565 . 8630) (TEMPLATE "template" 8565 . 8630) (CLASS "class" 8502 . 8564) (punctuation ">" 8502 . 8564) (symbol "Args" 8502 . 8564) (CLASS "class" 8502 . 8564) (punctuation "<" 8502 . 8564) (TEMPLATE "template" 8502 . 8564) (CLASS "class" 8437 . 8501) (punctuation ">" 8437 . 8501) (symbol "Args" 8437 . 8501) (CLASS "class" 8437 . 8501) (punctuation "<" 8437 . 8501) (TEMPLATE "template" 8437 . 8501) (CLASS "class" 8375 . 8436) (punctuation ">" 8375 . 8436) (symbol "Args" 8375 . 8436) (CLASS "class" 8375 . 8436) (punctuation "<" 8375 . 8436) (TEMPLATE "template" 8375 . 8436) (CLASS "class" 8314 . 8374) (punctuation ">" 8314 . 8374) (symbol "Args" 8314 . 8374) (CLASS "class" 8314 . 8374) (punctuation "<" 8314 . 8374) (TEMPLATE "template" 8314 . 8374) (punctuation 2305 . 2306) (punctuation 2304 . 2305) (punctuation 2303 . 2304) (symbol 2294 . 2298) (punctuation 2293 . 2294) (punctuation 2292 . 2293) (punctuation 2291 . 2292) (symbol 2285 . 2291) (punctuation 2283 . 2284) (number 2282 . 2283) (punctuation 2281 . 2282) (symbol 2266 . 2281) (punctuation 2265 . 2266) (punctuation 2264 . 2265) (symbol 2258 . 2264) (TYPENAME 2249 . 2257) (punctuation 2239 . 2240) (symbol 2233 . 2239) (punctuation 2225 . 2226) (symbol 2207 . 2225) (TYPENAME 2198 . 2206) (TYPEDEF 2190 . 2197) (punctuation 1965 . 1966) (punctuation 1964 . 1965) (punctuation 1963 . 1964) (symbol 1954 . 1958) (punctuation 1953 . 1954) (punctuation 1952 . 1953) (punctuation 1951 . 1952) (symbol 1945 . 1951) (punctuation 1943 . 1944) (number 1942 . 1943) (punctuation 1941 . 1942) (symbol 1926 . 1941) (punctuation 1925 . 1926) (punctuation 1924 . 1925) (symbol 1918 . 1924) (TYPENAME 1909 . 1917) (punctuation 1901 . 1902) (symbol 1897 . 1901) (punctuation 1896 . 1897) (punctuation 1895 . 1896) (punctuation 1894 . 1895) (symbol 1888 . 1894) (punctuation 1886 . 1887) (number 1885 . 1886) (punctuation 1884 . 1885) (symbol 1869 . 1884) (punctuation 1868 . 1869) (punctuation 1867 . 1868) (symbol 1861 . 1867) (TYPENAME 1852 . 1860) (punctuation 1842 . 1843) (symbol 1836 . 1842) (punctuation 1828 . 1829) (symbol 1810 . 1828) (TYPENAME 1801 . 1809) (TYPEDEF 1793 . 1800) (punctuation 1427 . 1428) (punctuation 1426 . 1427) (punctuation 1425 . 1426) (symbol 1416 . 1420) (punctuation 1415 . 1416) (punctuation 1414 . 1415) (punctuation 1413 . 1414) (symbol 1407 . 1413) (punctuation 1405 . 1406) (number 1404 . 1405) (punctuation 1403 . 1404) (symbol 1388 . 1403) (punctuation 1387 . 1388) (punctuation 1386 . 1387) (symbol 1380 . 1386) (TYPENAME 1371 . 1379) (punctuation 1363 . 1364) (symbol 1359 . 1363) (punctuation 1358 . 1359) (punctuation 1357 . 1358) (punctuation 1356 . 1357) (symbol 1350 . 1356) (punctuation 1348 . 1349) (number 1347 . 1348) (punctuation 1346 . 1347) (symbol 1331 . 1346) (punctuation 1330 . 1331) (punctuation 1329 . 1330) (symbol 1323 . 1329) (TYPENAME 1314 . 1322) (punctuation 1274 . 1275) (symbol 1255 . 1274) (TYPENAME 1246 . 1254) (TYPEDEF 1238 . 1245))
    :lexical-table 
        '(("ACTION_CLASS"nil ;; bogus macro found.
)
          ("BOOST_LAMBDA_OPERATOR_LAMBDA_FUNC_BASE_HPP")
          ("SYMBOL"nil ;; bogus macro found.
)
          )

    )
   (semanticdb-table "operator_return_type_traits.hpp"
    :major-mode 'c++-mode
    :tags 
        '( ("BOOST_LAMBDA_OPERATOR_RETURN_TYPE_TRAITS_HPP" variable (:constant-flag t) nil [414 458])
            ("boost/lambda/detail/is_instance_of.hpp" include nil nil [460 509])
            ("boost/type_traits/same_traits.hpp" include nil nil [510 554])
            ("boost/indirect_reference.hpp" include nil nil [556 595])
            ("cstddef" include (:system-flag t) nil [597 615])
            ("iosfwd" include (:system-flag t) nil [644 661])
            ("iterator" include (:system-flag t) nil [691 710])
            ("boost" type
               (:members 
                  ( ("lambda" type
                       (:members 
                          ( ("detail" type
                               (:members 
                                  ( ("promote_code" type
                                       (:template 
                                          ( ("A" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :members 
                                          ( ("value" variable
                                               (:typemodifiers ("static")
                                                :constant-flag t
                                                :type "int")
                                                (reparse-symbol classsubparts) [988 1016]))                                          )
                                        (reparse-symbol namespacesubparts) [947 1019])
                                    ("promote_code" type
                                       (:type "struct"
                                        :members 
                                          ( ("value" variable
                                               (:typemodifiers ("static")
                                                :constant-flag t
                                                :type "int")
                                                (reparse-symbol classsubparts) [1243 1271]))                                          
                                        :template-specifier 
                                          ( ("bool" type nil nil nil))                                          )
                                        (reparse-symbol namespacesubparts) [1203 1274])
                                    ("promote_code" type
                                       (:type "struct"
                                        :members 
                                          ( ("value" variable
                                               (:typemodifiers ("static")
                                                :constant-flag t
                                                :type "int")
                                                (reparse-symbol classsubparts) [1315 1343]))                                          
                                        :template-specifier 
                                          ( ("char" type nil nil nil))                                          )
                                        (reparse-symbol namespacesubparts) [1275 1346])
                                    ("promote_code" type
                                       (:type "struct"
                                        :members 
                                          ( ("value" variable
                                               (:typemodifiers ("static")
                                                :constant-flag t
                                                :type "int")
                                                (reparse-symbol classsubparts) [1396 1424]))                                          
                                        :template-specifier 
                                          ( ("unsigned char" type nil nil nil))                                          )
                                        (reparse-symbol namespacesubparts) [1347 1427])
                                    ("promote_code" type
                                       (:type "struct"
                                        :members 
                                          ( ("value" variable
                                               (:typemodifiers ("static")
                                                :constant-flag t
                                                :type "int")
                                                (reparse-symbol classsubparts) [1475 1503]))                                          
                                        :template-specifier 
                                          ( ("signed char" type nil nil nil))                                          )
                                        (reparse-symbol namespacesubparts) [1428 1506])
                                    ("promote_code" type
                                       (:type "struct"
                                        :members 
                                          ( ("value" variable
                                               (:typemodifiers ("static")
                                                :constant-flag t
                                                :type "int")
                                                (reparse-symbol classsubparts) [1552 1580]))                                          
                                        :template-specifier 
                                          ( ("short int" type nil nil nil))                                          )
                                        (reparse-symbol namespacesubparts) [1507 1583])
                                    ("promote_code" type
                                       (:type "struct"
                                        :members 
                                          ( ("value" variable
                                               (:typemodifiers ("static")
                                                :constant-flag t
                                                :type "int")
                                                (reparse-symbol classsubparts) [1638 1667]))                                          
                                        :template-specifier 
                                          ( ("int" type nil nil nil))                                          )
                                        (reparse-symbol namespacesubparts) [1599 1670])
                                    ("promote_code" type
                                       (:type "struct"
                                        :members 
                                          ( ("value" variable
                                               (:typemodifiers ("static")
                                                :constant-flag t
                                                :type "int")
                                                (reparse-symbol classsubparts) [1719 1748]))                                          
                                        :template-specifier 
                                          ( ("unsigned int" type nil nil nil))                                          )
                                        (reparse-symbol namespacesubparts) [1671 1751])
                                    ("promote_code" type
                                       (:type "struct"
                                        :members 
                                          ( ("value" variable
                                               (:typemodifiers ("static")
                                                :constant-flag t
                                                :type "int")
                                                (reparse-symbol classsubparts) [1792 1821]))                                          
                                        :template-specifier 
                                          ( ("long" type nil nil nil))                                          )
                                        (reparse-symbol namespacesubparts) [1752 1824])
                                    ("promote_code" type
                                       (:type "struct"
                                        :members 
                                          ( ("value" variable
                                               (:typemodifiers ("static")
                                                :constant-flag t
                                                :type "int")
                                                (reparse-symbol classsubparts) [1874 1903]))                                          
                                        :template-specifier 
                                          ( ("unsigned long" type nil nil nil))                                          )
                                        (reparse-symbol namespacesubparts) [1825 1906])
                                    ("promote_code" type
                                       (:type "struct"
                                        :members 
                                          ( ("value" variable
                                               (:typemodifiers ("static")
                                                :constant-flag t
                                                :type "int")
                                                (reparse-symbol classsubparts) [1949 1978]))                                          
                                        :template-specifier 
                                          ( ("float" type nil nil nil))                                          )
                                        (reparse-symbol namespacesubparts) [1908 1981])
                                    ("promote_code" type
                                       (:type "struct"
                                        :members 
                                          ( ("value" variable
                                               (:typemodifiers ("static")
                                                :constant-flag t
                                                :type "int")
                                                (reparse-symbol classsubparts) [2024 2053]))                                          
                                        :template-specifier 
                                          ( ("double" type nil nil nil))                                          )
                                        (reparse-symbol namespacesubparts) [1982 2056])
                                    ("promote_code" type
                                       (:type "struct"
                                        :members 
                                          ( ("value" variable
                                               (:typemodifiers ("static")
                                                :constant-flag t
                                                :type "int")
                                                (reparse-symbol classsubparts) [2104 2133]))                                          
                                        :template-specifier 
                                          ( ("long double" type nil nil nil))                                          )
                                        (reparse-symbol namespacesubparts) [2057 2136]))                                  
                                :type "namespace")
                                (reparse-symbol namespacesubparts) [774 2193]))                          
                        :type "namespace")
                        (reparse-symbol namespacesubparts) [755 2215]))                  
                :type "namespace")
                nil [736 2238])
            ("std" type
               (:members 
                  ( ("complex" type
                       (:template 
                          ( ("T" type (:type "class") nil nil))                          
                        :type "class"
                        :prototype t)
                        (reparse-symbol namespacesubparts) [2277 2309]))                  
                :type "namespace")
                nil [2259 2311])
            ("boost" type
               (:members 
                  ( ("lambda" type
                       (:members 
                          ( ("detail" type
                               (:members 
                                  ( ("promote_code" type
                                       (:type "struct"
                                        :members 
                                          ( ("value" variable
                                               (:typemodifiers ("static")
                                                :constant-flag t
                                                :type "int")
                                                (reparse-symbol classsubparts) [2428 2457]))                                          
                                        :template-specifier 
                                          ( ("std::complex" type nil nil nil))                                          )
                                        (reparse-symbol namespacesubparts) [2371 2460])
                                    ("promote_code" type
                                       (:type "struct"
                                        :members 
                                          ( ("value" variable
                                               (:typemodifiers ("static")
                                                :constant-flag t
                                                :type "int")
                                                (reparse-symbol classsubparts) [2519 2548]))                                          
                                        :template-specifier 
                                          ( ("std::complex" type nil nil nil))                                          )
                                        (reparse-symbol namespacesubparts) [2461 2551])
                                    ("promote_code" type
                                       (:type "struct"
                                        :members 
                                          ( ("value" variable
                                               (:typemodifiers ("static")
                                                :constant-flag t
                                                :type "int")
                                                (reparse-symbol classsubparts) [2615 2645]))                                          
                                        :template-specifier 
                                          ( ("std::complex" type nil nil nil))                                          )
                                        (reparse-symbol namespacesubparts) [2552 2648])
                                    ("promote_to_int" type
                                       (:template 
                                          ( ("T" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :members 
                                          ( ("type" type
                                               (:typedef ("T" type (:type "class") nil nil)
                                                :superclasses "T"
                                                :type "typedef")
                                                (reparse-symbol classsubparts) [2757 2772]))                                          )
                                        (reparse-symbol namespacesubparts) [2714 2775])
                                    ("promote_to_int" type
                                       (:type "struct"
                                        :members 
                                          ( ("type" type
                                               (:typedef ("int")
                                                :superclasses "int"
                                                :type "typedef")
                                                (reparse-symbol classsubparts) [2819 2836]))                                          
                                        :template-specifier 
                                          ( ("bool" type nil nil nil))                                          )
                                        (reparse-symbol namespacesubparts) [2777 2839])
                                    ("promote_to_int" type
                                       (:type "struct"
                                        :members 
                                          ( ("type" type
                                               (:typedef ("int")
                                                :superclasses "int"
                                                :type "typedef")
                                                (reparse-symbol classsubparts) [2882 2899]))                                          
                                        :template-specifier 
                                          ( ("char" type nil nil nil))                                          )
                                        (reparse-symbol namespacesubparts) [2840 2902])
                                    ("promote_to_int" type
                                       (:type "struct"
                                        :members 
                                          ( ("type" type
                                               (:typedef ("int")
                                                :superclasses "int"
                                                :type "typedef")
                                                (reparse-symbol classsubparts) [2954 2971]))                                          
                                        :template-specifier 
                                          ( ("unsigned char" type nil nil nil))                                          )
                                        (reparse-symbol namespacesubparts) [2903 2974])
                                    ("promote_to_int" type
                                       (:type "struct"
                                        :members 
                                          ( ("type" type
                                               (:typedef ("int")
                                                :superclasses "int"
                                                :type "typedef")
                                                (reparse-symbol classsubparts) [3024 3041]))                                          
                                        :template-specifier 
                                          ( ("signed char" type nil nil nil))                                          )
                                        (reparse-symbol namespacesubparts) [2975 3044])
                                    ("promote_to_int" type
                                       (:type "struct"
                                        :members 
                                          ( ("type" type
                                               (:typedef ("int")
                                                :superclasses "int"
                                                :type "typedef")
                                                (reparse-symbol classsubparts) [3092 3109]))                                          
                                        :template-specifier 
                                          ( ("short int" type nil nil nil))                                          )
                                        (reparse-symbol namespacesubparts) [3045 3112])
                                    ("promote_to_int" type
                                       (:type "struct"
                                        :members 
                                          ( ("type" variable (:type ("RET" type (:type "class") nil nil)) (reparse-symbol classsubparts) [3555 3564]))                                          
                                        :template-specifier 
                                          ( ("unsigned short int" type nil nil nil))                                          )
                                        (reparse-symbol namespacesubparts) [3293 3568]))                                  
                                :type "namespace")
                                (reparse-symbol namespacesubparts) [2351 3647])
                            ("plain_return_type_1" type
                               (:template 
                                  ( ("Act" type (:type "class") nil nil)
                                    ("A" type (:type "class") nil nil))                                  
                                :type "struct"
                                :members 
                                  ( ("type" type
                                       (:typedef ("detail::unspecified" type (:type "class") nil nil)
                                        :superclasses "detail::unspecified"
                                        :type "typedef")
                                        (reparse-symbol classsubparts) [3870 3903]))                                  )
                                (reparse-symbol namespacesubparts) [3810 3906])
                            ("plain_return_type_1" type
                               (:template 
                                  ( ("Act" type (:type "class") nil nil)
                                    ("A" type (:type "class") nil nil))                                  
                                :type "struct"
                                :members 
                                  ( ("type" type
                                       (:typedef ("A" type (:type "class") nil nil)
                                        :superclasses "A"
                                        :type "typedef")
                                        (reparse-symbol classsubparts) [4003 4018]))                                  
                                :template-specifier 
                                  ( ("unary_arithmetic_action" type nil nil nil)
                                    ("A" type nil nil nil))                                  )
                                (reparse-symbol namespacesubparts) [3910 4021])
                            ("return_type_1" type
                               (:template 
                                  ( ("Act" type (:type "class") nil nil)
                                    ("A" type (:type "class") nil nil))                                  
                                :type "struct"
                                :members 
                                  ( ("type" variable (:type ("type" type (:type "class") nil nil)) (reparse-symbol classsubparts) [4254 4264]))                                  
                                :template-specifier 
                                  ( ("unary_arithmetic_action" type nil nil nil)
                                    ("A" type nil nil nil))                                  )
                                (reparse-symbol namespacesubparts) [4023 4267])
                            ("plain_return_type_1" type
                               (:template 
                                  ( ("A" type (:type "class") nil nil))                                  
                                :type "struct"
                                :members 
                                  ( ("type" type
                                       (:typedef ("A" type (:type "class") nil nil)
                                        :superclasses "A"
                                        :type "typedef")
                                        (reparse-symbol classsubparts) [4350 4365]))                                  
                                :template-specifier 
                                  ( ("bitwise_action" type nil nil nil)
                                    ("A" type nil nil nil))                                  )
                                (reparse-symbol namespacesubparts) [4270 4368])
                            ("return_type_1" type
                               (:template 
                                  ( ("A" type (:type "class") nil nil))                                  
                                :type "struct"
                                :members 
                                  ( ("type" variable (:type ("type" type (:type "class") nil nil)) (reparse-symbol classsubparts) [4612 4622]))                                  
                                :template-specifier 
                                  ( ("bitwise_action" type nil nil nil)
                                    ("A" type nil nil nil))                                  )
                                (reparse-symbol namespacesubparts) [4398 4625])
                            ("plain_return_type_1" type
                               (:template 
                                  ( ("Act" type (:type "class") nil nil)
                                    ("A" type (:type "class") nil nil))                                  
                                :type "struct"
                                :members 
                                  ( ("type" variable (:type ("A" type (:type "class") nil nil)) (reparse-symbol classsubparts) [4843 4851]))                                  
                                :template-specifier 
                                  ( ("pre_increment_decrement_action" type nil nil nil)
                                    ("A" type nil nil nil))                                  )
                                (reparse-symbol namespacesubparts) [4734 4854])
                            ("return_type_1" type
                               (:template 
                                  ( ("Act" type (:type "class") nil nil)
                                    ("A" type (:type "class") nil nil))                                  
                                :type "struct"
                                :members 
                                  ( ("type" variable (:type ("type" type (:type "class") nil nil)) (reparse-symbol classsubparts) [5100 5110]))                                  
                                :template-specifier 
                                  ( ("pre_increment_decrement_action" type nil nil nil)
                                    ("A" type nil nil nil))                                  )
                                (reparse-symbol namespacesubparts) [4856 5113])
                            ("plain_return_type_1" type
                               (:template 
                                  ( ("Act" type (:type "class") nil nil)
                                    ("A" type (:type "class") nil nil))                                  
                                :type "struct"
                                :members 
                                  ( ("type" type
                                       (:typedef ("A" type (:type "class") nil nil)
                                        :superclasses "A"
                                        :type "typedef")
                                        (reparse-symbol classsubparts) [5268 5283]))                                  
                                :template-specifier 
                                  ( ("post_increment_decrement_action" type nil nil nil)
                                    ("A" type nil nil nil))                                  )
                                (reparse-symbol namespacesubparts) [5167 5286])
                            ("return_type_1" type
                               (:template 
                                  ( ("Act" type (:type "class") nil nil)
                                    ("A" type (:type "class") nil nil))                                  
                                :type "struct"
                                :members 
                                  ( ("type" variable (:type ("type" type (:type "class") nil nil)) (reparse-symbol classsubparts) [5536 5546]))                                  
                                :template-specifier 
                                  ( ("post_increment_decrement_action" type nil nil nil)
                                    ("A" type nil nil nil))                                  )
                                (reparse-symbol namespacesubparts) [5288 5549])
                            ("plain_return_type_1" type
                               (:template 
                                  ( ("A" type (:type "class") nil nil))                                  
                                :type "struct"
                                :members 
                                  ( ("type" type
                                       (:typedef ("bool")
                                        :superclasses "bool"
                                        :type "typedef")
                                        (reparse-symbol classsubparts) [5660 5678]))                                  
                                :template-specifier 
                                  ( ("logical_action" type nil nil nil)
                                    ("A" type nil nil nil))                                  )
                                (reparse-symbol namespacesubparts) [5579 5681])
                            ("return_type_1" type
                               (:template 
                                  ( ("A" type (:type "class") nil nil))                                  
                                :type "struct"
                                :members 
                                  ( ("type" variable (:type ("type" type (:type "class") nil nil)) (reparse-symbol classsubparts) [5897 5907]))                                  
                                :template-specifier 
                                  ( ("logical_action" type nil nil nil)
                                    ("A" type nil nil nil))                                  )
                                (reparse-symbol namespacesubparts) [5683 5910])
                            ("return_type_1" type
                               (:template 
                                  ( ("A" type (:type "class") nil nil))                                  
                                :type "struct"
                                :members 
                                  ( ("type1" variable (:type ("type" type (:type "class") nil nil)) (reparse-symbol classsubparts) [6200 6211])
                                    ("type" variable (:type ("RET" type (:type "class") nil nil)) (reparse-symbol classsubparts) [6456 6465]))                                  
                                :template-specifier 
                                  ( ("other_action" type nil nil nil)
                                    ("A" type nil nil nil))                                  )
                                (reparse-symbol namespacesubparts) [5975 6468])
                            ("detail" type
                               (:members 
                                  ( ("contentsof_type" type
                                       (:template 
                                          ( ("A" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :members 
                                          ( ("type" type
                                               (:typedef ("boost::indirect_reference::type" type (:type "class") nil nil)
                                                :superclasses "boost::indirect_reference::type"
                                                :type "typedef")
                                                (reparse-symbol classsubparts) [6933 6990]))                                          )
                                        (reparse-symbol namespacesubparts) [6887 6994])
                                    ("contentsof_type" type
                                       (:type "struct"
                                        :members 
                                          ( ("type" type
                                               (:typedef ("detail::unspecified" type (:type "class") nil nil)
                                                :superclasses "detail::unspecified"
                                                :type "typedef")
                                                (reparse-symbol classsubparts) [7121 7154]))                                          
                                        :template-specifier 
                                          ( ("null_type" type nil nil nil))                                          )
                                        (reparse-symbol namespacesubparts) [7071 7157])
                                    ("contentsof_type" type
                                       (:template 
                                          ( ("A" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :members 
                                          ( ("type1" variable (:type ("type" type (:type "class") nil nil)) (reparse-symbol classsubparts) [7252 7263])
                                            ("type" variable (:type ("RET" type (:type "class") nil nil)) (reparse-symbol classsubparts) [7654 7663]))                                          
                                        :template-specifier 
                                          ( ("A" type (:constant-flag t) nil nil))                                          )
                                        (reparse-symbol namespacesubparts) [7160 7666])
                                    ("contentsof_type" type
                                       (:template 
                                          ( ("A" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :members 
                                          ( ("type1" variable (:type ("type" type (:type "class") nil nil)) (reparse-symbol classsubparts) [7763 7774])
                                            ("type" variable (:type ("RET" type (:type "class") nil nil)) (reparse-symbol classsubparts) [7925 7934]))                                          
                                        :template-specifier 
                                          ( ("A" type (:typemodifiers ("volatile")) nil nil))                                          )
                                        (reparse-symbol namespacesubparts) [7668 7937])
                                    ("contentsof_type" type
                                       (:template 
                                          ( ("A" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :members 
                                          ( ("type1" variable (:type ("type" type (:type "class") nil nil)) (reparse-symbol classsubparts) [8040 8051])
                                            ("type" variable (:type ("RET" type (:type "class") nil nil)) (reparse-symbol classsubparts) [8214 8223]))                                          
                                        :template-specifier 
                                          ( ("A" type
                                               (:typemodifiers ("volatile")
                                                :constant-flag t)
                                                nil nil))                                          )
                                        (reparse-symbol namespacesubparts) [7939 8226])
                                    ("contentsof_type" type
                                       (:template 
                                          ( ("A" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :members 
                                          ( ("type" variable (:type ("A" type (:type "class") nil nil)) (reparse-symbol classsubparts) [8470 8478]))                                          
                                        :template-specifier 
                                          ( ("A" type (:pointer 1) nil nil))                                          )
                                        (reparse-symbol namespacesubparts) [8412 8481])
                                    ("contentsof_type" type
                                       (:template 
                                          ( ("A" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :members 
                                          ( ("type" variable (:type ("A" type (:type "class") nil nil)) (reparse-symbol classsubparts) [8546 8554]))                                          
                                        :template-specifier 
                                          ( ("A" type (:pointer 1) nil nil))                                          )
                                        (reparse-symbol namespacesubparts) [8482 8557]))                                  
                                :type "namespace")
                                (reparse-symbol namespacesubparts) [6837 9109])
                            ("return_type_1" type
                               (:template 
                                  ( ("A" type (:type "class") nil nil))                                  
                                :type "struct"
                                :members 
                                  ( ("type1" variable (:type ("type" type (:type "class") nil nil)) (reparse-symbol classsubparts) [9353 9364])
                                    ("type" variable (:type ("type" type (:type "class") nil nil)) (reparse-symbol classsubparts) [9679 9689]))                                  
                                :template-specifier 
                                  ( ("other_action" type nil nil nil)
                                    ("A" type nil nil nil))                                  )
                                (reparse-symbol namespacesubparts) [9125 9692])
                            ("plain_return_type_2" type
                               (:template 
                                  ( ("Act" type (:type "class") nil nil)
                                    ("A" type (:type "class") nil nil)
                                    ("B" type (:type "class") nil nil))                                  
                                :type "struct"
                                :members 
                                  ( ("type" type
                                       (:typedef ("detail::unspecified" type (:type "class") nil nil)
                                        :superclasses "detail::unspecified"
                                        :type "typedef")
                                        (reparse-symbol classsubparts) [10031 10064]))                                  )
                                (reparse-symbol namespacesubparts) [9961 10068])
                            ("detail" type
                               (:members 
                                  ( ("illegal_pointer_arithmetic" type (:type "class") (reparse-symbol namespacesubparts) [10107 10142])
                                    ("pointer_arithmetic_traits" type
                                       (:template 
                                          ( ("Act" type (:type "class") nil nil)
                                            ("A" type (:type "class") nil nil)
                                            ("B" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :members 
                                          ( ("value" variable
                                               (:typemodifiers ("static")
                                                :constant-flag t
                                                :type "bool")
                                                (reparse-symbol classsubparts) [10602 10634]))                                          )
                                        (reparse-symbol namespacesubparts) [10528 10637])
                                    ("pointer_arithmetic_traits" type
                                       (:template 
                                          ( ("A" type (:type "class") nil nil)
                                            ("B" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :members 
                                          ( ("AP" variable (:type ("type" type (:type "class") nil nil)) (reparse-symbol classsubparts) [10808 10816])
                                            ("BP" variable (:type ("type" type (:type "class") nil nil)) (reparse-symbol classsubparts) [10902 10910])
                                            ("is_pointer_A" variable
                                               (:typemodifiers ("static")
                                                :constant-flag t
                                                :type "bool")
                                                (reparse-symbol classsubparts) [10914 10976])
                                            ("is_pointer_B" variable
                                               (:typemodifiers ("static")
                                                :constant-flag t
                                                :type "bool")
                                                (reparse-symbol classsubparts) [10979 11041])
                                            ("value" variable
                                               (:typemodifiers ("static")
                                                :constant-flag t
                                                :type "bool")
                                                (reparse-symbol classsubparts) [11047 11102])
                                            ("type" variable (:type ("RET" type (:type "class") nil nil)) (reparse-symbol classsubparts) [11510 11519]))                                          
                                        :template-specifier 
                                          ( ("plus_action" type nil nil nil)
                                            ("A" type nil nil nil)
                                            ("B" type nil nil nil))                                          )
                                        (reparse-symbol namespacesubparts) [10639 11524])
                                    ("pointer_arithmetic_traits" type
                                       (:template 
                                          ( ("A" type (:type "class") nil nil)
                                            ("B" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :members 
                                          ( ("AP" variable (:type ("type" type (:type "class") nil nil)) (reparse-symbol classsubparts) [11695 11703])
                                            ("BP" variable (:type ("type" type (:type "class") nil nil)) (reparse-symbol classsubparts) [11789 11797])
                                            ("is_pointer_A" variable
                                               (:typemodifiers ("static")
                                                :constant-flag t
                                                :type "bool")
                                                (reparse-symbol classsubparts) [11801 11863])
                                            ("is_pointer_B" variable
                                               (:typemodifiers ("static")
                                                :constant-flag t
                                                :type "bool")
                                                (reparse-symbol classsubparts) [11866 11928])
                                            ("value" variable
                                               (:typemodifiers ("static")
                                                :constant-flag t
                                                :type "bool")
                                                (reparse-symbol classsubparts) [11934 11989])
                                            ("value" variable (:type "int") (reparse-symbol classsubparts) [12406 12412])
                                            ("type" variable (:type ("RET" type (:type "class") nil nil)) (reparse-symbol classsubparts) [12832 12841]))                                          
                                        :template-specifier 
                                          ( ("minus_action" type nil nil nil)
                                            ("A" type nil nil nil)
                                            ("B" type nil nil nil))                                          )
                                        (reparse-symbol namespacesubparts) [11526 12845]))                                  
                                :type "namespace")
                                (reparse-symbol namespacesubparts) [10070 12848])
                            ("detail" type
                               (:members 
                                  ( ("return_type_2_arithmetic_phase_1" type
                                       (:template 
                                          ( ("bool" type nil nil nil)
                                            ("Act" type (:type "class") nil nil)
                                            ("A" type (:type "class") nil nil)
                                            ("B" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :prototype t)
                                        (reparse-symbol namespacesubparts) [12968 13075])
                                    ("return_type_2_arithmetic_phase_2" type
                                       (:template 
                                          ( ("A" type (:type "class") nil nil)
                                            ("B" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :prototype t)
                                        (reparse-symbol namespacesubparts) [13077 13144])
                                    ("return_type_2_arithmetic_phase_3" type
                                       (:template 
                                          ( ("A" type (:type "class") nil nil)
                                            ("B" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :prototype t)
                                        (reparse-symbol namespacesubparts) [13145 13212]))                                  
                                :type "namespace")
                                (reparse-symbol namespacesubparts) [12945 13215])
                            ("return_type_2" type
                               (:template 
                                  ( ("A" type (:type "class") nil nil)
                                    ("B" type (:type "class") nil nil)
                                    ("Act" type (:type "class") nil nil))                                  
                                :type "struct"
                                :members 
                                  ( ("plain_A" type
                                       (:typedef ("detail::remove_reference_and_cv::type" type (:type "class") nil nil)
                                        :superclasses "detail::remove_reference_and_cv::type"
                                        :type "typedef")
                                        (reparse-symbol classsubparts) [13406 13472])
                                    ("plain_B" type
                                       (:typedef ("detail::remove_reference_and_cv::type" type (:type "class") nil nil)
                                        :superclasses "detail::remove_reference_and_cv::type"
                                        :type "typedef")
                                        (reparse-symbol classsubparts) [13475 13541])
                                    ("type1" variable (:type ("type" type (:type "class") nil nil)) (reparse-symbol classsubparts) [13630 13641])
                                    ("type" type
                                       (:typedef ("detail::IF_type::type" type (:type "class") nil nil)
                                        :superclasses "detail::IF_type::type"
                                        :type "typedef")
                                        (reparse-symbol classsubparts) [13726 14037]))                                  
                                :template-specifier 
                                  ( ("arithmetic_action" type nil nil nil)
                                    ("A" type nil nil nil)
                                    ("B" type nil nil nil))                                  )
                                (reparse-symbol namespacesubparts) [13312 14040])
                            ("detail" type
                               (:members 
                                  ( ("return_type_2_arithmetic_phase_1" type
                                       (:template 
                                          ( ("bool" type nil nil nil)
                                            ("Act" type (:type "class") nil nil)
                                            ("A" type (:type "class") nil nil)
                                            ("B" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :members 
                                          ( ("type" variable (:type ("type" type (:type "class") nil nil)) (reparse-symbol classsubparts) [14389 14399]))                                          )
                                        (reparse-symbol namespacesubparts) [14118 14402])
                                    ("return_type_2_arithmetic_phase_1" type
                                       (:template 
                                          ( ("Act" type (:type "class") nil nil)
                                            ("A" type (:type "class") nil nil)
                                            ("B" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :members 
                                          ( ("type" variable (:type ("type" type (:type "class") nil nil)) (reparse-symbol classsubparts) [14586 14596]))                                          
                                        :template-specifier 
                                          ( ("true" type nil nil nil)
                                            ("Act" type nil nil nil)
                                            ("A" type nil nil nil)
                                            ("B" type nil nil nil))                                          )
                                        (reparse-symbol namespacesubparts) [14426 14599])
                                    ("return_type_2_arithmetic_phase_2" type
                                       (:template 
                                          ( ("A" type (:type "class") nil nil)
                                            ("B" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :members 
                                          ( ("type" variable (:type ("type" type (:type "class") nil nil)) (reparse-symbol classsubparts) [14814 14824]))                                          )
                                        (reparse-symbol namespacesubparts) [14601 14827])
                                    ("promotion_of_unsigned_int" type
                                       (:members 
                                          ( ("type" variable (:type ("RET" type (:type "class") nil nil)) (reparse-symbol classsubparts) [15344 15353]))                                          
                                        :type "struct")
                                        (reparse-symbol namespacesubparts) [15174 15357])
                                    ("return_type_2_arithmetic_phase_2" type
                                       (:type "struct"
                                        :members 
                                          ( ("type" type
                                               (:typedef ("promotion_of_unsigned_int::type" type (:type "class") nil nil)
                                                :superclasses "promotion_of_unsigned_int::type"
                                                :type "typedef")
                                                (reparse-symbol classsubparts) [15440 15485]))                                          
                                        :template-specifier 
                                          ( ("unsigned int" type nil nil nil)
                                            ("long" type nil nil nil))                                          )
                                        (reparse-symbol namespacesubparts) [15359 15488])
                                    ("return_type_2_arithmetic_phase_2" type
                                       (:type "struct"
                                        :members 
                                          ( ("type" type
                                               (:typedef ("promotion_of_unsigned_int::type" type (:type "class") nil nil)
                                                :superclasses "promotion_of_unsigned_int::type"
                                                :type "typedef")
                                                (reparse-symbol classsubparts) [15570 15615]))                                          
                                        :template-specifier 
                                          ( ("long" type nil nil nil)
                                            ("unsigned int" type nil nil nil))                                          )
                                        (reparse-symbol namespacesubparts) [15489 15618])
                                    ("return_type_2_arithmetic_phase_3" type
                                       (:template 
                                          ( ("A" type (:type "class") nil nil)
                                            ("B" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :members 
                                          ( ("" type
                                               (:members 
                                                  ( ("promote_code_A_value" variable
                                                       (:constant-flag t
                                                        :default-value (15724 15747)
                                                        :type "int")
                                                        (reparse-symbol enumsubparts) [15701 15747])
                                                    ("promote_code_B_value" variable
                                                       (:constant-flag t
                                                        :default-value (15780 15804)
                                                        :type "int")
                                                        (reparse-symbol enumsubparts) [15757 15804]))                                                  
                                                :type "enum")
                                                (reparse-symbol classsubparts) [15694 15805])
                                            ("type" variable (:type ("RET" type (:type "class") nil nil)) (reparse-symbol classsubparts) [16136 16145]))                                          )
                                        (reparse-symbol namespacesubparts) [15621 16168]))                                  
                                :type "namespace")
                                (reparse-symbol namespacesubparts) [14042 16171])
                            ("return_type_2" type
                               (:template 
                                  ( ("A" type (:type "class") nil nil)
                                    ("B" type (:type "class") nil nil)
                                    ("Act" type (:type "class") nil nil))                                  
                                :type "struct"
                                :members 
                                  ( ("plain_A" type
                                       (:typedef ("detail::remove_reference_and_cv::type" type (:type "class") nil nil)
                                        :superclasses "detail::remove_reference_and_cv::type"
                                        :type "typedef")
                                        (reparse-symbol classsubparts) [16499 16565])
                                    ("plain_B" type
                                       (:typedef ("detail::remove_reference_and_cv::type" type (:type "class") nil nil)
                                        :superclasses "detail::remove_reference_and_cv::type"
                                        :type "typedef")
                                        (reparse-symbol classsubparts) [16568 16634])
                                    ("type1" variable (:type ("type" type (:type "class") nil nil)) (reparse-symbol classsubparts) [16720 16731])
                                    ("type" type
                                       (:typedef ("detail::IF_type::type" type (:type "class") nil nil)
                                        :superclasses "detail::IF_type::type"
                                        :type "typedef")
                                        (reparse-symbol classsubparts) [16800 17038])
                                    ("BOOST_STATIC_ASSERT" function
                                       (:prototype-flag t
                                        :type "int")
                                        (reparse-symbol classsubparts) [17394 17485]))                                  
                                :template-specifier 
                                  ( ("bitwise_action" type nil nil nil)
                                    ("A" type nil nil nil)
                                    ("B" type nil nil nil))                                  )
                                (reparse-symbol namespacesubparts) [16407 17489])
                            ("detail" type
                               (:members 
                                  ( ("get_ostream_type" type
                                       (:template 
                                          ( ("T" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :members 
                                          ( ("type" variable (:type "int") (reparse-symbol classsubparts) [18280 18287]))                                          )
                                        (reparse-symbol namespacesubparts) [18129 18290])
                                    ("get_istream_type" type
                                       (:template 
                                          ( ("T" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :members 
                                          ( ("type" variable (:type "int") (reparse-symbol classsubparts) [18443 18450]))                                          )
                                        (reparse-symbol namespacesubparts) [18292 18453])
                                    ("leftshift_type" type
                                       (:template 
                                          ( ("A" type (:type "class") nil nil)
                                            ("B" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :members 
                                          ( ("private" label nil (reparse-symbol classsubparts) [18506 18514])
                                            ("plainA" type
                                               (:typedef ("boost::remove_reference::type" type (:type "class") nil nil)
                                                :superclasses "boost::remove_reference::type"
                                                :type "typedef")
                                                (reparse-symbol classsubparts) [18517 18574])
                                            ("public" label nil (reparse-symbol classsubparts) [18575 18582])
                                            ("type" variable (:type ("type" type (:type "class") nil nil)) (reparse-symbol classsubparts) [18778 18788]))                                          )
                                        (reparse-symbol namespacesubparts) [18455 18791])
                                    ("rightshift_type" type
                                       (:template 
                                          ( ("A" type (:type "class") nil nil)
                                            ("B" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :members 
                                          ( ("private" label nil (reparse-symbol classsubparts) [18845 18853])
                                            ("plainA" type
                                               (:typedef ("boost::remove_reference::type" type (:type "class") nil nil)
                                                :superclasses "boost::remove_reference::type"
                                                :type "typedef")
                                                (reparse-symbol classsubparts) [18856 18913])
                                            ("public" label nil (reparse-symbol classsubparts) [18914 18921])
                                            ("type" variable (:type ("type" type (:type "class") nil nil)) (reparse-symbol classsubparts) [19117 19127]))                                          )
                                        (reparse-symbol namespacesubparts) [18793 19130]))                                  
                                :type "namespace")
                                (reparse-symbol namespacesubparts) [17491 19142])
                            ("return_type_2" type
                               (:template 
                                  ( ("A" type (:type "class") nil nil)
                                    ("B" type (:type "class") nil nil))                                  
                                :type "struct"
                                :members 
                                  ( ("plain_A" type
                                       (:typedef ("detail::remove_reference_and_cv::type" type (:type "class") nil nil)
                                        :superclasses "detail::remove_reference_and_cv::type"
                                        :type "typedef")
                                        (reparse-symbol classsubparts) [19262 19328])
                                    ("plain_B" type
                                       (:typedef ("detail::remove_reference_and_cv::type" type (:type "class") nil nil)
                                        :superclasses "detail::remove_reference_and_cv::type"
                                        :type "typedef")
                                        (reparse-symbol classsubparts) [19331 19397])
                                    ("type1" variable (:type ("type" type (:type "class") nil nil)) (reparse-symbol classsubparts) [19496 19507])
                                    ("type" type
                                       (:typedef ("detail::IF_type::type" type (:type "class") nil nil)
                                        :superclasses "detail::IF_type::type"
                                        :type "typedef")
                                        (reparse-symbol classsubparts) [19576 19804]))                                  
                                :template-specifier 
                                  ( ("bitwise_action" type nil nil nil)
                                    ("A" type nil nil nil)
                                    ("B" type nil nil nil))                                  )
                                (reparse-symbol namespacesubparts) [19169 19807])
                            ("return_type_2" type
                               (:template 
                                  ( ("A" type (:type "class") nil nil)
                                    ("B" type (:type "class") nil nil))                                  
                                :type "struct"
                                :members 
                                  ( ("plain_A" type
                                       (:typedef ("detail::remove_reference_and_cv::type" type (:type "class") nil nil)
                                        :superclasses "detail::remove_reference_and_cv::type"
                                        :type "typedef")
                                        (reparse-symbol classsubparts) [19914 19980])
                                    ("plain_B" type
                                       (:typedef ("detail::remove_reference_and_cv::type" type (:type "class") nil nil)
                                        :superclasses "detail::remove_reference_and_cv::type"
                                        :type "typedef")
                                        (reparse-symbol classsubparts) [19983 20049])
                                    ("type1" variable (:type ("type" type (:type "class") nil nil)) (reparse-symbol classsubparts) [20149 20160])
                                    ("type" type
                                       (:typedef ("detail::IF_type::type" type (:type "class") nil nil)
                                        :superclasses "detail::IF_type::type"
                                        :type "typedef")
                                        (reparse-symbol classsubparts) [20229 20459]))                                  
                                :template-specifier 
                                  ( ("bitwise_action" type nil nil nil)
                                    ("A" type nil nil nil)
                                    ("B" type nil nil nil))                                  )
                                (reparse-symbol namespacesubparts) [19820 20462])
                            ("plain_return_type_2" type
                               (:template 
                                  ( ("A" type (:type "class") nil nil)
                                    ("B" type (:type "class") nil nil)
                                    ("Act" type (:type "class") nil nil))                                  
                                :type "struct"
                                :members 
                                  ( ("type" type
                                       (:typedef ("bool")
                                        :superclasses "bool"
                                        :type "typedef")
                                        (reparse-symbol classsubparts) [20705 20723]))                                  
                                :template-specifier 
                                  ( ("logical_action" type nil nil nil)
                                    ("A" type nil nil nil)
                                    ("B" type nil nil nil))                                  )
                                (reparse-symbol namespacesubparts) [20607 20727])
                            ("return_type_2" type
                               (:template 
                                  ( ("A" type (:type "class") nil nil)
                                    ("B" type (:type "class") nil nil)
                                    ("Act" type (:type "class") nil nil))                                  
                                :type "struct"
                                :members 
                                  ( ("plain_A" type
                                       (:typedef ("detail::remove_reference_and_cv::type" type (:type "class") nil nil)
                                        :superclasses "detail::remove_reference_and_cv::type"
                                        :type "typedef")
                                        (reparse-symbol classsubparts) [20822 20888])
                                    ("plain_B" type
                                       (:typedef ("detail::remove_reference_and_cv::type" type (:type "class") nil nil)
                                        :superclasses "detail::remove_reference_and_cv::type"
                                        :type "typedef")
                                        (reparse-symbol classsubparts) [20891 20957])
                                    ("type" variable (:type ("type" type (:type "class") nil nil)) (reparse-symbol classsubparts) [21043 21053]))                                  
                                :template-specifier 
                                  ( ("logical_action" type nil nil nil)
                                    ("A" type nil nil nil)
                                    ("B" type nil nil nil))                                  )
                                (reparse-symbol namespacesubparts) [20729 21059])
                            ("plain_return_type_2" type
                               (:template 
                                  ( ("A" type (:type "class") nil nil)
                                    ("B" type (:type "class") nil nil)
                                    ("Act" type (:type "class") nil nil))                                  
                                :type "struct"
                                :members 
                                  ( ("type" type
                                       (:typedef ("bool")
                                        :superclasses "bool"
                                        :type "typedef")
                                        (reparse-symbol classsubparts) [21309 21327]))                                  
                                :template-specifier 
                                  ( ("relational_action" type nil nil nil)
                                    ("A" type nil nil nil)
                                    ("B" type nil nil nil))                                  )
                                (reparse-symbol namespacesubparts) [21208 21331])
                            ("return_type_2" type
                               (:template 
                                  ( ("A" type (:type "class") nil nil)
                                    ("B" type (:type "class") nil nil)
                                    ("Act" type (:type "class") nil nil))                                  
                                :type "struct"
                                :members 
                                  ( ("plain_A" type
                                       (:typedef ("detail::remove_reference_and_cv::type" type (:type "class") nil nil)
                                        :superclasses "detail::remove_reference_and_cv::type"
                                        :type "typedef")
                                        (reparse-symbol classsubparts) [21429 21495])
                                    ("plain_B" type
                                       (:typedef ("detail::remove_reference_and_cv::type" type (:type "class") nil nil)
                                        :superclasses "detail::remove_reference_and_cv::type"
                                        :type "typedef")
                                        (reparse-symbol classsubparts) [21498 21564])
                                    ("type" variable (:type ("type" type (:type "class") nil nil)) (reparse-symbol classsubparts) [21653 21663]))                                  
                                :template-specifier 
                                  ( ("relational_action" type nil nil nil)
                                    ("A" type nil nil nil)
                                    ("B" type nil nil nil))                                  )
                                (reparse-symbol namespacesubparts) [21333 21667])
                            ("return_type_2" type
                               (:template 
                                  ( ("A" type (:type "class") nil nil)
                                    ("B" type (:type "class") nil nil)
                                    ("Act" type (:type "class") nil nil))                                  
                                :type "struct"
                                :members 
                                  ( ("plain_A" type
                                       (:typedef ("detail::remove_reference_and_cv::type" type (:type "class") nil nil)
                                        :superclasses "detail::remove_reference_and_cv::type"
                                        :type "typedef")
                                        (reparse-symbol classsubparts) [22060 22126])
                                    ("plain_B" type
                                       (:typedef ("detail::remove_reference_and_cv::type" type (:type "class") nil nil)
                                        :superclasses "detail::remove_reference_and_cv::type"
                                        :type "typedef")
                                        (reparse-symbol classsubparts) [22129 22195])
                                    ("type1" variable (:type ("type" type (:type "class") nil nil)) (reparse-symbol classsubparts) [22307 22318])
                                    ("type" variable (:type ("RET" type (:type "class") nil nil)) (reparse-symbol classsubparts) [22481 22490]))                                  
                                :template-specifier 
                                  ( ("arithmetic_assignment_action" type nil nil nil)
                                    ("A" type nil nil nil)
                                    ("B" type nil nil nil))                                  )
                                (reparse-symbol namespacesubparts) [21953 22493])
                            ("return_type_2" type
                               (:template 
                                  ( ("A" type (:type "class") nil nil)
                                    ("B" type (:type "class") nil nil)
                                    ("Act" type (:type "class") nil nil))                                  
                                :type "struct"
                                :members 
                                  ( ("plain_A" type
                                       (:typedef ("detail::remove_reference_and_cv::type" type (:type "class") nil nil)
                                        :superclasses "detail::remove_reference_and_cv::type"
                                        :type "typedef")
                                        (reparse-symbol classsubparts) [22599 22665])
                                    ("plain_B" type
                                       (:typedef ("detail::remove_reference_and_cv::type" type (:type "class") nil nil)
                                        :superclasses "detail::remove_reference_and_cv::type"
                                        :type "typedef")
                                        (reparse-symbol classsubparts) [22668 22734])
                                    ("type1" variable (:type ("type" type (:type "class") nil nil)) (reparse-symbol classsubparts) [22843 22854])
                                    ("type" variable (:type ("RET" type (:type "class") nil nil)) (reparse-symbol classsubparts) [23017 23026]))                                  
                                :template-specifier 
                                  ( ("bitwise_assignment_action" type nil nil nil)
                                    ("A" type nil nil nil)
                                    ("B" type nil nil nil))                                  )
                                (reparse-symbol namespacesubparts) [22495 23029])
                            ("return_type_2" type
                               (:template 
                                  ( ("A" type (:type "class") nil nil)
                                    ("B" type (:type "class") nil nil))                                  
                                :type "struct"
                                :members 
                                  ( ("plain_A" type
                                       (:typedef ("detail::remove_reference_and_cv::type" type (:type "class") nil nil)
                                        :superclasses "detail::remove_reference_and_cv::type"
                                        :type "typedef")
                                        (reparse-symbol classsubparts) [23124 23190])
                                    ("plain_B" type
                                       (:typedef ("detail::remove_reference_and_cv::type" type (:type "class") nil nil)
                                        :superclasses "detail::remove_reference_and_cv::type"
                                        :type "typedef")
                                        (reparse-symbol classsubparts) [23193 23259])
                                    ("type1" variable (:type ("type" type (:type "class") nil nil)) (reparse-symbol classsubparts) [23369 23380])
                                    ("type" variable (:type ("RET" type (:type "class") nil nil)) (reparse-symbol classsubparts) [23543 23552]))                                  
                                :template-specifier 
                                  ( ("other_action" type nil nil nil)
                                    ("A" type nil nil nil)
                                    ("B" type nil nil nil))                                  )
                                (reparse-symbol namespacesubparts) [23031 23555])
                            ("return_type_2" type
                               (:template 
                                  ( ("A" type (:type "class") nil nil)
                                    ("B" type (:type "class") nil nil))                                  
                                :type "struct"
                                :members 
                                  ( ("plain_A" type
                                       (:typedef ("detail::remove_reference_and_cv::type" type (:type "class") nil nil)
                                        :superclasses "detail::remove_reference_and_cv::type"
                                        :type "typedef")
                                        (reparse-symbol classsubparts) [24164 24230])
                                    ("plain_B" type
                                       (:typedef ("detail::remove_reference_and_cv::type" type (:type "class") nil nil)
                                        :superclasses "detail::remove_reference_and_cv::type"
                                        :type "typedef")
                                        (reparse-symbol classsubparts) [24233 24299])
                                    ("type" variable (:type ("type" type (:type "class") nil nil)) (reparse-symbol classsubparts) [24404 24414]))                                  
                                :template-specifier 
                                  ( ("other_action" type nil nil nil)
                                    ("A" type nil nil nil)
                                    ("B" type nil nil nil))                                  )
                                (reparse-symbol namespacesubparts) [24075 24419])
                            ("detail" type
                               (:members 
                                  ( ("subscript_type" type
                                       (:template 
                                          ( ("A" type (:type "class") nil nil)
                                            ("B" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :members 
                                          ( ("type" type
                                               (:typedef ("detail::unspecified" type (:type "class") nil nil)
                                                :superclasses "detail::unspecified"
                                                :type "typedef")
                                                (reparse-symbol classsubparts) [24600 24633]))                                          )
                                        (reparse-symbol namespacesubparts) [24546 24637])
                                    ("subscript_type" type
                                       (:template 
                                          ( ("A" type (:type "class") nil nil)
                                            ("B" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :members 
                                          ( ("type" variable (:type ("A" type (:type "class") nil nil)) (reparse-symbol classsubparts) [24708 24716]))                                          
                                        :template-specifier 
                                          ( ("A" type (:pointer 1) nil nil)
                                            ("B" type nil nil nil))                                          )
                                        (reparse-symbol namespacesubparts) [24639 24719])
                                    ("subscript_type" type
                                       (:template 
                                          ( ("A" type (:type "class") nil nil)
                                            ("B" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :members 
                                          ( ("type" variable (:type ("A" type (:type "class") nil nil)) (reparse-symbol classsubparts) [24795 24803]))                                          
                                        :template-specifier 
                                          ( ("A" type (:pointer 1) nil nil)
                                            ("B" type nil nil nil))                                          )
                                        (reparse-symbol namespacesubparts) [24720 24806]))                                  
                                :type "namespace")
                                (reparse-symbol namespacesubparts) [24491 25483])
                            ("return_type_2" type
                               (:template 
                                  ( ("A" type (:type "class") nil nil)
                                    ("B" type (:type "class") nil nil))                                  
                                :type "struct"
                                :members 
                                  ( ("plain_A" type
                                       (:typedef ("detail::remove_reference_and_cv::type" type (:type "class") nil nil)
                                        :superclasses "detail::remove_reference_and_cv::type"
                                        :type "typedef")
                                        (reparse-symbol classsubparts) [25590 25656])
                                    ("plain_B" type
                                       (:typedef ("detail::remove_reference_and_cv::type" type (:type "class") nil nil)
                                        :superclasses "detail::remove_reference_and_cv::type"
                                        :type "typedef")
                                        (reparse-symbol classsubparts) [25659 25725])
                                    ("nonref_A" type
                                       (:typedef ("boost::remove_reference::type" type (:type "class") nil nil)
                                        :superclasses "boost::remove_reference::type"
                                        :type "typedef")
                                        (reparse-symbol classsubparts) [25729 25788])
                                    ("nonref_B" type
                                       (:typedef ("boost::remove_reference::type" type (:type "class") nil nil)
                                        :superclasses "boost::remove_reference::type"
                                        :type "typedef")
                                        (reparse-symbol classsubparts) [25791 25850])
                                    ("type1" variable (:type ("type" type (:type "class") nil nil)) (reparse-symbol classsubparts) [25959 25970])
                                    ("type" type
                                       (:typedef ("detail::IF_type::type" type (:type "class") nil nil)
                                        :superclasses "detail::IF_type::type"
                                        :type "typedef")
                                        (reparse-symbol classsubparts) [25976 26216]))                                  
                                :template-specifier 
                                  ( ("other_action" type nil nil nil)
                                    ("A" type nil nil nil)
                                    ("B" type nil nil nil))                                  )
                                (reparse-symbol namespacesubparts) [25499 26220]))                          
                        :type "namespace")
                        (reparse-symbol namespacesubparts) [2332 26224]))                  
                :type "namespace")
                nil [2313 26246])
            ("string" include (:system-flag t) nil [26395 26412])
            ("vector" include (:system-flag t) nil [26413 26430])
            ("map" include (:system-flag t) nil [26431 26445])
            ("deque" include (:system-flag t) nil [26446 26462])
            ("boost" type
               (:members 
                  ( ("lambda" type
                       (:members 
                          ( ("plain_return_type_2" type
                               (:template 
                                  ( ("Key" type (:type "class") nil nil)
                                    ("T" type (:type "class") nil nil)
                                    ("Cmp" type (:type "class") nil nil)
                                    ("Allocator" type (:type "class") nil nil)
                                    ("B" type (:type "class") nil nil))                                  
                                :type "struct"
                                :members 
                                  ( ("type" variable (:type ("T" type (:type "class") nil nil)) (reparse-symbol classsubparts) [27193 27201]))                                  
                                :template-specifier 
                                  ( ("other_action" type nil nil nil)
                                    ("std::map" type nil nil nil)
                                    ("B" type nil nil nil))                                  )
                                (reparse-symbol namespacesubparts) [27017 27262])
                            ("plain_return_type_2" type
                               (:template 
                                  ( ("Key" type (:type "class") nil nil)
                                    ("T" type (:type "class") nil nil)
                                    ("Cmp" type (:type "class") nil nil)
                                    ("Allocator" type (:type "class") nil nil)
                                    ("B" type (:type "class") nil nil))                                  
                                :type "struct"
                                :members 
                                  ( ("type" variable (:type ("T" type (:type "class") nil nil)) (reparse-symbol classsubparts) [27445 27453]))                                  
                                :template-specifier 
                                  ( ("other_action" type nil nil nil)
                                    ("std::multimap" type nil nil nil)
                                    ("B" type nil nil nil))                                  )
                                (reparse-symbol namespacesubparts) [27264 27514])
                            ("plain_return_type_2" type
                               (:template 
                                  ( ("T" type (:type "class") nil nil)
                                    ("Allocator" type (:type "class") nil nil)
                                    ("B" type (:type "class") nil nil))                                  
                                :type "struct"
                                :members 
                                  ( ("type" type
                                       (:typedef ("std::deque::reference" type (:type "class") nil nil)
                                        :superclasses "std::deque::reference"
                                        :type "typedef")
                                        (reparse-symbol classsubparts) [27665 27723]))                                  
                                :template-specifier 
                                  ( ("other_action" type nil nil nil)
                                    ("std::deque" type nil nil nil)
                                    ("B" type nil nil nil))                                  )
                                (reparse-symbol namespacesubparts) [27527 27726])
                            ("plain_return_type_2" type
                               (:template 
                                  ( ("T" type (:type "class") nil nil)
                                    ("Allocator" type (:type "class") nil nil)
                                    ("B" type (:type "class") nil nil))                                  
                                :type "struct"
                                :members 
                                  ( ("type" type
                                       (:typedef ("std::deque::const_reference" type (:type "class") nil nil)
                                        :superclasses "std::deque::const_reference"
                                        :type "typedef")
                                        (reparse-symbol classsubparts) [27871 27935]))                                  
                                :template-specifier 
                                  ( ("other_action" type nil nil nil)
                                    ("std::deque" type (:constant-flag t) nil nil)
                                    ("B" type nil nil nil))                                  )
                                (reparse-symbol namespacesubparts) [27727 27938])
                            ("plain_return_type_2" type
                               (:template 
                                  ( ("T" type (:type "class") nil nil)
                                    ("Allocator" type (:type "class") nil nil)
                                    ("B" type (:type "class") nil nil))                                  
                                :type "struct"
                                :members 
                                  ( ("type" type
                                       (:typedef ("std::vector::reference" type (:type "class") nil nil)
                                        :superclasses "std::vector::reference"
                                        :type "typedef")
                                        (reparse-symbol classsubparts) [28091 28150]))                                  
                                :template-specifier 
                                  ( ("other_action" type nil nil nil)
                                    ("std::vector" type nil nil nil)
                                    ("B" type nil nil nil))                                  )
                                (reparse-symbol namespacesubparts) [27952 28153])
                            ("plain_return_type_2" type
                               (:template 
                                  ( ("T" type (:type "class") nil nil)
                                    ("Allocator" type (:type "class") nil nil)
                                    ("B" type (:type "class") nil nil))                                  
                                :type "struct"
                                :members 
                                  ( ("type" type
                                       (:typedef ("std::vector::const_reference" type (:type "class") nil nil)
                                        :superclasses "std::vector::const_reference"
                                        :type "typedef")
                                        (reparse-symbol classsubparts) [28299 28364]))                                  
                                :template-specifier 
                                  ( ("other_action" type nil nil nil)
                                    ("std::vector" type (:constant-flag t) nil nil)
                                    ("B" type nil nil nil))                                  )
                                (reparse-symbol namespacesubparts) [28154 28367])
                            ("plain_return_type_2" type
                               (:template 
                                  ( ("Char" type (:type "class") nil nil)
                                    ("Traits" type (:type "class") nil nil)
                                    ("Allocator" type (:type "class") nil nil)
                                    ("B" type (:type "class") nil nil))                                  
                                :type "struct"
                                :members 
                                  ( ("type" type
                                       (:typedef ("std::basic_string::reference" type (:type "class") nil nil)
                                        :superclasses "std::basic_string::reference"
                                        :type "typedef")
                                        (reparse-symbol classsubparts) [28560 28636]))                                  
                                :template-specifier 
                                  ( ("other_action" type nil nil nil)
                                    ("std::basic_string" type nil nil nil)
                                    ("B" type nil nil nil))                                  )
                                (reparse-symbol namespacesubparts) [28387 28639])
                            ("plain_return_type_2" type
                               (:template 
                                  ( ("Char" type (:type "class") nil nil)
                                    ("Traits" type (:type "class") nil nil)
                                    ("Allocator" type (:type "class") nil nil)
                                    ("B" type (:type "class") nil nil))                                  
                                :type "struct"
                                :members 
                                  ( ("type" type
                                       (:typedef ("std::basic_string::const_reference" type (:type "class") nil nil)
                                        :superclasses "std::basic_string::const_reference"
                                        :type "typedef")
                                        (reparse-symbol classsubparts) [28819 28901]))                                  
                                :template-specifier 
                                  ( ("other_action" type nil nil nil)
                                    ("std::basic_string" type (:constant-flag t) nil nil)
                                    ("B" type nil nil nil))                                  )
                                (reparse-symbol namespacesubparts) [28640 28904]))                          
                        :type "namespace")
                        (reparse-symbol namespacesubparts) [26997 28908]))                  
                :type "namespace")
                nil [26978 28930]))          
    :file "operator_return_type_traits.hpp"
    :pointmax 28960
    :fsize 28959
    :lastmodtime '(17765 48449)
    :unmatched-syntax '((TYPEDEF 27437 . 27444) (TYPEDEF 27185 . 27192) (punctuation 25958 . 25959) (punctuation 25957 . 25958) (punctuation 25956 . 25957) (symbol 25944 . 25951) (punctuation 25942 . 25943) (symbol 25935 . 25942) (punctuation 25933 . 25934) (punctuation 25932 . 25933) (symbol 25916 . 25932) (punctuation 25915 . 25916) (symbol 25903 . 25915) (punctuation 25895 . 25896) (symbol 25876 . 25895) (TYPENAME 25862 . 25870) (TYPEDEF 25854 . 25861) (punctuation 25479 . 25480) (semantic-list 25440 . 25479) (punctuation 25438 . 25439) (symbol 25437 . 25438) (punctuation 25435 . 25436) (semantic-list 25432 . 25435) (symbol 25431 . 25432) (VOLATILE 25422 . 25430) (CONST 25416 . 25421) (punctuation 25415 . 25416) (symbol 25401 . 25415) (STRUCT 25394 . 25400) (punctuation 25392 . 25393) (symbol 25391 . 25392) (INT 25387 . 25390) (punctuation 25385 . 25386) (symbol 25384 . 25385) (CLASS 25378 . 25383) (punctuation 25376 . 25377) (symbol 25375 . 25376) (CLASS 25369 . 25374) (punctuation 25368 . 25369) (TEMPLATE 25360 . 25368) (punctuation 25358 . 25359) (semantic-list 25325 . 25358) (punctuation 25323 . 25324) (symbol 25322 . 25323) (punctuation 25320 . 25321) (semantic-list 25317 . 25320) (symbol 25316 . 25317) (VOLATILE 25307 . 25315) (punctuation 25306 . 25307) (symbol 25292 . 25306) (STRUCT 25285 . 25291) (punctuation 25283 . 25284) (symbol 25282 . 25283) (INT 25278 . 25281) (punctuation 25276 . 25277) (symbol 25275 . 25276) (CLASS 25269 . 25274) (punctuation 25267 . 25268) (symbol 25266 . 25267) (CLASS 25260 . 25265) (punctuation 25259 . 25260) (TEMPLATE 25251 . 25259) (punctuation 25249 . 25250) (semantic-list 25219 . 25249) (punctuation 25217 . 25218) (symbol 25216 . 25217) (punctuation 25214 . 25215) (semantic-list 25211 . 25214) (symbol 25210 . 25211) (CONST 25204 . 25209) (punctuation 25203 . 25204) (symbol 25189 . 25203) (STRUCT 25182 . 25188) (punctuation 25180 . 25181) (symbol 25179 . 25180) (INT 25175 . 25178) (punctuation 25173 . 25174) (symbol 25172 . 25173) (CLASS 25166 . 25171) (punctuation 25164 . 25165) (symbol 25163 . 25164) (CLASS 25157 . 25162) (punctuation 25156 . 25157) (TEMPLATE 25148 . 25156) (punctuation 25084 . 25085) (semantic-list 25060 . 25084) (punctuation 25058 . 25059) (symbol 25057 . 25058) (punctuation 25055 . 25056) (semantic-list 25052 . 25055) (symbol 25051 . 25052) (punctuation 25050 . 25051) (symbol 25036 . 25050) (STRUCT 25029 . 25035) (punctuation 25027 . 25028) (symbol 25026 . 25027) (INT 25022 . 25025) (punctuation 25020 . 25021) (symbol 25019 . 25020) (CLASS 25013 . 25018) (punctuation 25011 . 25012) (symbol 25010 . 25011) (CLASS 25004 . 25009) (punctuation 25003 . 25004) (TEMPLATE 24995 . 25003) (punctuation 24991 . 24992) (semantic-list 24969 . 24991) (punctuation 24967 . 24968) (symbol 24966 . 24967) (punctuation 24964 . 24965) (VOLATILE 24956 . 24964) (CONST 24950 . 24955) (punctuation 24948 . 24949) (symbol 24947 . 24948) (punctuation 24946 . 24947) (symbol 24932 . 24946) (STRUCT 24925 . 24931) (punctuation 24923 . 24924) (symbol 24922 . 24923) (CLASS 24916 . 24921) (punctuation 24914 . 24915) (symbol 24913 . 24914) (CLASS 24907 . 24912) (punctuation 24906 . 24907) (TEMPLATE 24897 . 24905) (punctuation 24895 . 24896) (semantic-list 24873 . 24895) (punctuation 24871 . 24872) (symbol 24870 . 24871) (punctuation 24868 . 24869) (VOLATILE 24860 . 24868) (punctuation 24858 . 24859) (symbol 24857 . 24858) (punctuation 24856 . 24857) (symbol 24842 . 24856) (STRUCT 24835 . 24841) (punctuation 24833 . 24834) (symbol 24832 . 24833) (CLASS 24826 . 24831) (punctuation 24824 . 24825) (symbol 24823 . 24824) (CLASS 24817 . 24822) (punctuation 24816 . 24817) (TEMPLATE 24807 . 24815) (TYPEDEF 24787 . 24794) (TYPEDEF 24700 . 24707) (punctuation 24403 . 24404) (punctuation 24402 . 24403) (punctuation 24401 . 24402) (symbol 24389 . 24396) (punctuation 24387 . 24388) (symbol 24380 . 24387) (punctuation 24378 . 24379) (punctuation 24377 . 24378) (symbol 24365 . 24377) (punctuation 24364 . 24365) (symbol 24352 . 24364) (punctuation 24344 . 24345) (symbol 24325 . 24344) (TYPENAME 24311 . 24319) (TYPEDEF 24303 . 24310) (punctuation 23542 . 23543) (punctuation 23541 . 23542) (punctuation 23540 . 23541) (symbol 23530 . 23535) (punctuation 23522 . 23523) (symbol 23518 . 23522) (punctuation 23517 . 23518) (punctuation 23516 . 23517) (punctuation 23515 . 23516) (symbol 23514 . 23515) (punctuation 23513 . 23514) (symbol 23500 . 23513) (punctuation 23499 . 23500) (punctuation 23498 . 23499) (symbol 23493 . 23498) (TYPENAME 23484 . 23492) (punctuation 23475 . 23476) (symbol 23470 . 23475) (punctuation 23469 . 23470) (punctuation 23468 . 23469) (punctuation 23467 . 23468) (symbol 23456 . 23467) (punctuation 23455 . 23456) (punctuation 23454 . 23455) (symbol 23448 . 23454) (punctuation 23446 . 23447) (symbol 23441 . 23446) (punctuation 23440 . 23441) (symbol 23433 . 23440) (punctuation 23432 . 23433) (punctuation 23431 . 23432) (symbol 23426 . 23431) (punctuation 23418 . 23419) (symbol 23416 . 23418) (punctuation 23415 . 23416) (punctuation 23414 . 23415) (symbol 23408 . 23414) (TYPENAME 23394 . 23402) (TYPEDEF 23386 . 23393) (punctuation 23368 . 23369) (punctuation 23367 . 23368) (punctuation 23366 . 23367) (symbol 23354 . 23361) (punctuation 23352 . 23353) (symbol 23345 . 23352) (punctuation 23343 . 23344) (punctuation 23342 . 23343) (symbol 23325 . 23342) (punctuation 23324 . 23325) (symbol 23312 . 23324) (punctuation 23304 . 23305) (symbol 23285 . 23304) (TYPENAME 23271 . 23279) (TYPEDEF 23263 . 23270) (punctuation 23016 . 23017) (punctuation 23015 . 23016) (punctuation 23014 . 23015) (symbol 23004 . 23009) (punctuation 22996 . 22997) (symbol 22992 . 22996) (punctuation 22991 . 22992) (punctuation 22990 . 22991) (punctuation 22989 . 22990) (symbol 22988 . 22989) (punctuation 22987 . 22988) (symbol 22974 . 22987) (punctuation 22973 . 22974) (punctuation 22972 . 22973) (symbol 22967 . 22972) (TYPENAME 22958 . 22966) (punctuation 22949 . 22950) (symbol 22944 . 22949) (punctuation 22943 . 22944) (punctuation 22942 . 22943) (punctuation 22941 . 22942) (symbol 22930 . 22941) (punctuation 22929 . 22930) (punctuation 22928 . 22929) (symbol 22922 . 22928) (punctuation 22920 . 22921) (symbol 22915 . 22920) (punctuation 22914 . 22915) (symbol 22907 . 22914) (punctuation 22906 . 22907) (punctuation 22905 . 22906) (symbol 22900 . 22905) (punctuation 22892 . 22893) (symbol 22890 . 22892) (punctuation 22889 . 22890) (punctuation 22888 . 22889) (symbol 22882 . 22888) (TYPENAME 22868 . 22876) (TYPEDEF 22860 . 22867) (punctuation 22842 . 22843) (punctuation 22841 . 22842) (punctuation 22840 . 22841) (symbol 22828 . 22835) (punctuation 22826 . 22827) (symbol 22819 . 22826) (punctuation 22817 . 22818) (punctuation 22816 . 22817) (symbol 22813 . 22816) (punctuation 22812 . 22813) (symbol 22787 . 22812) (punctuation 22779 . 22780) (symbol 22760 . 22779) (TYPENAME 22746 . 22754) (TYPEDEF 22738 . 22745) (punctuation 22480 . 22481) (punctuation 22479 . 22480) (punctuation 22478 . 22479) (symbol 22468 . 22473) (punctuation 22460 . 22461) (symbol 22456 . 22460) (punctuation 22455 . 22456) (punctuation 22454 . 22455) (punctuation 22453 . 22454) (symbol 22452 . 22453) (punctuation 22451 . 22452) (symbol 22438 . 22451) (punctuation 22437 . 22438) (punctuation 22436 . 22437) (symbol 22431 . 22436) (TYPENAME 22422 . 22430) (punctuation 22413 . 22414) (symbol 22408 . 22413) (punctuation 22407 . 22408) (punctuation 22406 . 22407) (punctuation 22405 . 22406) (symbol 22394 . 22405) (punctuation 22393 . 22394) (punctuation 22392 . 22393) (symbol 22386 . 22392) (punctuation 22384 . 22385) (symbol 22379 . 22384) (punctuation 22378 . 22379) (symbol 22371 . 22378) (punctuation 22370 . 22371) (punctuation 22369 . 22370) (symbol 22364 . 22369) (punctuation 22356 . 22357) (symbol 22354 . 22356) (punctuation 22353 . 22354) (punctuation 22352 . 22353) (symbol 22346 . 22352) (TYPENAME 22332 . 22340) (TYPEDEF 22324 . 22331) (punctuation 22306 . 22307) (punctuation 22305 . 22306) (punctuation 22304 . 22305) (symbol 22292 . 22299) (punctuation 22290 . 22291) (symbol 22283 . 22290) (punctuation 22281 . 22282) (punctuation 22280 . 22281) (symbol 22277 . 22280) (punctuation 22276 . 22277) (symbol 22248 . 22276) (punctuation 22240 . 22241) (symbol 22221 . 22240) (TYPENAME 22207 . 22215) (TYPEDEF 22199 . 22206) (punctuation 21652 . 21653) (punctuation 21651 . 21652) (punctuation 21650 . 21651) (symbol 21643 . 21650) (punctuation 21641 . 21642) (symbol 21634 . 21641) (punctuation 21632 . 21633) (punctuation 21631 . 21632) (symbol 21628 . 21631) (punctuation 21627 . 21628) (symbol 21610 . 21627) (punctuation 21609 . 21610) (symbol 21590 . 21609) (TYPENAME 21576 . 21584) (TYPEDEF 21568 . 21575) (punctuation 21042 . 21043) (punctuation 21041 . 21042) (punctuation 21040 . 21041) (symbol 21033 . 21040) (punctuation 21031 . 21032) (symbol 21024 . 21031) (punctuation 21022 . 21023) (punctuation 21021 . 21022) (symbol 21018 . 21021) (punctuation 21017 . 21018) (symbol 21003 . 21017) (punctuation 21002 . 21003) (symbol 20983 . 21002) (TYPENAME 20969 . 20977) (TYPEDEF 20961 . 20968) (punctuation 20148 . 20149) (punctuation 20147 . 20148) (punctuation 20146 . 20147) (symbol 20139 . 20146) (punctuation 20137 . 20138) (symbol 20130 . 20137) (punctuation 20128 . 20129) (punctuation 20127 . 20128) (symbol 20110 . 20127) (punctuation 20109 . 20110) (symbol 20095 . 20109) (punctuation 20094 . 20095) (symbol 20075 . 20094) (TYPENAME 20061 . 20069) (TYPEDEF 20053 . 20060) (punctuation 19495 . 19496) (punctuation 19494 . 19495) (punctuation 19493 . 19494) (symbol 19486 . 19493) (punctuation 19484 . 19485) (symbol 19477 . 19484) (punctuation 19475 . 19476) (punctuation 19474 . 19475) (symbol 19458 . 19474) (punctuation 19457 . 19458) (symbol 19443 . 19457) (punctuation 19442 . 19443) (symbol 19423 . 19442) (TYPENAME 19409 . 19417) (TYPEDEF 19401 . 19408) (punctuation 19116 . 19117) (punctuation 19115 . 19116) (punctuation 19114 . 19115) (punctuation 19110 . 19111) (symbol 19109 . 19110) (punctuation 19108 . 19109) (symbol 19085 . 19108) (punctuation 19084 . 19085) (punctuation 19083 . 19084) (symbol 19077 . 19083) (punctuation 19044 . 19045) (punctuation 19043 . 19044) (symbol 19037 . 19043) (punctuation 19036 . 19037) (symbol 19020 . 19036) (punctuation 19013 . 19014) (symbol 19008 . 19013) (punctuation 19007 . 19008) (punctuation 19006 . 19007) (punctuation 19005 . 19006) (symbol 18992 . 19005) (punctuation 18991 . 18992) (punctuation 18990 . 18991) (symbol 18987 . 18990) (punctuation 18985 . 18986) (symbol 18979 . 18985) (punctuation 18978 . 18979) (symbol 18962 . 18978) (punctuation 18956 . 18957) (symbol 18949 . 18956) (punctuation 18948 . 18949) (punctuation 18947 . 18948) (symbol 18941 . 18947) (TYPENAME 18932 . 18940) (TYPEDEF 18924 . 18931) (punctuation 18777 . 18778) (punctuation 18776 . 18777) (punctuation 18775 . 18776) (punctuation 18771 . 18772) (symbol 18770 . 18771) (punctuation 18769 . 18770) (symbol 18746 . 18769) (punctuation 18745 . 18746) (punctuation 18744 . 18745) (symbol 18738 . 18744) (punctuation 18705 . 18706) (punctuation 18704 . 18705) (symbol 18698 . 18704) (punctuation 18697 . 18698) (symbol 18681 . 18697) (punctuation 18674 . 18675) (symbol 18669 . 18674) (punctuation 18668 . 18669) (punctuation 18667 . 18668) (punctuation 18666 . 18667) (symbol 18653 . 18666) (punctuation 18652 . 18653) (punctuation 18651 . 18652) (symbol 18648 . 18651) (punctuation 18646 . 18647) (symbol 18640 . 18646) (punctuation 18639 . 18640) (symbol 18623 . 18639) (punctuation 18617 . 18618) (symbol 18610 . 18617) (punctuation 18609 . 18610) (punctuation 18608 . 18609) (symbol 18602 . 18608) (TYPENAME 18593 . 18601) (TYPEDEF 18585 . 18592) (punctuation 18442 . 18443) (symbol 18431 . 18442) (punctuation 18430 . 18431) (punctuation 18429 . 18430) (symbol 18428 . 18429) (TYPENAME 18419 . 18427) (punctuation 18387 . 18388) (symbol 18378 . 18387) (punctuation 18377 . 18378) (punctuation 18376 . 18377) (symbol 18375 . 18376) (TYPENAME 18366 . 18374) (punctuation 18365 . 18366) (symbol 18352 . 18365) (punctuation 18351 . 18352) (punctuation 18350 . 18351) (symbol 18347 . 18350) (TYPEDEF 18339 . 18346) (punctuation 18279 . 18280) (symbol 18268 . 18279) (punctuation 18267 . 18268) (punctuation 18266 . 18267) (symbol 18265 . 18266) (TYPENAME 18256 . 18264) (punctuation 18224 . 18225) (symbol 18215 . 18224) (punctuation 18214 . 18215) (punctuation 18213 . 18214) (symbol 18212 . 18213) (TYPENAME 18203 . 18211) (punctuation 18202 . 18203) (symbol 18189 . 18202) (punctuation 18188 . 18189) (punctuation 18187 . 18188) (symbol 18184 . 18187) (TYPEDEF 18176 . 18183) (semantic-list 17415 . 17483) (punctuation 17414 . 17415) (punctuation 16719 . 16720) (punctuation 16718 . 16719) (punctuation 16717 . 16718) (symbol 16710 . 16717) (punctuation 16708 . 16709) (symbol 16701 . 16708) (punctuation 16699 . 16700) (punctuation 16698 . 16699) (symbol 16695 . 16698) (punctuation 16694 . 16695) (symbol 16680 . 16694) (punctuation 16679 . 16680) (symbol 16660 . 16679) (TYPENAME 16646 . 16654) (TYPEDEF 16638 . 16645) (punctuation 16135 . 16136) (punctuation 16134 . 16135) (punctuation 16133 . 16134) (symbol 16125 . 16128) (punctuation 16124 . 16125) (punctuation 16123 . 16124) (punctuation 16122 . 16123) (symbol 16114 . 16115) (punctuation 16103 . 16104) (symbol 16102 . 16103) (punctuation 16091 . 16092) (semantic-list 16036 . 16091) (punctuation 16026 . 16027) (symbol 16024 . 16026) (punctuation 16023 . 16024) (punctuation 16022 . 16023) (symbol 16016 . 16022) (TYPENAME 16007 . 16015) (punctuation 15999 . 16000) (punctuation 15998 . 15999) (symbol 15966 . 15998) (punctuation 15965 . 15966) (symbol 15936 . 15965) (punctuation 15935 . 15936) (punctuation 15934 . 15935) (symbol 15928 . 15934) (punctuation 15920 . 15921) (number 15919 . 15920) (punctuation 15918 . 15919) (punctuation 15916 . 15917) (punctuation 15915 . 15916) (symbol 15894 . 15914) (punctuation 15892 . 15893) (punctuation 15891 . 15892) (number 15889 . 15890) (punctuation 15888 . 15889) (punctuation 15886 . 15887) (punctuation 15885 . 15886) (symbol 15864 . 15884) (punctuation 15856 . 15857) (symbol 15854 . 15856) (punctuation 15853 . 15854) (punctuation 15852 . 15853) (symbol 15846 . 15852) (TYPENAME 15833 . 15841) (TYPEDEF 15825 . 15832) (punctuation 15343 . 15344) (punctuation 15342 . 15343) (punctuation 15341 . 15342) (LONG 15337 . 15341) (punctuation 15319 . 15320) (LONG 15315 . 15319) (UNSIGNED 15306 . 15314) (punctuation 15280 . 15281) (semantic-list 15266 . 15280) (SIZEOF 15260 . 15266) (punctuation 15258 . 15259) (punctuation 15257 . 15258) (semantic-list 15250 . 15256) (SIZEOF 15244 . 15250) (punctuation 15243 . 15244) (symbol 15241 . 15243) (punctuation 15240 . 15241) (punctuation 15239 . 15240) (symbol 15233 . 15239) (TYPEDEF 15217 . 15224) (punctuation 14813 . 14814) (punctuation 14812 . 14813) (punctuation 14811 . 14812) (symbol 14802 . 14806) (punctuation 14801 . 14802) (punctuation 14800 . 14801) (punctuation 14799 . 14800) (symbol 14798 . 14799) (punctuation 14797 . 14798) (symbol 14783 . 14797) (TYPENAME 14774 . 14782) (punctuation 14765 . 14766) (symbol 14761 . 14765) (punctuation 14760 . 14761) (punctuation 14759 . 14760) (punctuation 14758 . 14759) (symbol 14757 . 14758) (punctuation 14756 . 14757) (symbol 14742 . 14756) (TYPENAME 14733 . 14741) (punctuation 14725 . 14726) (symbol 14693 . 14725) (TYPENAME 14680 . 14688) (TYPEDEF 14672 . 14679) (punctuation 14585 . 14586) (punctuation 14584 . 14585) (punctuation 14583 . 14584) (symbol 14582 . 14583) (punctuation 14580 . 14581) (symbol 14579 . 14580) (punctuation 14577 . 14578) (symbol 14574 . 14577) (punctuation 14573 . 14574) (symbol 14548 . 14573) (TYPENAME 14534 . 14542) (TYPEDEF 14526 . 14533) (punctuation 14388 . 14389) (punctuation 14387 . 14388) (punctuation 14386 . 14387) (symbol 14377 . 14381) (punctuation 14376 . 14377) (punctuation 14375 . 14376) (punctuation 14374 . 14375) (symbol 14373 . 14374) (punctuation 14372 . 14373) (symbol 14349 . 14372) (TYPENAME 14340 . 14348) (punctuation 14332 . 14333) (symbol 14328 . 14332) (punctuation 14327 . 14328) (punctuation 14326 . 14327) (punctuation 14325 . 14326) (symbol 14324 . 14325) (punctuation 14323 . 14324) (symbol 14300 . 14323) (TYPENAME 14291 . 14299) (punctuation 14283 . 14284) (symbol 14251 . 14283) (TYPENAME 14237 . 14245) (TYPEDEF 14229 . 14236) (punctuation 13629 . 13630) (punctuation 13628 . 13629) (punctuation 13627 . 13628) (symbol 13620 . 13627) (punctuation 13618 . 13619) (symbol 13611 . 13618) (punctuation 13609 . 13610) (punctuation 13608 . 13609) (symbol 13605 . 13608) (punctuation 13604 . 13605) (symbol 13587 . 13604) (punctuation 13586 . 13587) (symbol 13567 . 13586) (TYPENAME 13553 . 13561) (TYPEDEF 13545 . 13552) (punctuation 12831 . 12832) (punctuation 12830 . 12831) (punctuation 12829 . 12830) (symbol 12823 . 12826) (punctuation 12822 . 12823) (punctuation 12821 . 12822) (punctuation 12820 . 12821) (punctuation 12814 . 12815) (symbol 12788 . 12814) (punctuation 12787 . 12788) (punctuation 12786 . 12787) (symbol 12780 . 12786) (punctuation 12779 . 12780) (symbol 12750 . 12779) (punctuation 12749 . 12750) (punctuation 12748 . 12749) (symbol 12742 . 12748) (punctuation 12733 . 12734) (symbol 12731 . 12733) (punctuation 12722 . 12723) (symbol 12710 . 12722) (punctuation 12702 . 12703) (symbol 12700 . 12702) (punctuation 12699 . 12700) (punctuation 12698 . 12699) (symbol 12692 . 12698) (TYPENAME 12683 . 12691) (punctuation 12677 . 12678) (symbol 12668 . 12677) (punctuation 12667 . 12668) (punctuation 12666 . 12667) (symbol 12663 . 12666) (CONST 12657 . 12662) (punctuation 12655 . 12656) (symbol 12638 . 12655) (punctuation 12632 . 12633) (symbol 12630 . 12632) (punctuation 12629 . 12630) (punctuation 12628 . 12629) (symbol 12622 . 12628) (TYPENAME 12610 . 12618) (TYPEDEF 12602 . 12609) (punctuation 12405 . 12406) (punctuation 12404 . 12405) (punctuation 12403 . 12404) (symbol 12394 . 12398) (punctuation 12393 . 12394) (punctuation 12392 . 12393) (punctuation 12391 . 12392) (symbol 12380 . 12384) (punctuation 12379 . 12380) (punctuation 12378 . 12379) (punctuation 12377 . 12378) (symbol 12364 . 12368) (punctuation 12363 . 12364) (punctuation 12362 . 12363) (punctuation 12361 . 12362) (symbol 12359 . 12361) (punctuation 12358 . 12359) (symbol 12346 . 12358) (punctuation 12345 . 12346) (punctuation 12344 . 12345) (symbol 12339 . 12344) (TYPENAME 12330 . 12338) (punctuation 12318 . 12319) (symbol 12304 . 12318) (punctuation 12303 . 12304) (punctuation 12302 . 12303) (symbol 12297 . 12302) (TYPENAME 12288 . 12296) (punctuation 12278 . 12279) (symbol 12266 . 12278) (punctuation 12265 . 12266) (punctuation 12264 . 12265) (symbol 12259 . 12264) (TYPENAME 12250 . 12258) (punctuation 12242 . 12243) (symbol 12238 . 12242) (punctuation 12237 . 12238) (punctuation 12236 . 12237) (punctuation 12235 . 12236) (symbol 12224 . 12228) (punctuation 12223 . 12224) (punctuation 12222 . 12223) (punctuation 12221 . 12222) (symbol 12208 . 12212) (punctuation 12207 . 12208) (punctuation 12206 . 12207) (punctuation 12205 . 12206) (symbol 12203 . 12205) (punctuation 12202 . 12203) (symbol 12190 . 12202) (punctuation 12189 . 12190) (punctuation 12188 . 12189) (symbol 12183 . 12188) (TYPENAME 12174 . 12182) (punctuation 12162 . 12163) (symbol 12148 . 12162) (punctuation 12147 . 12148) (punctuation 12146 . 12147) (symbol 12141 . 12146) (TYPENAME 12132 . 12140) (punctuation 12122 . 12123) (symbol 12110 . 12122) (punctuation 12109 . 12110) (punctuation 12108 . 12109) (symbol 12103 . 12108) (TYPENAME 12094 . 12102) (punctuation 12086 . 12087) (symbol 12079 . 12086) (punctuation 12078 . 12079) (punctuation 12077 . 12078) (symbol 12072 . 12077) (punctuation 12065 . 12066) (punctuation 12064 . 12065) (symbol 12051 . 12063) (punctuation 12049 . 12050) (punctuation 12048 . 12049) (symbol 12035 . 12047) (punctuation 12029 . 12030) (symbol 12011 . 12028) (BOOL 12006 . 12010) (CONST 12000 . 12005) (STATIC 11993 . 11999) (punctuation 11788 . 11789) (punctuation 11787 . 11788) (punctuation 11786 . 11787) (symbol 11782 . 11786) (punctuation 11781 . 11782) (punctuation 11780 . 11781) (punctuation 11779 . 11780) (symbol 11778 . 11779) (punctuation 11777 . 11778) (symbol 11761 . 11777) (punctuation 11760 . 11761) (punctuation 11759 . 11760) (symbol 11754 . 11759) (TYPENAME 11745 . 11753) (punctuation 11744 . 11745) (symbol 11728 . 11744) (TYPENAME 11714 . 11722) (TYPEDEF 11706 . 11713) (punctuation 11694 . 11695) (punctuation 11693 . 11694) (punctuation 11692 . 11693) (symbol 11688 . 11692) (punctuation 11687 . 11688) (punctuation 11686 . 11687) (punctuation 11685 . 11686) (symbol 11684 . 11685) (punctuation 11683 . 11684) (symbol 11667 . 11683) (punctuation 11666 . 11667) (punctuation 11665 . 11666) (symbol 11660 . 11665) (TYPENAME 11651 . 11659) (punctuation 11650 . 11651) (symbol 11634 . 11650) (TYPENAME 11620 . 11628) (TYPEDEF 11612 . 11619) (punctuation 11509 . 11510) (punctuation 11508 . 11509) (punctuation 11507 . 11508) (symbol 11501 . 11504) (punctuation 11500 . 11501) (punctuation 11499 . 11500) (punctuation 11498 . 11499) (symbol 11496 . 11498) (punctuation 11494 . 11495) (symbol 11492 . 11494) (punctuation 11490 . 11491) (symbol 11478 . 11490) (punctuation 11477 . 11478) (symbol 11475 . 11477) (punctuation 11474 . 11475) (punctuation 11473 . 11474) (symbol 11467 . 11473) (TYPENAME 11458 . 11466) (punctuation 11450 . 11451) (punctuation 11449 . 11450) (symbol 11416 . 11442) (punctuation 11415 . 11416) (punctuation 11414 . 11415) (symbol 11408 . 11414) (punctuation 11398 . 11399) (symbol 11369 . 11398) (punctuation 11368 . 11369) (punctuation 11367 . 11368) (symbol 11361 . 11367) (punctuation 11352 . 11353) (symbol 11340 . 11352) (punctuation 11338 . 11339) (punctuation 11337 . 11338) (symbol 11324 . 11336) (punctuation 11318 . 11319) (symbol 11316 . 11318) (punctuation 11315 . 11316) (punctuation 11314 . 11315) (symbol 11308 . 11314) (TYPENAME 11296 . 11304) (TYPEDEF 11288 . 11295) (punctuation 10901 . 10902) (punctuation 10900 . 10901) (punctuation 10899 . 10900) (symbol 10895 . 10899) (punctuation 10894 . 10895) (punctuation 10893 . 10894) (punctuation 10892 . 10893) (symbol 10891 . 10892) (punctuation 10890 . 10891) (symbol 10874 . 10890) (punctuation 10873 . 10874) (punctuation 10872 . 10873) (symbol 10867 . 10872) (TYPENAME 10858 . 10866) (punctuation 10857 . 10858) (symbol 10841 . 10857) (TYPENAME 10827 . 10835) (TYPEDEF 10819 . 10826) (punctuation 10807 . 10808) (punctuation 10806 . 10807) (punctuation 10805 . 10806) (symbol 10801 . 10805) (punctuation 10800 . 10801) (punctuation 10799 . 10800) (punctuation 10798 . 10799) (symbol 10797 . 10798) (punctuation 10796 . 10797) (symbol 10780 . 10796) (punctuation 10779 . 10780) (punctuation 10778 . 10779) (symbol 10773 . 10778) (TYPENAME 10764 . 10772) (punctuation 10763 . 10764) (symbol 10747 . 10763) (TYPENAME 10733 . 10741) (TYPEDEF 10725 . 10732) (punctuation 9678 . 9679) (punctuation 9677 . 9678) (punctuation 9676 . 9677) (punctuation 9672 . 9673) (symbol 9667 . 9672) (punctuation 9666 . 9667) (symbol 9650 . 9666) (punctuation 9649 . 9650) (punctuation 9648 . 9649) (symbol 9642 . 9648) (punctuation 9636 . 9637) (punctuation 9635 . 9636) (symbol 9626 . 9630) (punctuation 9625 . 9626) (punctuation 9624 . 9625) (punctuation 9623 . 9624) (symbol 9622 . 9623) (punctuation 9621 . 9622) (symbol 9605 . 9621) (punctuation 9604 . 9605) (punctuation 9603 . 9604) (symbol 9598 . 9603) (TYPENAME 9589 . 9597) (punctuation 9581 . 9582) (symbol 9566 . 9581) (punctuation 9565 . 9566) (punctuation 9564 . 9565) (symbol 9558 . 9564) (punctuation 9551 . 9552) (symbol 9546 . 9551) (punctuation 9545 . 9546) (punctuation 9544 . 9545) (punctuation 9543 . 9544) (symbol 9532 . 9543) (punctuation 9531 . 9532) (punctuation 9530 . 9531) (symbol 9524 . 9530) (punctuation 9522 . 9523) (symbol 9517 . 9522) (punctuation 9516 . 9517) (symbol 9509 . 9516) (punctuation 9508 . 9509) (punctuation 9507 . 9508) (symbol 9502 . 9507) (punctuation 9496 . 9497) (symbol 9489 . 9496) (punctuation 9488 . 9489) (punctuation 9487 . 9488) (symbol 9481 . 9487) (TYPENAME 9469 . 9477) (TYPEDEF 9461 . 9468) (punctuation 9352 . 9353) (punctuation 9351 . 9352) (punctuation 9350 . 9351) (symbol 9341 . 9345) (punctuation 9340 . 9341) (punctuation 9339 . 9340) (punctuation 9338 . 9339) (symbol 9337 . 9338) (punctuation 9336 . 9337) (symbol 9313 . 9336) (punctuation 9312 . 9313) (punctuation 9311 . 9312) (symbol 9305 . 9311) (TYPENAME 9296 . 9304) (punctuation 9287 . 9288) (punctuation 9286 . 9287) (symbol 9269 . 9286) (punctuation 9268 . 9269) (symbol 9256 . 9268) (punctuation 9248 . 9249) (symbol 9229 . 9248) (TYPENAME 9220 . 9228) (TYPEDEF 9207 . 9214) (punctuation 9101 . 9102) (semantic-list 9062 . 9101) (punctuation 9060 . 9061) (semantic-list 9057 . 9060) (symbol 9056 . 9057) (VOLATILE 9047 . 9055) (CONST 9041 . 9046) (punctuation 9040 . 9041) (symbol 9025 . 9040) (STRUCT 9018 . 9024) (punctuation 9016 . 9017) (symbol 9015 . 9016) (INT 9011 . 9014) (punctuation 9009 . 9010) (symbol 9008 . 9009) (CLASS 9002 . 9007) (punctuation 9001 . 9002) (TEMPLATE 8993 . 9001) (punctuation 8991 . 8992) (semantic-list 8958 . 8991) (punctuation 8956 . 8957) (semantic-list 8953 . 8956) (symbol 8952 . 8953) (VOLATILE 8943 . 8951) (punctuation 8942 . 8943) (symbol 8927 . 8942) (STRUCT 8920 . 8926) (punctuation 8918 . 8919) (symbol 8917 . 8918) (INT 8913 . 8916) (punctuation 8911 . 8912) (symbol 8910 . 8911) (CLASS 8904 . 8909) (punctuation 8903 . 8904) (TEMPLATE 8895 . 8903) (punctuation 8893 . 8894) (semantic-list 8863 . 8893) (punctuation 8861 . 8862) (semantic-list 8858 . 8861) (symbol 8857 . 8858) (CONST 8851 . 8856) (punctuation 8850 . 8851) (symbol 8835 . 8850) (STRUCT 8828 . 8834) (punctuation 8826 . 8827) (symbol 8825 . 8826) (INT 8821 . 8824) (punctuation 8819 . 8820) (symbol 8818 . 8819) (CLASS 8812 . 8817) (punctuation 8811 . 8812) (TEMPLATE 8803 . 8811) (punctuation 8801 . 8802) (semantic-list 8777 . 8801) (punctuation 8775 . 8776) (semantic-list 8772 . 8775) (symbol 8771 . 8772) (punctuation 8770 . 8771) (symbol 8755 . 8770) (STRUCT 8748 . 8754) (punctuation 8746 . 8747) (symbol 8745 . 8746) (INT 8741 . 8744) (punctuation 8739 . 8740) (symbol 8738 . 8739) (CLASS 8732 . 8737) (punctuation 8731 . 8732) (TEMPLATE 8723 . 8731) (punctuation 8720 . 8721) (semantic-list 8698 . 8720) (punctuation 8696 . 8697) (VOLATILE 8688 . 8696) (CONST 8682 . 8687) (punctuation 8680 . 8681) (symbol 8679 . 8680) (punctuation 8678 . 8679) (symbol 8663 . 8678) (STRUCT 8656 . 8662) (punctuation 8654 . 8655) (symbol 8653 . 8654) (CLASS 8647 . 8652) (punctuation 8646 . 8647) (TEMPLATE 8637 . 8645) (punctuation 8635 . 8636) (semantic-list 8613 . 8635) (punctuation 8611 . 8612) (VOLATILE 8603 . 8611) (punctuation 8601 . 8602) (symbol 8600 . 8601) (punctuation 8599 . 8600) (symbol 8584 . 8599) (STRUCT 8577 . 8583) (punctuation 8575 . 8576) (symbol 8574 . 8575) (CLASS 8568 . 8573) (punctuation 8567 . 8568) (TEMPLATE 8558 . 8566) (TYPEDEF 8538 . 8545) (TYPEDEF 8462 . 8469) (punctuation 8213 . 8214) (punctuation 8212 . 8213) (punctuation 8211 . 8212) (symbol 8203 . 8208) (VOLATILE 8194 . 8202) (CONST 8188 . 8193) (punctuation 8182 . 8183) (punctuation 8181 . 8182) (symbol 8176 . 8180) (punctuation 8175 . 8176) (punctuation 8174 . 8175) (punctuation 8173 . 8174) (symbol 8168 . 8173) (punctuation 8167 . 8168) (symbol 8151 . 8167) (punctuation 8150 . 8151) (punctuation 8149 . 8150) (symbol 8144 . 8149) (TYPENAME 8135 . 8143) (VOLATILE 8126 . 8134) (CONST 8120 . 8125) (punctuation 8113 . 8114) (symbol 8108 . 8113) (punctuation 8107 . 8108) (punctuation 8106 . 8107) (punctuation 8105 . 8106) (symbol 8100 . 8105) (punctuation 8099 . 8100) (symbol 8087 . 8099) (punctuation 8081 . 8082) (symbol 8079 . 8081) (punctuation 8078 . 8079) (punctuation 8077 . 8078) (symbol 8071 . 8077) (TYPENAME 8062 . 8070) (TYPEDEF 8054 . 8061) (punctuation 8039 . 8040) (punctuation 8038 . 8039) (punctuation 8037 . 8038) (symbol 8036 . 8037) (punctuation 8035 . 8036) (symbol 8020 . 8035) (TYPENAME 8011 . 8019) (TYPEDEF 8003 . 8010) (punctuation 7924 . 7925) (punctuation 7923 . 7924) (punctuation 7922 . 7923) (symbol 7914 . 7919) (VOLATILE 7905 . 7913) (punctuation 7899 . 7900) (punctuation 7898 . 7899) (symbol 7893 . 7897) (punctuation 7892 . 7893) (punctuation 7891 . 7892) (punctuation 7890 . 7891) (symbol 7885 . 7890) (punctuation 7884 . 7885) (symbol 7868 . 7884) (punctuation 7867 . 7868) (punctuation 7866 . 7867) (symbol 7861 . 7866) (TYPENAME 7852 . 7860) (VOLATILE 7843 . 7851) (punctuation 7836 . 7837) (symbol 7831 . 7836) (punctuation 7830 . 7831) (punctuation 7829 . 7830) (punctuation 7828 . 7829) (symbol 7823 . 7828) (punctuation 7822 . 7823) (symbol 7810 . 7822) (punctuation 7804 . 7805) (symbol 7802 . 7804) (punctuation 7801 . 7802) (punctuation 7800 . 7801) (symbol 7794 . 7800) (TYPENAME 7785 . 7793) (TYPEDEF 7777 . 7784) (punctuation 7762 . 7763) (punctuation 7761 . 7762) (punctuation 7760 . 7761) (symbol 7759 . 7760) (punctuation 7758 . 7759) (symbol 7743 . 7758) (TYPENAME 7734 . 7742) (TYPEDEF 7726 . 7733) (punctuation 7653 . 7654) (punctuation 7652 . 7653) (punctuation 7651 . 7652) (symbol 7643 . 7648) (CONST 7637 . 7642) (punctuation 7629 . 7630) (punctuation 7628 . 7629) (symbol 7623 . 7627) (punctuation 7622 . 7623) (punctuation 7621 . 7622) (punctuation 7620 . 7621) (symbol 7615 . 7620) (punctuation 7614 . 7615) (symbol 7598 . 7614) (punctuation 7597 . 7598) (punctuation 7596 . 7597) (symbol 7591 . 7596) (TYPENAME 7582 . 7590) (CONST 7576 . 7581) (punctuation 7567 . 7568) (symbol 7562 . 7567) (punctuation 7561 . 7562) (punctuation 7560 . 7561) (punctuation 7559 . 7560) (symbol 7554 . 7559) (punctuation 7553 . 7554) (symbol 7541 . 7553) (punctuation 7533 . 7534) (symbol 7531 . 7533) (punctuation 7530 . 7531) (punctuation 7529 . 7530) (symbol 7523 . 7529) (TYPENAME 7514 . 7522) (TYPEDEF 7506 . 7513) (punctuation 7251 . 7252) (punctuation 7250 . 7251) (punctuation 7249 . 7250) (symbol 7248 . 7249) (punctuation 7247 . 7248) (symbol 7232 . 7247) (TYPENAME 7223 . 7231) (TYPEDEF 7215 . 7222) (punctuation 6455 . 6456) (punctuation 6454 . 6455) (punctuation 6453 . 6454) (symbol 6445 . 6450) (punctuation 6439 . 6440) (punctuation 6438 . 6439) (symbol 6434 . 6438) (punctuation 6433 . 6434) (punctuation 6432 . 6433) (punctuation 6431 . 6432) (symbol 6430 . 6431) (punctuation 6429 . 6430) (symbol 6413 . 6429) (punctuation 6412 . 6413) (punctuation 6411 . 6412) (symbol 6406 . 6411) (TYPENAME 6397 . 6405) (punctuation 6390 . 6391) (symbol 6385 . 6390) (punctuation 6384 . 6385) (punctuation 6383 . 6384) (punctuation 6382 . 6383) (symbol 6371 . 6382) (punctuation 6370 . 6371) (punctuation 6369 . 6370) (symbol 6363 . 6369) (punctuation 6361 . 6362) (symbol 6356 . 6361) (punctuation 6355 . 6356) (symbol 6348 . 6355) (punctuation 6347 . 6348) (punctuation 6346 . 6347) (symbol 6341 . 6346) (punctuation 6335 . 6336) (symbol 6333 . 6335) (punctuation 6332 . 6333) (punctuation 6331 . 6332) (symbol 6325 . 6331) (TYPENAME 6316 . 6324) (TYPEDEF 6308 . 6315) (punctuation 6199 . 6200) (punctuation 6198 . 6199) (punctuation 6197 . 6198) (symbol 6188 . 6192) (punctuation 6187 . 6188) (punctuation 6186 . 6187) (punctuation 6185 . 6186) (symbol 6184 . 6185) (punctuation 6183 . 6184) (symbol 6160 . 6183) (punctuation 6159 . 6160) (punctuation 6158 . 6159) (symbol 6152 . 6158) (TYPENAME 6143 . 6151) (punctuation 6134 . 6135) (punctuation 6133 . 6134) (symbol 6117 . 6133) (punctuation 6116 . 6117) (symbol 6104 . 6116) (punctuation 6096 . 6097) (symbol 6077 . 6096) (TYPENAME 6068 . 6076) (TYPEDEF 6055 . 6062) (punctuation 5896 . 5897) (punctuation 5895 . 5896) (punctuation 5894 . 5895) (symbol 5885 . 5889) (punctuation 5884 . 5885) (punctuation 5883 . 5884) (punctuation 5882 . 5883) (symbol 5881 . 5882) (punctuation 5880 . 5881) (symbol 5857 . 5880) (punctuation 5856 . 5857) (punctuation 5855 . 5856) (symbol 5849 . 5855) (TYPENAME 5840 . 5848) (punctuation 5832 . 5833) (punctuation 5831 . 5832) (symbol 5821 . 5831) (punctuation 5820 . 5821) (symbol 5806 . 5820) (punctuation 5798 . 5799) (symbol 5779 . 5798) (TYPENAME 5770 . 5778) (TYPEDEF 5757 . 5764) (punctuation 5535 . 5536) (punctuation 5534 . 5535) (punctuation 5533 . 5534) (symbol 5524 . 5528) (punctuation 5523 . 5524) (punctuation 5522 . 5523) (punctuation 5521 . 5522) (symbol 5520 . 5521) (punctuation 5519 . 5520) (symbol 5496 . 5519) (punctuation 5495 . 5496) (punctuation 5494 . 5495) (symbol 5488 . 5494) (TYPENAME 5479 . 5487) (punctuation 5471 . 5472) (punctuation 5470 . 5471) (symbol 5467 . 5470) (punctuation 5466 . 5467) (symbol 5435 . 5466) (punctuation 5427 . 5428) (symbol 5408 . 5427) (TYPENAME 5399 . 5407) (TYPEDEF 5386 . 5393) (punctuation 5099 . 5100) (punctuation 5098 . 5099) (punctuation 5097 . 5098) (symbol 5088 . 5092) (punctuation 5087 . 5088) (punctuation 5086 . 5087) (punctuation 5085 . 5086) (symbol 5084 . 5085) (punctuation 5083 . 5084) (symbol 5060 . 5083) (punctuation 5059 . 5060) (punctuation 5058 . 5059) (symbol 5052 . 5058) (TYPENAME 5043 . 5051) (punctuation 5035 . 5036) (punctuation 5034 . 5035) (symbol 5031 . 5034) (punctuation 5030 . 5031) (symbol 5000 . 5030) (punctuation 4992 . 4993) (symbol 4973 . 4992) (TYPENAME 4964 . 4972) (TYPEDEF 4951 . 4958) (TYPEDEF 4835 . 4842) (punctuation 4611 . 4612) (punctuation 4610 . 4611) (punctuation 4609 . 4610) (symbol 4600 . 4604) (punctuation 4599 . 4600) (punctuation 4598 . 4599) (punctuation 4597 . 4598) (symbol 4596 . 4597) (punctuation 4595 . 4596) (symbol 4572 . 4595) (punctuation 4571 . 4572) (punctuation 4570 . 4571) (symbol 4564 . 4570) (TYPENAME 4555 . 4563) (punctuation 4547 . 4548) (punctuation 4546 . 4547) (symbol 4536 . 4546) (punctuation 4535 . 4536) (symbol 4521 . 4535) (punctuation 4513 . 4514) (symbol 4494 . 4513) (TYPENAME 4485 . 4493) (TYPEDEF 4472 . 4479) (punctuation 4253 . 4254) (punctuation 4252 . 4253) (punctuation 4251 . 4252) (symbol 4242 . 4246) (punctuation 4241 . 4242) (punctuation 4240 . 4241) (punctuation 4239 . 4240) (symbol 4238 . 4239) (punctuation 4237 . 4238) (symbol 4214 . 4237) (punctuation 4213 . 4214) (punctuation 4212 . 4213) (symbol 4206 . 4212) (TYPENAME 4197 . 4205) (punctuation 4189 . 4190) (punctuation 4188 . 4189) (symbol 4185 . 4188) (punctuation 4184 . 4185) (symbol 4161 . 4184) (punctuation 4153 . 4154) (symbol 4134 . 4153) (TYPENAME 4125 . 4133) (TYPEDEF 4112 . 4119) (punctuation 3554 . 3555) (punctuation 3553 . 3554) (punctuation 3552 . 3553) (INT 3549 . 3552) (punctuation 3531 . 3532) (INT 3528 . 3531) (UNSIGNED 3519 . 3527) (punctuation 3434 . 3435) (semantic-list 3414 . 3434) (SIZEOF 3408 . 3414) (punctuation 3406 . 3407) (punctuation 3405 . 3406) (semantic-list 3399 . 3404) (SIZEOF 3393 . 3399) (punctuation 3392 . 3393) (symbol 3390 . 3392) (punctuation 3389 . 3390) (punctuation 3388 . 3389) (symbol 3382 . 3388) (TYPEDEF 3358 . 3365))
    :lexical-table 
        '(("BOOST_LAMBDA_OPERATOR_RETURN_TYPE_TRAITS_HPP")
          )

    )
   (semanticdb-table "operators.hpp"
    :major-mode 'c++-mode
    :tags 
        '( ("BOOST_LAMBDA_OPERATORS_HPP" variable (:constant-flag t) nil [464 490])
            ("boost/lambda/detail/is_instance_of.hpp" include nil nil [492 541])
            ("boost" type
               (:members 
                  ( ("lambda" type
                       (:members 
                          ( ("BOOST_LAMBDA_BE1" variable (:constant-flag t) (reparse-symbol namespacesubparts) [973 989])
                            ("BOOST_LAMBDA_BE2" variable (:constant-flag t) (reparse-symbol namespacesubparts) [2316 2332])
                            ("BOOST_LAMBDA_BE3" variable (:constant-flag t) (reparse-symbol namespacesubparts) [3659 3675])
                            ("BOOST_LAMBDA_BE" variable (:constant-flag t) (reparse-symbol namespacesubparts) [4975 4990])
                            ("BOOST_LAMBDA_EMPTY" variable (:constant-flag t) (reparse-symbol namespacesubparts) [5283 5301])
                            ("BOOST_LAMBDA_COMMA_OPERATOR_NAME" variable (:constant-flag t) (reparse-symbol namespacesubparts) [8324 8356])
                            ("detail" type
                               (:members 
                                  ( ("convert_ostream_to_ref_others_to_c_plain_by_default" type
                                       (:template 
                                          ( ("T" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :members 
                                          ( ("type" variable (:type ("RET" type (:type "class") nil nil)) (reparse-symbol classsubparts) [10211 10220]))                                          )
                                        (reparse-symbol namespacesubparts) [9867 10223])
                                    ("convert_istream_to_ref_others_to_c_plain_by_default" type
                                       (:template 
                                          ( ("T" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :members 
                                          ( ("type" variable (:type ("RET" type (:type "class") nil nil)) (reparse-symbol classsubparts) [10569 10578]))                                          )
                                        (reparse-symbol namespacesubparts) [10225 10581]))                                  
                                :type "namespace")
                                (reparse-symbol namespacesubparts) [8725 10591])
                            ("Ret" function (:type "int") (reparse-symbol namespacesubparts) [11300 11316])
                            ("<<" function
                               (:operator-flag t
                                :arguments 
                                  ( ("a" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("lambda_functor" type
                                             (:template-specifier 
                                                ( ("Arg" type nil nil nil))                                                
                                              :type "class")
                                              nil nil))
                                        (reparse-symbol arg-sub-list) [11337 11366])
                                    ("" variable (:type ("Ret" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [11367 11374]))                                  
                                :type "int")
                                (reparse-symbol namespacesubparts) [11326 11590])
                            ("Ret" function (:type "int") (reparse-symbol namespacesubparts) [11762 11778])
                            (">>" function
                               (:operator-flag t
                                :arguments 
                                  ( ("a" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("lambda_functor" type
                                             (:template-specifier 
                                                ( ("Arg" type nil nil nil))                                                
                                              :type "class")
                                              nil nil))
                                        (reparse-symbol arg-sub-list) [11798 11827])
                                    ("" variable (:type ("Ret" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [11828 11835]))                                  
                                :type "int")
                                (reparse-symbol namespacesubparts) [11787 12052])
                            ("BOOST_LAMBDA_PTR_ARITHMETIC_E1" variable (:constant-flag t) (reparse-symbol namespacesubparts) [12479 12509])
                            ("BOOST_LAMBDA_PTR_ARITHMETIC_E2" variable (:constant-flag t) (reparse-symbol namespacesubparts) [13451 13481])
                            ("BOOST_LAMBDA_UE" variable (:constant-flag t) (reparse-symbol namespacesubparts) [15469 15484])
                            ("BOOST_LAMBDA_POSTFIX_UE" variable (:constant-flag t) (reparse-symbol namespacesubparts) [16780 16803]))                          
                        :type "namespace")
                        (reparse-symbol namespacesubparts) [562 17700]))                  
                :type "namespace")
                nil [543 17722]))          
    :file "operators.hpp"
    :pointmax 17750
    :fsize 17749
    :lastmodtime '(17765 48449)
    :unmatched-syntax '((semantic-list #("{                                                                          \\
  return                                                                   \\
    lambda_functor_base<ACTION, tuple<lambda_functor<Arg> > >              \\
    ( tuple<lambda_functor<Arg> >(a) );                                    \\
}" 0 1 (macros (("ACTION" symbol "decrement_action" 17624 . 17640) ("OPER_NAME" symbol "post_increment_decrement_action" 17592 . 17623)))) 17556 . 17642) (semantic-list #("(const lambda_functor<Arg>& a, int)" 0 1 (macros (("ACTION" symbol "decrement_action" 17624 . 17640) ("OPER_NAME" symbol "post_increment_decrement_action" 17592 . 17623)))) 17556 . 17642) (symbol "post_increment_decrement_action" 17556 . 17642) (punctuation ">" 17556 . 17642) (punctuation ">" 17556 . 17642) (punctuation ">" 17556 . 17642) (punctuation ">" 17556 . 17642) (symbol "Arg" 17556 . 17642) (punctuation "<" 17556 . 17642) (symbol "lambda_functor" 17556 . 17642) (punctuation "<" 17556 . 17642) (symbol "tuple" 17556 . 17642) (punctuation "," 17556 . 17642) (symbol "decrement_action" 17556 . 17642) (punctuation "<" 17556 . 17642) (symbol "lambda_functor_base" 17556 . 17642) (punctuation "<" 17556 . 17642) (symbol "lambda_functor" 17556 . 17642) (CONST "const" 17556 . 17642) (INLINE "inline" 17556 . 17642) (punctuation ">" 17556 . 17642) (symbol "Arg" 17556 . 17642) (CLASS "class" 17556 . 17642) (punctuation "<" 17556 . 17642) (TEMPLATE "template" 17556 . 17642) (semantic-list #("{                                                                          \\
  return                                                                   \\
    lambda_functor_base<ACTION, tuple<lambda_functor<Arg> > >              \\
    ( tuple<lambda_functor<Arg> >(a) );                                    \\
}" 0 1 (macros (("ACTION" symbol "increment_action" 17537 . 17553) ("OPER_NAME" symbol "post_increment_decrement_action" 17505 . 17536)))) 17469 . 17555) (semantic-list #("(const lambda_functor<Arg>& a, int)" 0 1 (macros (("ACTION" symbol "increment_action" 17537 . 17553) ("OPER_NAME" symbol "post_increment_decrement_action" 17505 . 17536)))) 17469 . 17555) (symbol "post_increment_decrement_action" 17469 . 17555) (punctuation ">" 17469 . 17555) (punctuation ">" 17469 . 17555) (punctuation ">" 17469 . 17555) (punctuation ">" 17469 . 17555) (symbol "Arg" 17469 . 17555) (punctuation "<" 17469 . 17555) (symbol "lambda_functor" 17469 . 17555) (punctuation "<" 17469 . 17555) (symbol "tuple" 17469 . 17555) (punctuation "," 17469 . 17555) (symbol "increment_action" 17469 . 17555) (punctuation "<" 17469 . 17555) (symbol "lambda_functor_base" 17469 . 17555) (punctuation "<" 17469 . 17555) (symbol "lambda_functor" 17469 . 17555) (CONST "const" 17469 . 17555) (INLINE "inline" 17469 . 17555) (punctuation ">" 17469 . 17555) (symbol "Arg" 17469 . 17555) (CLASS "class" 17469 . 17555) (punctuation "<" 17469 . 17555) (TEMPLATE "template" 17469 . 17555) (string 16718 . 16763) (symbol 16712 . 16717) (punctuation 16711 . 16712) (semantic-list #("{                                                                          \\
  return                                                                   \\
    lambda_functor_base<ACTION, tuple<lambda_functor<Arg> > >              \\
    ( tuple<lambda_functor<Arg> >(a) );                                    \\
}" 0 1 (macros (("ACTION" symbol "addressof_action" 16655 . 16671) ("OPER_NAME" symbol "other_action" 16642 . 16654)))) 16615 . 16673) (semantic-list #("(const lambda_functor<Arg>& a)" 0 1 (macros (("ACTION" symbol "addressof_action" 16655 . 16671) ("OPER_NAME" symbol "other_action" 16642 . 16654)))) 16615 . 16673) (symbol "other_action" 16615 . 16673) (punctuation ">" 16615 . 16673) (punctuation ">" 16615 . 16673) (punctuation ">" 16615 . 16673) (punctuation ">" 16615 . 16673) (symbol "Arg" 16615 . 16673) (punctuation "<" 16615 . 16673) (symbol "lambda_functor" 16615 . 16673) (punctuation "<" 16615 . 16673) (symbol "tuple" 16615 . 16673) (punctuation "," 16615 . 16673) (symbol "addressof_action" 16615 . 16673) (punctuation "<" 16615 . 16673) (symbol "lambda_functor_base" 16615 . 16673) (punctuation "<" 16615 . 16673) (symbol "lambda_functor" 16615 . 16673) (CONST "const" 16615 . 16673) (INLINE "inline" 16615 . 16673) (punctuation ">" 16615 . 16673) (symbol "Arg" 16615 . 16673) (CLASS "class" 16615 . 16673) (punctuation "<" 16615 . 16673) (TEMPLATE "template" 16615 . 16673) (semantic-list #("{                                                                          \\
  return                                                                   \\
    lambda_functor_base<ACTION, tuple<lambda_functor<Arg> > >              \\
    ( tuple<lambda_functor<Arg> >(a) );                                    \\
}" 0 1 (macros (("ACTION" symbol "contentsof_action" 16595 . 16612) ("OPER_NAME" symbol "other_action" 16582 . 16594)))) 16555 . 16614) (semantic-list #("(const lambda_functor<Arg>& a)" 0 1 (macros (("ACTION" symbol "contentsof_action" 16595 . 16612) ("OPER_NAME" symbol "other_action" 16582 . 16594)))) 16555 . 16614) (symbol "other_action" 16555 . 16614) (punctuation ">" 16555 . 16614) (punctuation ">" 16555 . 16614) (punctuation ">" 16555 . 16614) (punctuation ">" 16555 . 16614) (symbol "Arg" 16555 . 16614) (punctuation "<" 16555 . 16614) (symbol "lambda_functor" 16555 . 16614) (punctuation "<" 16555 . 16614) (symbol "tuple" 16555 . 16614) (punctuation "," 16555 . 16614) (symbol "contentsof_action" 16555 . 16614) (punctuation "<" 16555 . 16614) (symbol "lambda_functor_base" 16555 . 16614) (punctuation "<" 16555 . 16614) (symbol "lambda_functor" 16555 . 16614) (CONST "const" 16555 . 16614) (INLINE "inline" 16555 . 16614) (punctuation ">" 16555 . 16614) (symbol "Arg" 16555 . 16614) (CLASS "class" 16555 . 16614) (punctuation "<" 16555 . 16614) (TEMPLATE "template" 16555 . 16614) (semantic-list #("{                                                                          \\
  return                                                                   \\
    lambda_functor_base<ACTION, tuple<lambda_functor<Arg> > >              \\
    ( tuple<lambda_functor<Arg> >(a) );                                    \\
}" 0 1 (macros (("ACTION" symbol "decrement_action" 16536 . 16552) ("OPER_NAME" symbol "pre_increment_decrement_action" 16505 . 16535)))) 16477 . 16554) (semantic-list #("(const lambda_functor<Arg>& a)" 0 1 (macros (("ACTION" symbol "decrement_action" 16536 . 16552) ("OPER_NAME" symbol "pre_increment_decrement_action" 16505 . 16535)))) 16477 . 16554) (symbol "pre_increment_decrement_action" 16477 . 16554) (punctuation ">" 16477 . 16554) (punctuation ">" 16477 . 16554) (punctuation ">" 16477 . 16554) (punctuation ">" 16477 . 16554) (symbol "Arg" 16477 . 16554) (punctuation "<" 16477 . 16554) (symbol "lambda_functor" 16477 . 16554) (punctuation "<" 16477 . 16554) (symbol "tuple" 16477 . 16554) (punctuation "," 16477 . 16554) (symbol "decrement_action" 16477 . 16554) (punctuation "<" 16477 . 16554) (symbol "lambda_functor_base" 16477 . 16554) (punctuation "<" 16477 . 16554) (symbol "lambda_functor" 16477 . 16554) (CONST "const" 16477 . 16554) (INLINE "inline" 16477 . 16554) (punctuation ">" 16477 . 16554) (symbol "Arg" 16477 . 16554) (CLASS "class" 16477 . 16554) (punctuation "<" 16477 . 16554) (TEMPLATE "template" 16477 . 16554) (semantic-list #("{                                                                          \\
  return                                                                   \\
    lambda_functor_base<ACTION, tuple<lambda_functor<Arg> > >              \\
    ( tuple<lambda_functor<Arg> >(a) );                                    \\
}" 0 1 (macros (("ACTION" symbol "increment_action" 16458 . 16474) ("OPER_NAME" symbol "pre_increment_decrement_action" 16427 . 16457)))) 16399 . 16476) (semantic-list #("(const lambda_functor<Arg>& a)" 0 1 (macros (("ACTION" symbol "increment_action" 16458 . 16474) ("OPER_NAME" symbol "pre_increment_decrement_action" 16427 . 16457)))) 16399 . 16476) (symbol "pre_increment_decrement_action" 16399 . 16476) (punctuation ">" 16399 . 16476) (punctuation ">" 16399 . 16476) (punctuation ">" 16399 . 16476) (punctuation ">" 16399 . 16476) (symbol "Arg" 16399 . 16476) (punctuation "<" 16399 . 16476) (symbol "lambda_functor" 16399 . 16476) (punctuation "<" 16399 . 16476) (symbol "tuple" 16399 . 16476) (punctuation "," 16399 . 16476) (symbol "increment_action" 16399 . 16476) (punctuation "<" 16399 . 16476) (symbol "lambda_functor_base" 16399 . 16476) (punctuation "<" 16399 . 16476) (symbol "lambda_functor" 16399 . 16476) (CONST "const" 16399 . 16476) (INLINE "inline" 16399 . 16476) (punctuation ">" 16399 . 16476) (symbol "Arg" 16399 . 16476) (CLASS "class" 16399 . 16476) (punctuation "<" 16399 . 16476) (TEMPLATE "template" 16399 . 16476) (semantic-list #("{                                                                          \\
  return                                                                   \\
    lambda_functor_base<ACTION, tuple<lambda_functor<Arg> > >              \\
    ( tuple<lambda_functor<Arg> >(a) );                                    \\
}" 0 1 (macros (("ACTION" symbol "not_action" 16386 . 16396) ("OPER_NAME" symbol "logical_action" 16371 . 16385)))) 16344 . 16398) (semantic-list #("(const lambda_functor<Arg>& a)" 0 1 (macros (("ACTION" symbol "not_action" 16386 . 16396) ("OPER_NAME" symbol "logical_action" 16371 . 16385)))) 16344 . 16398) (symbol "logical_action" 16344 . 16398) (punctuation ">" 16344 . 16398) (punctuation ">" 16344 . 16398) (punctuation ">" 16344 . 16398) (punctuation ">" 16344 . 16398) (symbol "Arg" 16344 . 16398) (punctuation "<" 16344 . 16398) (symbol "lambda_functor" 16344 . 16398) (punctuation "<" 16344 . 16398) (symbol "tuple" 16344 . 16398) (punctuation "," 16344 . 16398) (symbol "not_action" 16344 . 16398) (punctuation "<" 16344 . 16398) (symbol "lambda_functor_base" 16344 . 16398) (punctuation "<" 16344 . 16398) (symbol "lambda_functor" 16344 . 16398) (CONST "const" 16344 . 16398) (INLINE "inline" 16344 . 16398) (punctuation ">" 16344 . 16398) (symbol "Arg" 16344 . 16398) (CLASS "class" 16344 . 16398) (punctuation "<" 16344 . 16398) (TEMPLATE "template" 16344 . 16398) (semantic-list #("{                                                                          \\
  return                                                                   \\
    lambda_functor_base<ACTION, tuple<lambda_functor<Arg> > >              \\
    ( tuple<lambda_functor<Arg> >(a) );                                    \\
}" 0 1 (macros (("ACTION" symbol "not_action" 16331 . 16341) ("OPER_NAME" symbol "bitwise_action" 16316 . 16330)))) 16289 . 16343) (semantic-list #("(const lambda_functor<Arg>& a)" 0 1 (macros (("ACTION" symbol "not_action" 16331 . 16341) ("OPER_NAME" symbol "bitwise_action" 16316 . 16330)))) 16289 . 16343) (symbol "bitwise_action" 16289 . 16343) (punctuation ">" 16289 . 16343) (punctuation ">" 16289 . 16343) (punctuation ">" 16289 . 16343) (punctuation ">" 16289 . 16343) (symbol "Arg" 16289 . 16343) (punctuation "<" 16289 . 16343) (symbol "lambda_functor" 16289 . 16343) (punctuation "<" 16289 . 16343) (symbol "tuple" 16289 . 16343) (punctuation "," 16289 . 16343) (symbol "not_action" 16289 . 16343) (punctuation "<" 16289 . 16343) (symbol "lambda_functor_base" 16289 . 16343) (punctuation "<" 16289 . 16343) (symbol "lambda_functor" 16289 . 16343) (CONST "const" 16289 . 16343) (INLINE "inline" 16289 . 16343) (punctuation ">" 16289 . 16343) (symbol "Arg" 16289 . 16343) (CLASS "class" 16289 . 16343) (punctuation "<" 16289 . 16343) (TEMPLATE "template" 16289 . 16343) (semantic-list #("{                                                                          \\
  return                                                                   \\
    lambda_functor_base<ACTION, tuple<lambda_functor<Arg> > >              \\
    ( tuple<lambda_functor<Arg> >(a) );                                    \\
}" 0 1 (macros (("ACTION" symbol "minus_action" 16274 . 16286) ("OPER_NAME" symbol "unary_arithmetic_action" 16250 . 16273)))) 16223 . 16288) (semantic-list #("(const lambda_functor<Arg>& a)" 0 1 (macros (("ACTION" symbol "minus_action" 16274 . 16286) ("OPER_NAME" symbol "unary_arithmetic_action" 16250 . 16273)))) 16223 . 16288) (symbol "unary_arithmetic_action" 16223 . 16288) (punctuation ">" 16223 . 16288) (punctuation ">" 16223 . 16288) (punctuation ">" 16223 . 16288) (punctuation ">" 16223 . 16288) (symbol "Arg" 16223 . 16288) (punctuation "<" 16223 . 16288) (symbol "lambda_functor" 16223 . 16288) (punctuation "<" 16223 . 16288) (symbol "tuple" 16223 . 16288) (punctuation "," 16223 . 16288) (symbol "minus_action" 16223 . 16288) (punctuation "<" 16223 . 16288) (symbol "lambda_functor_base" 16223 . 16288) (punctuation "<" 16223 . 16288) (symbol "lambda_functor" 16223 . 16288) (CONST "const" 16223 . 16288) (INLINE "inline" 16223 . 16288) (punctuation ">" 16223 . 16288) (symbol "Arg" 16223 . 16288) (CLASS "class" 16223 . 16288) (punctuation "<" 16223 . 16288) (TEMPLATE "template" 16223 . 16288) (semantic-list #("{                                                                          \\
  return                                                                   \\
    lambda_functor_base<ACTION, tuple<lambda_functor<Arg> > >              \\
    ( tuple<lambda_functor<Arg> >(a) );                                    \\
}" 0 1 (macros (("ACTION" symbol "plus_action" 16209 . 16220) ("OPER_NAME" symbol "unary_arithmetic_action" 16185 . 16208)))) 16158 . 16222) (semantic-list #("(const lambda_functor<Arg>& a)" 0 1 (macros (("ACTION" symbol "plus_action" 16209 . 16220) ("OPER_NAME" symbol "unary_arithmetic_action" 16185 . 16208)))) 16158 . 16222) (symbol "unary_arithmetic_action" 16158 . 16222) (punctuation ">" 16158 . 16222) (punctuation ">" 16158 . 16222) (punctuation ">" 16158 . 16222) (punctuation ">" 16158 . 16222) (symbol "Arg" 16158 . 16222) (punctuation "<" 16158 . 16222) (symbol "lambda_functor" 16158 . 16222) (punctuation "<" 16158 . 16222) (symbol "tuple" 16158 . 16222) (punctuation "," 16158 . 16222) (symbol "plus_action" 16158 . 16222) (punctuation "<" 16158 . 16222) (symbol "lambda_functor_base" 16158 . 16222) (punctuation "<" 16158 . 16222) (symbol "lambda_functor" 16158 . 16222) (CONST "const" 16158 . 16222) (INLINE "inline" 16158 . 16222) (punctuation ">" 16158 . 16222) (symbol "Arg" 16158 . 16222) (CLASS "class" 16158 . 16222) (punctuation "<" 16158 . 16222) (TEMPLATE "template" 16158 . 16222) (string 15415 . 15452) (symbol 15409 . 15414) (punctuation 15408 . 15409) (semantic-list #("{                                                                            \\
  return                                                                     \\
    lambda_functor_base<ACTION, tuple<CONSTA(&)[N], lambda_functor<Arg> > > \\
    (tuple<CONSTA(&)[N], lambda_functor<Arg> >(a, b));                      \\
}" 0 1 (macros (("CONSTA" symbol "A" 14941 . 14942) ("ACTION" symbol "minus_action" 14920 . 14932) ("OPER_NAME" symbol "arithmetic_action" 14902 . 14919)))) 14860 . 14943) (semantic-list #("(CONSTA(&a)[N], const lambda_functor<Arg>& b)" 0 1 (macros (("CONSTA" symbol "A" 14941 . 14942) ("ACTION" symbol "minus_action" 14920 . 14932) ("OPER_NAME" symbol "arithmetic_action" 14902 . 14919)))) 14860 . 14943) (symbol "arithmetic_action" 14860 . 14943) (punctuation ">" 14860 . 14943) (punctuation ">" 14860 . 14943) (punctuation ">" 14860 . 14943) (punctuation ">" 14860 . 14943) (symbol "Arg" 14860 . 14943) (punctuation "<" 14860 . 14943) (symbol "lambda_functor" 14860 . 14943) (punctuation "," 14860 . 14943) (semantic-list #("[N]" 0 1 (macros (("CONSTA" symbol "A" 14941 . 14942) ("ACTION" symbol "minus_action" 14920 . 14932) ("OPER_NAME" symbol "arithmetic_action" 14902 . 14919)))) 14860 . 14943) (semantic-list #("(&)" 0 1 (macros (("CONSTA" symbol "A" 14941 . 14942) ("ACTION" symbol "minus_action" 14920 . 14932) ("OPER_NAME" symbol "arithmetic_action" 14902 . 14919)))) 14860 . 14943) (symbol "A" 14860 . 14943) (punctuation "<" 14860 . 14943) (symbol "tuple" 14860 . 14943) (punctuation "," 14860 . 14943) (symbol "minus_action" 14860 . 14943) (punctuation "<" 14860 . 14943) (symbol "lambda_functor_base" 14860 . 14943) (punctuation "<" 14860 . 14943) (symbol "lambda_functor" 14860 . 14943) (CONST "const" 14860 . 14943) (INLINE "inline" 14860 . 14943) (punctuation ">" 14860 . 14943) (symbol "Arg" 14860 . 14943) (CLASS "class" 14860 . 14943) (punctuation "," 14860 . 14943) (symbol "A" 14860 . 14943) (CLASS "class" 14860 . 14943) (punctuation "," 14860 . 14943) (symbol "N" 14860 . 14943) (INT "int" 14860 . 14943) (punctuation "<" 14860 . 14943) (TEMPLATE "template" 14860 . 14943) (semantic-list #("{                                                                            \\
  return                                                                     \\
    lambda_functor_base<ACTION, tuple<CONSTA(&)[N], lambda_functor<Arg> > > \\
    (tuple<CONSTA(&)[N], lambda_functor<Arg> >(a, b));                      \\
}" 0 1 (macros (("CONSTA" symbol "A" 14857 . 14858) ("ACTION" symbol "minus_action" 14842 . 14854) ("OPER_NAME" symbol "arithmetic_action" 14824 . 14841)))) 14782 . 14859) (semantic-list #("(CONSTA(&a)[N], const lambda_functor<Arg>& b)" 0 1 (macros (("CONSTA" symbol "A" 14857 . 14858) ("ACTION" symbol "minus_action" 14842 . 14854) ("OPER_NAME" symbol "arithmetic_action" 14824 . 14841)))) 14782 . 14859) (symbol "arithmetic_action" 14782 . 14859) (punctuation ">" 14782 . 14859) (punctuation ">" 14782 . 14859) (punctuation ">" 14782 . 14859) (punctuation ">" 14782 . 14859) (symbol "Arg" 14782 . 14859) (punctuation "<" 14782 . 14859) (symbol "lambda_functor" 14782 . 14859) (punctuation "," 14782 . 14859) (semantic-list #("[N]" 0 1 (macros (("CONSTA" symbol "A" 14857 . 14858) ("ACTION" symbol "minus_action" 14842 . 14854) ("OPER_NAME" symbol "arithmetic_action" 14824 . 14841)))) 14782 . 14859) (semantic-list #("(&)" 0 1 (macros (("CONSTA" symbol "A" 14857 . 14858) ("ACTION" symbol "minus_action" 14842 . 14854) ("OPER_NAME" symbol "arithmetic_action" 14824 . 14841)))) 14782 . 14859) (symbol "A" 14782 . 14859) (punctuation "<" 14782 . 14859) (symbol "tuple" 14782 . 14859) (punctuation "," 14782 . 14859) (symbol "minus_action" 14782 . 14859) (punctuation "<" 14782 . 14859) (symbol "lambda_functor_base" 14782 . 14859) (punctuation "<" 14782 . 14859) (symbol "lambda_functor" 14782 . 14859) (CONST "const" 14782 . 14859) (INLINE "inline" 14782 . 14859) (punctuation ">" 14782 . 14859) (symbol "Arg" 14782 . 14859) (CLASS "class" 14782 . 14859) (punctuation "," 14782 . 14859) (symbol "A" 14782 . 14859) (CLASS "class" 14782 . 14859) (punctuation "," 14782 . 14859) (symbol "N" 14782 . 14859) (INT "int" 14782 . 14859) (punctuation "<" 14782 . 14859) (TEMPLATE "template" 14782 . 14859) (semantic-list #("{                                                                            \\
  return                                                                     \\
    lambda_functor_base<ACTION, tuple<CONSTA(&)[N], lambda_functor<Arg> > > \\
    (tuple<CONSTA(&)[N], lambda_functor<Arg> >(a, b));                      \\
}" 0 1 (macros (("CONSTA" symbol "A" 14628 . 14629) ("ACTION" symbol "plus_action" 14609 . 14620) ("OPER_NAME" symbol "arithmetic_action" 14591 . 14608)))) 14549 . 14630) (semantic-list #("(CONSTA(&a)[N], const lambda_functor<Arg>& b)" 0 1 (macros (("CONSTA" symbol "A" 14628 . 14629) ("ACTION" symbol "plus_action" 14609 . 14620) ("OPER_NAME" symbol "arithmetic_action" 14591 . 14608)))) 14549 . 14630) (symbol "arithmetic_action" 14549 . 14630) (punctuation ">" 14549 . 14630) (punctuation ">" 14549 . 14630) (punctuation ">" 14549 . 14630) (punctuation ">" 14549 . 14630) (symbol "Arg" 14549 . 14630) (punctuation "<" 14549 . 14630) (symbol "lambda_functor" 14549 . 14630) (punctuation "," 14549 . 14630) (semantic-list #("[N]" 0 1 (macros (("CONSTA" symbol "A" 14628 . 14629) ("ACTION" symbol "plus_action" 14609 . 14620) ("OPER_NAME" symbol "arithmetic_action" 14591 . 14608)))) 14549 . 14630) (semantic-list #("(&)" 0 1 (macros (("CONSTA" symbol "A" 14628 . 14629) ("ACTION" symbol "plus_action" 14609 . 14620) ("OPER_NAME" symbol "arithmetic_action" 14591 . 14608)))) 14549 . 14630) (symbol "A" 14549 . 14630) (punctuation "<" 14549 . 14630) (symbol "tuple" 14549 . 14630) (punctuation "," 14549 . 14630) (symbol "plus_action" 14549 . 14630) (punctuation "<" 14549 . 14630) (symbol "lambda_functor_base" 14549 . 14630) (punctuation "<" 14549 . 14630) (symbol "lambda_functor" 14549 . 14630) (CONST "const" 14549 . 14630) (INLINE "inline" 14549 . 14630) (punctuation ">" 14549 . 14630) (symbol "Arg" 14549 . 14630) (CLASS "class" 14549 . 14630) (punctuation "," 14549 . 14630) (symbol "A" 14549 . 14630) (CLASS "class" 14549 . 14630) (punctuation "," 14549 . 14630) (symbol "N" 14549 . 14630) (INT "int" 14549 . 14630) (punctuation "<" 14549 . 14630) (TEMPLATE "template" 14549 . 14630) (semantic-list #("{                                                                           \\
  return lambda_functor<                                                    \\
    lambda_functor_base<ACTION, tuple<lambda_functor<Arg>, CONSTB(&)[N]> > \\
  >(tuple<lambda_functor<Arg>, CONSTB(&)[N]>(a, b));                       \\
}" 0 1 (macros (("CONSTB" symbol "B" 14546 . 14547) ("ACTION" symbol "plus_action" 14527 . 14538) ("OPER_NAME" symbol "arithmetic_action" 14509 . 14526)))) 14467 . 14548) (semantic-list #("(const lambda_functor<Arg>& a, CONSTB(&b)[N])" 0 1 (macros (("CONSTB" symbol "B" 14546 . 14547) ("ACTION" symbol "plus_action" 14527 . 14538) ("OPER_NAME" symbol "arithmetic_action" 14509 . 14526)))) 14467 . 14548) (symbol "arithmetic_action" 14467 . 14548) (punctuation ">" 14467 . 14548) (punctuation ">" 14467 . 14548) (punctuation ">" 14467 . 14548) (semantic-list #("[N]" 0 1 (macros (("CONSTB" symbol "B" 14546 . 14547) ("ACTION" symbol "plus_action" 14527 . 14538) ("OPER_NAME" symbol "arithmetic_action" 14509 . 14526)))) 14467 . 14548) (semantic-list #("(&)" 0 1 (macros (("CONSTB" symbol "B" 14546 . 14547) ("ACTION" symbol "plus_action" 14527 . 14538) ("OPER_NAME" symbol "arithmetic_action" 14509 . 14526)))) 14467 . 14548) (symbol "B" 14467 . 14548) (punctuation "," 14467 . 14548) (punctuation ">" 14467 . 14548) (symbol "Arg" 14467 . 14548) (punctuation "<" 14467 . 14548) (symbol "lambda_functor" 14467 . 14548) (punctuation "<" 14467 . 14548) (symbol "tuple" 14467 . 14548) (punctuation "," 14467 . 14548) (symbol "plus_action" 14467 . 14548) (punctuation "<" 14467 . 14548) (symbol "lambda_functor_base" 14467 . 14548) (punctuation "<" 14467 . 14548) (symbol "lambda_functor" 14467 . 14548) (CONST "const" 14467 . 14548) (INLINE "inline" 14467 . 14548) (punctuation ">" 14467 . 14548) (symbol "B" 14467 . 14548) (CLASS "class" 14467 . 14548) (punctuation "," 14467 . 14548) (symbol "N" 14467 . 14548) (INT "int" 14467 . 14548) (punctuation "," 14467 . 14548) (symbol "Arg" 14467 . 14548) (CLASS "class" 14467 . 14548) (punctuation "<" 14467 . 14548) (TEMPLATE "template" 14467 . 14548) (semantic-list #("{                                                                            \\
  return                                                                     \\
    lambda_functor_base<ACTION, tuple<CONSTA(&)[N], lambda_functor<Arg> > > \\
    (tuple<CONSTA(&)[N], lambda_functor<Arg> >(a, b));                      \\
}" 0 1 (macros (("CONSTA" symbol "A" 14464 . 14465) ("ACTION" symbol "plus_action" 14450 . 14461) ("OPER_NAME" symbol "arithmetic_action" 14432 . 14449)))) 14390 . 14466) (semantic-list #("(CONSTA(&a)[N], const lambda_functor<Arg>& b)" 0 1 (macros (("CONSTA" symbol "A" 14464 . 14465) ("ACTION" symbol "plus_action" 14450 . 14461) ("OPER_NAME" symbol "arithmetic_action" 14432 . 14449)))) 14390 . 14466) (symbol "arithmetic_action" 14390 . 14466) (punctuation ">" 14390 . 14466) (punctuation ">" 14390 . 14466) (punctuation ">" 14390 . 14466) (punctuation ">" 14390 . 14466) (symbol "Arg" 14390 . 14466) (punctuation "<" 14390 . 14466) (symbol "lambda_functor" 14390 . 14466) (punctuation "," 14390 . 14466) (semantic-list #("[N]" 0 1 (macros (("CONSTA" symbol "A" 14464 . 14465) ("ACTION" symbol "plus_action" 14450 . 14461) ("OPER_NAME" symbol "arithmetic_action" 14432 . 14449)))) 14390 . 14466) (semantic-list #("(&)" 0 1 (macros (("CONSTA" symbol "A" 14464 . 14465) ("ACTION" symbol "plus_action" 14450 . 14461) ("OPER_NAME" symbol "arithmetic_action" 14432 . 14449)))) 14390 . 14466) (symbol "A" 14390 . 14466) (punctuation "<" 14390 . 14466) (symbol "tuple" 14390 . 14466) (punctuation "," 14390 . 14466) (symbol "plus_action" 14390 . 14466) (punctuation "<" 14390 . 14466) (symbol "lambda_functor_base" 14390 . 14466) (punctuation "<" 14390 . 14466) (symbol "lambda_functor" 14390 . 14466) (CONST "const" 14390 . 14466) (INLINE "inline" 14390 . 14466) (punctuation ">" 14390 . 14466) (symbol "Arg" 14390 . 14466) (CLASS "class" 14390 . 14466) (punctuation "," 14390 . 14466) (symbol "A" 14390 . 14466) (CLASS "class" 14390 . 14466) (punctuation "," 14390 . 14466) (symbol "N" 14390 . 14466) (INT "int" 14390 . 14466) (punctuation "<" 14390 . 14466) (TEMPLATE "template" 14390 . 14466) (semantic-list #("{                                                                           \\
  return lambda_functor<                                                    \\
    lambda_functor_base<ACTION, tuple<lambda_functor<Arg>, CONSTB(&)[N]> > \\
  >(tuple<lambda_functor<Arg>, CONSTB(&)[N]>(a, b));                       \\
}" 0 1 (macros (("CONSTB" symbol "B" 14387 . 14388) ("ACTION" symbol "plus_action" 14373 . 14384) ("OPER_NAME" symbol "arithmetic_action" 14355 . 14372)))) 14313 . 14389) (semantic-list #("(const lambda_functor<Arg>& a, CONSTB(&b)[N])" 0 1 (macros (("CONSTB" symbol "B" 14387 . 14388) ("ACTION" symbol "plus_action" 14373 . 14384) ("OPER_NAME" symbol "arithmetic_action" 14355 . 14372)))) 14313 . 14389) (symbol "arithmetic_action" 14313 . 14389) (punctuation ">" 14313 . 14389) (punctuation ">" 14313 . 14389) (punctuation ">" 14313 . 14389) (semantic-list #("[N]" 0 1 (macros (("CONSTB" symbol "B" 14387 . 14388) ("ACTION" symbol "plus_action" 14373 . 14384) ("OPER_NAME" symbol "arithmetic_action" 14355 . 14372)))) 14313 . 14389) (semantic-list #("(&)" 0 1 (macros (("CONSTB" symbol "B" 14387 . 14388) ("ACTION" symbol "plus_action" 14373 . 14384) ("OPER_NAME" symbol "arithmetic_action" 14355 . 14372)))) 14313 . 14389) (symbol "B" 14313 . 14389) (punctuation "," 14313 . 14389) (punctuation ">" 14313 . 14389) (symbol "Arg" 14313 . 14389) (punctuation "<" 14313 . 14389) (symbol "lambda_functor" 14313 . 14389) (punctuation "<" 14313 . 14389) (symbol "tuple" 14313 . 14389) (punctuation "," 14313 . 14389) (symbol "plus_action" 14313 . 14389) (punctuation "<" 14313 . 14389) (symbol "lambda_functor_base" 14313 . 14389) (punctuation "<" 14313 . 14389) (symbol "lambda_functor" 14313 . 14389) (CONST "const" 14313 . 14389) (INLINE "inline" 14313 . 14389) (punctuation ">" 14313 . 14389) (symbol "B" 14313 . 14389) (CLASS "class" 14313 . 14389) (punctuation "," 14313 . 14389) (symbol "N" 14313 . 14389) (INT "int" 14313 . 14389) (punctuation "," 14313 . 14389) (symbol "Arg" 14313 . 14389) (CLASS "class" 14313 . 14389) (punctuation "<" 14313 . 14389) (TEMPLATE "template" 14313 . 14389) (string 13381 . 13434) (symbol 13375 . 13380) (punctuation 13374 . 13375) (string 12409 . 12462) (symbol 12403 . 12408) (punctuation 12402 . 12403) (semantic-list 11835 . 11845) (semantic-list 11831 . 11835) (punctuation 11785 . 11786) (punctuation 11782 . 11783) (punctuation 11778 . 11779) (punctuation 11766 . 11767) (punctuation 11760 . 11761) (punctuation 11759 . 11760) (symbol 11756 . 11759) (punctuation 11755 . 11756) (symbol 11741 . 11755) (punctuation 11740 . 11741) (symbol 11735 . 11740) (punctuation 11729 . 11730) (punctuation 11728 . 11729) (symbol 11711 . 11728) (punctuation 11710 . 11711) (symbol 11696 . 11710) (punctuation 11690 . 11691) (symbol 11671 . 11690) (punctuation 11667 . 11668) (symbol 11653 . 11667) (CONST 11646 . 11651) (INLINE 11639 . 11645) (punctuation 11637 . 11638) (symbol 11629 . 11637) (CLASS 11623 . 11628) (punctuation 11621 . 11622) (symbol 11618 . 11621) (CLASS 11612 . 11617) (punctuation 11610 . 11611) (symbol 11607 . 11610) (CLASS 11601 . 11606) (punctuation 11600 . 11601) (TEMPLATE 11592 . 11600) (semantic-list 11374 . 11384) (semantic-list 11370 . 11374) (punctuation 11324 . 11325) (punctuation 11321 . 11322) (punctuation 11316 . 11317) (punctuation 11304 . 11305) (punctuation 11298 . 11299) (punctuation 11297 . 11298) (symbol 11294 . 11297) (punctuation 11293 . 11294) (symbol 11279 . 11293) (punctuation 11278 . 11279) (symbol 11273 . 11278) (punctuation 11267 . 11268) (punctuation 11266 . 11267) (symbol 11250 . 11266) (punctuation 11249 . 11250) (symbol 11235 . 11249) (punctuation 11229 . 11230) (symbol 11210 . 11229) (punctuation 11206 . 11207) (symbol 11192 . 11206) (CONST 11185 . 11190) (INLINE 11178 . 11184) (punctuation 11176 . 11177) (symbol 11168 . 11176) (CLASS 11162 . 11167) (punctuation 11160 . 11161) (symbol 11157 . 11160) (CLASS 11151 . 11156) (punctuation 11149 . 11150) (symbol 11146 . 11149) (CLASS 11140 . 11145) (punctuation 11139 . 11140) (TEMPLATE 11131 . 11139) (semantic-list #("{                      \\
  return                                                                     \\
    lambda_functor_base<                                                     \\
      ACTION,                                                                \\
      tuple<typename CONVERSION <CONSTA>::type, lambda_functor<Arg> >      \\
    >                                                                        \\
  (tuple<typename CONVERSION <CONSTA>::type, lambda_functor<Arg> >(a, b)); \\
}" 0 1 (macros (("CONVERSION" symbol "detail" 10817 . 10823) ("CONSTB" symbol "B" 10814 . 10815) ("CONSTA" symbol "A" 10805 . 10806) ("ACTION" symbol "rightshift_action" 10785 . 10802) ("OPER_NAME" symbol "bitwise_action" 10769 . 10783)))) 10740 . 10877) (semantic-list #("(CONSTA& a, const lambda_functor<Arg>& b)" 0 1 (macros (("CONVERSION" symbol "detail" 10817 . 10823) ("CONSTB" symbol "B" 10814 . 10815) ("CONSTA" symbol "A" 10805 . 10806) ("ACTION" symbol "rightshift_action" 10785 . 10802) ("OPER_NAME" symbol "bitwise_action" 10769 . 10783)))) 10740 . 10877) (symbol "bitwise_action" 10740 . 10877) (punctuation ">" 10740 . 10877) (punctuation ">" 10740 . 10877) (punctuation ">" 10740 . 10877) (punctuation ">" 10740 . 10877) (symbol "Arg" 10740 . 10877) (punctuation "<" 10740 . 10877) (symbol "lambda_functor" 10740 . 10877) (punctuation "," 10740 . 10877) (symbol "type" 10740 . 10877) (punctuation ":" 10740 . 10877) (punctuation ":" 10740 . 10877) (punctuation ">" 10740 . 10877) (symbol "A" 10740 . 10877) (punctuation "<" 10740 . 10877) (symbol "detail" 10740 . 10877) (TYPENAME "typename" 10740 . 10877) (punctuation "<" 10740 . 10877) (symbol "tuple" 10740 . 10877) (punctuation "," 10740 . 10877) (symbol "rightshift_action" 10740 . 10877) (punctuation "<" 10740 . 10877) (symbol "lambda_functor_base" 10740 . 10877) (punctuation "<" 10740 . 10877) (symbol "lambda_functor" 10740 . 10877) (CONST "const" 10740 . 10877) (INLINE "inline" 10740 . 10877) (punctuation ">" 10740 . 10877) (symbol "Arg" 10740 . 10877) (CLASS "class" 10740 . 10877) (punctuation "," 10740 . 10877) (symbol "A" 10740 . 10877) (CLASS "class" 10740 . 10877) (punctuation "<" 10740 . 10877) (TEMPLATE "template" 10740 . 10877) (semantic-list #("{                      \\
  return                                                                     \\
    lambda_functor_base<                                                     \\
      ACTION,                                                                \\
      tuple<typename CONVERSION <CONSTA>::type, lambda_functor<Arg> >      \\
    >                                                                        \\
  (tuple<typename CONVERSION <CONSTA>::type, lambda_functor<Arg> >(a, b)); \\
}" 0 1 (macros (("CONVERSION" symbol "detail" 10679 . 10685) ("CONSTB" symbol "B" 10676 . 10677) ("CONSTA" symbol "A" 10667 . 10668) ("ACTION" symbol "leftshift_action" 10648 . 10664) ("OPER_NAME" symbol "bitwise_action" 10632 . 10646)))) 10603 . 10739) (semantic-list #("(CONSTA& a, const lambda_functor<Arg>& b)" 0 1 (macros (("CONVERSION" symbol "detail" 10679 . 10685) ("CONSTB" symbol "B" 10676 . 10677) ("CONSTA" symbol "A" 10667 . 10668) ("ACTION" symbol "leftshift_action" 10648 . 10664) ("OPER_NAME" symbol "bitwise_action" 10632 . 10646)))) 10603 . 10739) (symbol "bitwise_action" 10603 . 10739) (punctuation ">" 10603 . 10739) (punctuation ">" 10603 . 10739) (punctuation ">" 10603 . 10739) (punctuation ">" 10603 . 10739) (symbol "Arg" 10603 . 10739) (punctuation "<" 10603 . 10739) (symbol "lambda_functor" 10603 . 10739) (punctuation "," 10603 . 10739) (symbol "type" 10603 . 10739) (punctuation ":" 10603 . 10739) (punctuation ":" 10603 . 10739) (punctuation ">" 10603 . 10739) (symbol "A" 10603 . 10739) (punctuation "<" 10603 . 10739) (symbol "detail" 10603 . 10739) (TYPENAME "typename" 10603 . 10739) (punctuation "<" 10603 . 10739) (symbol "tuple" 10603 . 10739) (punctuation "," 10603 . 10739) (symbol "leftshift_action" 10603 . 10739) (punctuation "<" 10603 . 10739) (symbol "lambda_functor_base" 10603 . 10739) (punctuation "<" 10603 . 10739) (symbol "lambda_functor" 10603 . 10739) (CONST "const" 10603 . 10739) (INLINE "inline" 10603 . 10739) (punctuation ">" 10603 . 10739) (symbol "Arg" 10603 . 10739) (CLASS "class" 10603 . 10739) (punctuation "," 10603 . 10739) (symbol "A" 10603 . 10739) (CLASS "class" 10603 . 10739) (punctuation "<" 10603 . 10739) (TEMPLATE "template" 10603 . 10739) (punctuation 10568 . 10569) (punctuation 10567 . 10568) (punctuation 10566 . 10567) (symbol 10540 . 10544) (punctuation 10539 . 10540) (punctuation 10538 . 10539) (punctuation 10537 . 10538) (symbol 10536 . 10537) (punctuation 10535 . 10536) (symbol 10515 . 10534) (TYPENAME 10506 . 10514) (punctuation 10481 . 10482) (punctuation 10480 . 10481) (symbol 10479 . 10480) (punctuation 10454 . 10455) (symbol 10449 . 10454) (punctuation 10448 . 10449) (punctuation 10447 . 10448) (punctuation 10446 . 10447) (symbol 10409 . 10422) (punctuation 10408 . 10409) (punctuation 10407 . 10408) (symbol 10404 . 10407) (punctuation 10402 . 10403) (symbol 10401 . 10402) (punctuation 10374 . 10375) (symbol 10358 . 10374) (punctuation 10333 . 10334) (symbol 10331 . 10333) (punctuation 10330 . 10331) (punctuation 10329 . 10330) (symbol 10323 . 10329) (TYPENAME 10314 . 10322) (TYPEDEF 10306 . 10313) (punctuation 10210 . 10211) (punctuation 10209 . 10210) (punctuation 10208 . 10209) (symbol 10182 . 10186) (punctuation 10181 . 10182) (punctuation 10180 . 10181) (punctuation 10179 . 10180) (symbol 10178 . 10179) (punctuation 10177 . 10178) (symbol 10157 . 10176) (TYPENAME 10148 . 10156) (punctuation 10123 . 10124) (punctuation 10122 . 10123) (symbol 10121 . 10122) (punctuation 10096 . 10097) (symbol 10091 . 10096) (punctuation 10090 . 10091) (punctuation 10089 . 10090) (punctuation 10088 . 10089) (symbol 10051 . 10064) (punctuation 10050 . 10051) (punctuation 10049 . 10050) (symbol 10046 . 10049) (punctuation 10044 . 10045) (symbol 10043 . 10044) (punctuation 10016 . 10017) (symbol 10000 . 10016) (punctuation 9975 . 9976) (symbol 9973 . 9975) (punctuation 9972 . 9973) (punctuation 9971 . 9972) (symbol 9965 . 9971) (TYPENAME 9956 . 9964) (TYPEDEF 9948 . 9955) (semantic-list #("{ \\
  return                                                                   \\
    lambda_functor_base<                                                   \\
      ACTION,                                                              \\
      tuple<lambda_functor<ArgA>, lambda_functor<ArgB> >                   \\
    >                                                                      \\
  (tuple<lambda_functor<ArgA>, lambda_functor<ArgB> >(a, b));              \\
}" 0 1 (macros (("CONVERSION" symbol "const_copy_argument" 8701 . 8720) ("CONSTB" symbol "B" 8698 . 8699) ("CONSTA" symbol "A" 8689 . 8690) ("ACTION" symbol "comma_action" 8668 . 8680) ("OPER_NAME" symbol "other_action" 8655 . 8667)))) 8604 . 8721) (semantic-list #("(const lambda_functor<ArgA>& a, const lambda_functor<ArgB>& b)" 0 1 (macros (("CONVERSION" symbol "const_copy_argument" 8701 . 8720) ("CONSTB" symbol "B" 8698 . 8699) ("CONSTA" symbol "A" 8689 . 8690) ("ACTION" symbol "comma_action" 8668 . 8680) ("OPER_NAME" symbol "other_action" 8655 . 8667)))) 8604 . 8721) (symbol "other_action" 8604 . 8721) (punctuation ">" 8604 . 8721) (punctuation ">" 8604 . 8721) (punctuation ">" 8604 . 8721) (punctuation ">" 8604 . 8721) (symbol "ArgB" 8604 . 8721) (punctuation "<" 8604 . 8721) (symbol "lambda_functor" 8604 . 8721) (punctuation "," 8604 . 8721) (punctuation ">" 8604 . 8721) (symbol "ArgA" 8604 . 8721) (punctuation "<" 8604 . 8721) (symbol "lambda_functor" 8604 . 8721) (punctuation "<" 8604 . 8721) (symbol "tuple" 8604 . 8721) (punctuation "," 8604 . 8721) (symbol "comma_action" 8604 . 8721) (punctuation "<" 8604 . 8721) (symbol "lambda_functor_base" 8604 . 8721) (punctuation "<" 8604 . 8721) (symbol "lambda_functor" 8604 . 8721) (CONST "const" 8604 . 8721) (INLINE "inline" 8604 . 8721) (punctuation ">" 8604 . 8721) (symbol "ArgB" 8604 . 8721) (CLASS "class" 8604 . 8721) (punctuation "," 8604 . 8721) (symbol "ArgA" 8604 . 8721) (CLASS "class" 8604 . 8721) (punctuation "<" 8604 . 8721) (TEMPLATE "template" 8604 . 8721) (semantic-list #("{                      \\
  return                                                                     \\
    lambda_functor_base<                                                     \\
      ACTION,                                                                \\
      tuple<typename CONVERSION <CONSTA>::type, lambda_functor<Arg> >      \\
    >                                                                        \\
  (tuple<typename CONVERSION <CONSTA>::type, lambda_functor<Arg> >(a, b)); \\
}" 0 1 (macros (("CONVERSION" symbol "const_copy_argument" 8583 . 8602) ("CONSTB" symbol "B" 8580 . 8581) ("CONSTA" symbol "A" 8571 . 8572) ("ACTION" symbol "comma_action" 8550 . 8562) ("OPER_NAME" symbol "other_action" 8537 . 8549)))) 8486 . 8603) (semantic-list #("(CONSTA& a, const lambda_functor<Arg>& b)" 0 1 (macros (("CONVERSION" symbol "const_copy_argument" 8583 . 8602) ("CONSTB" symbol "B" 8580 . 8581) ("CONSTA" symbol "A" 8571 . 8572) ("ACTION" symbol "comma_action" 8550 . 8562) ("OPER_NAME" symbol "other_action" 8537 . 8549)))) 8486 . 8603) (symbol "other_action" 8486 . 8603) (punctuation ">" 8486 . 8603) (punctuation ">" 8486 . 8603) (punctuation ">" 8486 . 8603) (punctuation ">" 8486 . 8603) (symbol "Arg" 8486 . 8603) (punctuation "<" 8486 . 8603) (symbol "lambda_functor" 8486 . 8603) (punctuation "," 8486 . 8603) (symbol "type" 8486 . 8603) (punctuation ":" 8486 . 8603) (punctuation ":" 8486 . 8603) (punctuation ">" 8486 . 8603) (symbol "A" 8486 . 8603) (punctuation "<" 8486 . 8603) (symbol "const_copy_argument" 8486 . 8603) (TYPENAME "typename" 8486 . 8603) (punctuation "<" 8486 . 8603) (symbol "tuple" 8486 . 8603) (punctuation "," 8486 . 8603) (symbol "comma_action" 8486 . 8603) (punctuation "<" 8486 . 8603) (symbol "lambda_functor_base" 8486 . 8603) (punctuation "<" 8486 . 8603) (symbol "lambda_functor" 8486 . 8603) (CONST "const" 8486 . 8603) (INLINE "inline" 8486 . 8603) (punctuation ">" 8486 . 8603) (symbol "Arg" 8486 . 8603) (CLASS "class" 8486 . 8603) (punctuation "," 8486 . 8603) (symbol "A" 8486 . 8603) (CLASS "class" 8486 . 8603) (punctuation "<" 8486 . 8603) (TEMPLATE "template" 8486 . 8603) (semantic-list #("{                      \\
  return                                                                     \\
    lambda_functor_base<                                                     \\
      ACTION,                                                                \\
      tuple<lambda_functor<Arg>, typename CONVERSION <CONSTB>::type>       \\
    >                                                                        \\
   (tuple<lambda_functor<Arg>, typename CONVERSION <CONSTB>::type>(a, b)); \\
}" 0 1 (macros (("CONVERSION" symbol "const_copy_argument" 8465 . 8484) ("CONSTB" symbol "B" 8462 . 8463) ("CONSTA" symbol "A" 8453 . 8454) ("ACTION" symbol "comma_action" 8432 . 8444) ("OPER_NAME" symbol "other_action" 8419 . 8431)))) 8368 . 8485) (semantic-list #("(const lambda_functor<Arg>& a, CONSTB& b)" 0 1 (macros (("CONVERSION" symbol "const_copy_argument" 8465 . 8484) ("CONSTB" symbol "B" 8462 . 8463) ("CONSTA" symbol "A" 8453 . 8454) ("ACTION" symbol "comma_action" 8432 . 8444) ("OPER_NAME" symbol "other_action" 8419 . 8431)))) 8368 . 8485) (symbol "other_action" 8368 . 8485) (punctuation ">" 8368 . 8485) (punctuation ">" 8368 . 8485) (punctuation ">" 8368 . 8485) (symbol "type" 8368 . 8485) (punctuation ":" 8368 . 8485) (punctuation ":" 8368 . 8485) (punctuation ">" 8368 . 8485) (symbol "B" 8368 . 8485) (punctuation "<" 8368 . 8485) (symbol "const_copy_argument" 8368 . 8485) (TYPENAME "typename" 8368 . 8485) (punctuation "," 8368 . 8485) (punctuation ">" 8368 . 8485) (symbol "Arg" 8368 . 8485) (punctuation "<" 8368 . 8485) (symbol "lambda_functor" 8368 . 8485) (punctuation "<" 8368 . 8485) (symbol "tuple" 8368 . 8485) (punctuation "," 8368 . 8485) (symbol "comma_action" 8368 . 8485) (punctuation "<" 8368 . 8485) (symbol "lambda_functor_base" 8368 . 8485) (punctuation "<" 8368 . 8485) (symbol "lambda_functor" 8368 . 8485) (CONST "const" 8368 . 8485) (INLINE "inline" 8368 . 8485) (punctuation ">" 8368 . 8485) (symbol "B" 8368 . 8485) (CLASS "class" 8368 . 8485) (punctuation "," 8368 . 8485) (symbol "Arg" 8368 . 8485) (CLASS "class" 8368 . 8485) (punctuation "<" 8368 . 8485) (TEMPLATE "template" 8368 . 8485) (string 8253 . 8307) (symbol 8247 . 8252) (punctuation 8246 . 8247) (semantic-list #("{ \\
  return                                                                   \\
    lambda_functor_base<                                                   \\
      ACTION,                                                              \\
      tuple<lambda_functor<ArgA>, lambda_functor<ArgB> >                   \\
    >                                                                      \\
  (tuple<lambda_functor<ArgA>, lambda_functor<ArgB> >(a, b));              \\
}" 0 1 (macros (("CONVERSION" symbol "CONST_CONVERSION" 36 . 52) ("CONSTB" symbol "CONSTB" 28 . 34) ("CONSTA" symbol "CONSTA" 20 . 26) ("ACTION" symbol "ACTION" 12 . 18) ("OPER_NAME" symbol "OPER_NAME" 1 . 10)))) 8036 . 8134) (semantic-list #("(const lambda_functor<ArgA>& a, const lambda_functor<ArgB>& b)" 0 1 (macros (("CONVERSION" symbol "CONST_CONVERSION" 36 . 52) ("CONSTB" symbol "CONSTB" 28 . 34) ("CONSTA" symbol "CONSTA" 20 . 26) ("ACTION" symbol "ACTION" 12 . 18) ("OPER_NAME" symbol "OPER_NAME" 1 . 10)))) 8036 . 8134) (symbol "OPER_NAME" 8036 . 8134) (punctuation ">" 8036 . 8134) (punctuation ">" 8036 . 8134) (punctuation ">" 8036 . 8134) (punctuation ">" 8036 . 8134) (symbol "ArgB" 8036 . 8134) (punctuation "<" 8036 . 8134) (symbol "lambda_functor" 8036 . 8134) (punctuation "," 8036 . 8134) (punctuation ">" 8036 . 8134) (symbol "ArgA" 8036 . 8134) (punctuation "<" 8036 . 8134) (symbol "lambda_functor" 8036 . 8134) (punctuation "<" 8036 . 8134) (symbol "tuple" 8036 . 8134) (punctuation "," 8036 . 8134) (symbol "ACTION" 8036 . 8134) (punctuation "<" 8036 . 8134) (symbol "lambda_functor_base" 8036 . 8134) (punctuation "<" 8036 . 8134) (symbol "lambda_functor" 8036 . 8134) (CONST "const" 8036 . 8134) (INLINE "inline" 8036 . 8134) (punctuation ">" 8036 . 8134) (symbol "ArgB" 8036 . 8134) (CLASS "class" 8036 . 8134) (punctuation "," 8036 . 8134) (symbol "ArgA" 8036 . 8134) (CLASS "class" 8036 . 8134) (punctuation "<" 8036 . 8134) (TEMPLATE "template" 8036 . 8134) (semantic-list #("{                      \\
  return                                                                     \\
    lambda_functor_base<                                                     \\
      ACTION,                                                                \\
      tuple<typename CONVERSION <CONSTA>::type, lambda_functor<Arg> >      \\
    >                                                                        \\
  (tuple<typename CONVERSION <CONSTA>::type, lambda_functor<Arg> >(a, b)); \\
}" 0 1 (macros (("CONVERSION" symbol "CONST_CONVERSION" 36 . 52) ("CONSTB" symbol "CONSTB" 28 . 34) ("CONSTA" symbol "CONSTA" 20 . 26) ("ACTION" symbol "ACTION" 12 . 18) ("OPER_NAME" symbol "OPER_NAME" 1 . 10)))) 8036 . 8134) (semantic-list #("(CONSTA& a, const lambda_functor<Arg>& b)" 0 1 (macros (("CONVERSION" symbol "CONST_CONVERSION" 36 . 52) ("CONSTB" symbol "CONSTB" 28 . 34) ("CONSTA" symbol "CONSTA" 20 . 26) ("ACTION" symbol "ACTION" 12 . 18) ("OPER_NAME" symbol "OPER_NAME" 1 . 10)))) 8036 . 8134) (symbol "OPER_NAME" 8036 . 8134) (punctuation ">" 8036 . 8134) (punctuation ">" 8036 . 8134) (punctuation ">" 8036 . 8134) (punctuation ">" 8036 . 8134) (symbol "Arg" 8036 . 8134) (punctuation "<" 8036 . 8134) (symbol "lambda_functor" 8036 . 8134) (punctuation "," 8036 . 8134) (symbol "type" 8036 . 8134) (punctuation ":" 8036 . 8134) (punctuation ":" 8036 . 8134) (punctuation ">" 8036 . 8134) (symbol "CONSTA" 8036 . 8134) (punctuation "<" 8036 . 8134) (symbol "CONST_CONVERSION" 8036 . 8134) (TYPENAME "typename" 8036 . 8134) (punctuation "<" 8036 . 8134) (symbol "tuple" 8036 . 8134) (punctuation "," 8036 . 8134) (symbol "ACTION" 8036 . 8134) (punctuation "<" 8036 . 8134) (symbol "lambda_functor_base" 8036 . 8134) (punctuation "<" 8036 . 8134) (symbol "lambda_functor" 8036 . 8134) (CONST "const" 8036 . 8134) (INLINE "inline" 8036 . 8134) (punctuation ">" 8036 . 8134) (symbol "Arg" 8036 . 8134) (CLASS "class" 8036 . 8134) (punctuation "," 8036 . 8134) (symbol "A" 8036 . 8134) (CLASS "class" 8036 . 8134) (punctuation "<" 8036 . 8134) (TEMPLATE "template" 8036 . 8134) (semantic-list #("{                      \\
  return                                                                     \\
    lambda_functor_base<                                                     \\
      ACTION,                                                                \\
      tuple<lambda_functor<Arg>, typename CONVERSION <CONSTB>::type>       \\
    >                                                                        \\
   (tuple<lambda_functor<Arg>, typename CONVERSION <CONSTB>::type>(a, b)); \\
}" 0 1 (macros (("CONVERSION" symbol "CONST_CONVERSION" 36 . 52) ("CONSTB" symbol "CONSTB" 28 . 34) ("CONSTA" symbol "CONSTA" 20 . 26) ("ACTION" symbol "ACTION" 12 . 18) ("OPER_NAME" symbol "OPER_NAME" 1 . 10)))) 8036 . 8134) (semantic-list #("(const lambda_functor<Arg>& a, CONSTB& b)" 0 1 (macros (("CONVERSION" symbol "CONST_CONVERSION" 36 . 52) ("CONSTB" symbol "CONSTB" 28 . 34) ("CONSTA" symbol "CONSTA" 20 . 26) ("ACTION" symbol "ACTION" 12 . 18) ("OPER_NAME" symbol "OPER_NAME" 1 . 10)))) 8036 . 8134) (symbol "OPER_NAME" 8036 . 8134) (punctuation ">" 8036 . 8134) (punctuation ">" 8036 . 8134) (punctuation ">" 8036 . 8134) (symbol "type" 8036 . 8134) (punctuation ":" 8036 . 8134) (punctuation ":" 8036 . 8134) (punctuation ">" 8036 . 8134) (symbol "CONSTB" 8036 . 8134) (punctuation "<" 8036 . 8134) (symbol "CONST_CONVERSION" 8036 . 8134) (TYPENAME "typename" 8036 . 8134) (punctuation "," 8036 . 8134) (punctuation ">" 8036 . 8134) (symbol "Arg" 8036 . 8134) (punctuation "<" 8036 . 8134) (symbol "lambda_functor" 8036 . 8134) (punctuation "<" 8036 . 8134) (symbol "tuple" 8036 . 8134) (punctuation "," 8036 . 8134) (symbol "ACTION" 8036 . 8134) (punctuation "<" 8036 . 8134) (symbol "lambda_functor_base" 8036 . 8134) (punctuation "<" 8036 . 8134) (symbol "lambda_functor" 8036 . 8134) (CONST "const" 8036 . 8134) (INLINE "inline" 8036 . 8134) (punctuation ">" 8036 . 8134) (symbol "B" 8036 . 8134) (CLASS "class" 8036 . 8134) (punctuation "," 8036 . 8134) (symbol "Arg" 8036 . 8134) (CLASS "class" 8036 . 8134) (punctuation "<" 8036 . 8134) (TEMPLATE "template" 8036 . 8134) (semantic-list #("{ \\
  return                                                                   \\
    lambda_functor_base<                                                   \\
      ACTION,                                                              \\
      tuple<lambda_functor<ArgA>, lambda_functor<ArgB> >                   \\
    >                                                                      \\
  (tuple<lambda_functor<ArgA>, lambda_functor<ArgB> >(a, b));              \\
}" 0 1 (macros (("CONVERSION" symbol "CONST_CONVERSION" 36 . 52) ("CONSTB" symbol "CONSTB" 28 . 34) ("CONSTA" symbol "CONSTA" 20 . 26) ("ACTION" symbol "ACTION" 12 . 18) ("OPER_NAME" symbol "OPER_NAME" 1 . 10)))) 7938 . 8035) (semantic-list #("(const lambda_functor<ArgA>& a, const lambda_functor<ArgB>& b)" 0 1 (macros (("CONVERSION" symbol "CONST_CONVERSION" 36 . 52) ("CONSTB" symbol "CONSTB" 28 . 34) ("CONSTA" symbol "CONSTA" 20 . 26) ("ACTION" symbol "ACTION" 12 . 18) ("OPER_NAME" symbol "OPER_NAME" 1 . 10)))) 7938 . 8035) (symbol "OPER_NAME" 7938 . 8035) (punctuation ">" 7938 . 8035) (punctuation ">" 7938 . 8035) (punctuation ">" 7938 . 8035) (punctuation ">" 7938 . 8035) (symbol "ArgB" 7938 . 8035) (punctuation "<" 7938 . 8035) (symbol "lambda_functor" 7938 . 8035) (punctuation "," 7938 . 8035) (punctuation ">" 7938 . 8035) (symbol "ArgA" 7938 . 8035) (punctuation "<" 7938 . 8035) (symbol "lambda_functor" 7938 . 8035) (punctuation "<" 7938 . 8035) (symbol "tuple" 7938 . 8035) (punctuation "," 7938 . 8035) (symbol "ACTION" 7938 . 8035) (punctuation "<" 7938 . 8035) (symbol "lambda_functor_base" 7938 . 8035) (punctuation "<" 7938 . 8035) (symbol "lambda_functor" 7938 . 8035) (CONST "const" 7938 . 8035) (INLINE "inline" 7938 . 8035) (punctuation ">" 7938 . 8035) (symbol "ArgB" 7938 . 8035) (CLASS "class" 7938 . 8035) (punctuation "," 7938 . 8035) (symbol "ArgA" 7938 . 8035) (CLASS "class" 7938 . 8035) (punctuation "<" 7938 . 8035) (TEMPLATE "template" 7938 . 8035) (semantic-list #("{                      \\
  return                                                                     \\
    lambda_functor_base<                                                     \\
      ACTION,                                                                \\
      tuple<typename CONVERSION <CONSTA>::type, lambda_functor<Arg> >      \\
    >                                                                        \\
  (tuple<typename CONVERSION <CONSTA>::type, lambda_functor<Arg> >(a, b)); \\
}" 0 1 (macros (("CONVERSION" symbol "CONST_CONVERSION" 36 . 52) ("CONSTB" symbol "CONSTB" 28 . 34) ("CONSTA" symbol "CONSTA" 20 . 26) ("ACTION" symbol "ACTION" 12 . 18) ("OPER_NAME" symbol "OPER_NAME" 1 . 10)))) 7938 . 8035) (semantic-list #("(CONSTA& a, const lambda_functor<Arg>& b)" 0 1 (macros (("CONVERSION" symbol "CONST_CONVERSION" 36 . 52) ("CONSTB" symbol "CONSTB" 28 . 34) ("CONSTA" symbol "CONSTA" 20 . 26) ("ACTION" symbol "ACTION" 12 . 18) ("OPER_NAME" symbol "OPER_NAME" 1 . 10)))) 7938 . 8035) (symbol "OPER_NAME" 7938 . 8035) (punctuation ">" 7938 . 8035) (punctuation ">" 7938 . 8035) (punctuation ">" 7938 . 8035) (punctuation ">" 7938 . 8035) (symbol "Arg" 7938 . 8035) (punctuation "<" 7938 . 8035) (symbol "lambda_functor" 7938 . 8035) (punctuation "," 7938 . 8035) (symbol "type" 7938 . 8035) (punctuation ":" 7938 . 8035) (punctuation ":" 7938 . 8035) (punctuation ">" 7938 . 8035) (symbol "CONSTA" 7938 . 8035) (punctuation "<" 7938 . 8035) (symbol "CONST_CONVERSION" 7938 . 8035) (TYPENAME "typename" 7938 . 8035) (punctuation "<" 7938 . 8035) (symbol "tuple" 7938 . 8035) (punctuation "," 7938 . 8035) (symbol "ACTION" 7938 . 8035) (punctuation "<" 7938 . 8035) (symbol "lambda_functor_base" 7938 . 8035) (punctuation "<" 7938 . 8035) (symbol "lambda_functor" 7938 . 8035) (CONST "const" 7938 . 8035) (INLINE "inline" 7938 . 8035) (punctuation ">" 7938 . 8035) (symbol "Arg" 7938 . 8035) (CLASS "class" 7938 . 8035) (punctuation "," 7938 . 8035) (symbol "A" 7938 . 8035) (CLASS "class" 7938 . 8035) (punctuation "<" 7938 . 8035) (TEMPLATE "template" 7938 . 8035) (semantic-list #("{                      \\
  return                                                                     \\
    lambda_functor_base<                                                     \\
      ACTION,                                                                \\
      tuple<lambda_functor<Arg>, typename CONVERSION <CONSTB>::type>       \\
    >                                                                        \\
   (tuple<lambda_functor<Arg>, typename CONVERSION <CONSTB>::type>(a, b)); \\
}" 0 1 (macros (("CONVERSION" symbol "CONST_CONVERSION" 36 . 52) ("CONSTB" symbol "CONSTB" 28 . 34) ("CONSTA" symbol "CONSTA" 20 . 26) ("ACTION" symbol "ACTION" 12 . 18) ("OPER_NAME" symbol "OPER_NAME" 1 . 10)))) 7938 . 8035) (semantic-list #("(const lambda_functor<Arg>& a, CONSTB& b)" 0 1 (macros (("CONVERSION" symbol "CONST_CONVERSION" 36 . 52) ("CONSTB" symbol "CONSTB" 28 . 34) ("CONSTA" symbol "CONSTA" 20 . 26) ("ACTION" symbol "ACTION" 12 . 18) ("OPER_NAME" symbol "OPER_NAME" 1 . 10)))) 7938 . 8035) (symbol "OPER_NAME" 7938 . 8035) (punctuation ">" 7938 . 8035) (punctuation ">" 7938 . 8035) (punctuation ">" 7938 . 8035) (symbol "type" 7938 . 8035) (punctuation ":" 7938 . 8035) (punctuation ":" 7938 . 8035) (punctuation ">" 7938 . 8035) (symbol "CONSTB" 7938 . 8035) (punctuation "<" 7938 . 8035) (symbol "CONST_CONVERSION" 7938 . 8035) (TYPENAME "typename" 7938 . 8035) (punctuation "," 7938 . 8035) (punctuation ">" 7938 . 8035) (symbol "Arg" 7938 . 8035) (punctuation "<" 7938 . 8035) (symbol "lambda_functor" 7938 . 8035) (punctuation "<" 7938 . 8035) (symbol "tuple" 7938 . 8035) (punctuation "," 7938 . 8035) (symbol "ACTION" 7938 . 8035) (punctuation "<" 7938 . 8035) (symbol "lambda_functor_base" 7938 . 8035) (punctuation "<" 7938 . 8035) (symbol "lambda_functor" 7938 . 8035) (CONST "const" 7938 . 8035) (INLINE "inline" 7938 . 8035) (punctuation ">" 7938 . 8035) (symbol "B" 7938 . 8035) (CLASS "class" 7938 . 8035) (punctuation "," 7938 . 8035) (symbol "Arg" 7938 . 8035) (CLASS "class" 7938 . 8035) (punctuation "<" 7938 . 8035) (TEMPLATE "template" 7938 . 8035) (semantic-list #("{ \\
  return                                                                   \\
    lambda_functor_base<                                                   \\
      ACTION,                                                              \\
      tuple<lambda_functor<ArgA>, lambda_functor<ArgB> >                   \\
    >                                                                      \\
  (tuple<lambda_functor<ArgA>, lambda_functor<ArgB> >(a, b));              \\
}" 0 1 (macros (("CONVERSION" symbol "CONST_CONVERSION" 36 . 52) ("CONSTB" symbol "CONSTB" 28 . 34) ("CONSTA" symbol "CONSTA" 20 . 26) ("ACTION" symbol "ACTION" 12 . 18) ("OPER_NAME" symbol "OPER_NAME" 1 . 10)))) 7839 . 7937) (semantic-list #("(const lambda_functor<ArgA>& a, const lambda_functor<ArgB>& b)" 0 1 (macros (("CONVERSION" symbol "CONST_CONVERSION" 36 . 52) ("CONSTB" symbol "CONSTB" 28 . 34) ("CONSTA" symbol "CONSTA" 20 . 26) ("ACTION" symbol "ACTION" 12 . 18) ("OPER_NAME" symbol "OPER_NAME" 1 . 10)))) 7839 . 7937) (symbol "OPER_NAME" 7839 . 7937) (punctuation ">" 7839 . 7937) (punctuation ">" 7839 . 7937) (punctuation ">" 7839 . 7937) (punctuation ">" 7839 . 7937) (symbol "ArgB" 7839 . 7937) (punctuation "<" 7839 . 7937) (symbol "lambda_functor" 7839 . 7937) (punctuation "," 7839 . 7937) (punctuation ">" 7839 . 7937) (symbol "ArgA" 7839 . 7937) (punctuation "<" 7839 . 7937) (symbol "lambda_functor" 7839 . 7937) (punctuation "<" 7839 . 7937) (symbol "tuple" 7839 . 7937) (punctuation "," 7839 . 7937) (symbol "ACTION" 7839 . 7937) (punctuation "<" 7839 . 7937) (symbol "lambda_functor_base" 7839 . 7937) (punctuation "<" 7839 . 7937) (symbol "lambda_functor" 7839 . 7937) (CONST "const" 7839 . 7937) (INLINE "inline" 7839 . 7937) (punctuation ">" 7839 . 7937) (symbol "ArgB" 7839 . 7937) (CLASS "class" 7839 . 7937) (punctuation "," 7839 . 7937) (symbol "ArgA" 7839 . 7937) (CLASS "class" 7839 . 7937) (punctuation "<" 7839 . 7937) (TEMPLATE "template" 7839 . 7937) (semantic-list #("{                      \\
  return                                                                     \\
    lambda_functor_base<                                                     \\
      ACTION,                                                                \\
      tuple<typename CONVERSION <CONSTA>::type, lambda_functor<Arg> >      \\
    >                                                                        \\
  (tuple<typename CONVERSION <CONSTA>::type, lambda_functor<Arg> >(a, b)); \\
}" 0 1 (macros (("CONVERSION" symbol "CONST_CONVERSION" 36 . 52) ("CONSTB" symbol "CONSTB" 28 . 34) ("CONSTA" symbol "CONSTA" 20 . 26) ("ACTION" symbol "ACTION" 12 . 18) ("OPER_NAME" symbol "OPER_NAME" 1 . 10)))) 7839 . 7937) (semantic-list #("(CONSTA& a, const lambda_functor<Arg>& b)" 0 1 (macros (("CONVERSION" symbol "CONST_CONVERSION" 36 . 52) ("CONSTB" symbol "CONSTB" 28 . 34) ("CONSTA" symbol "CONSTA" 20 . 26) ("ACTION" symbol "ACTION" 12 . 18) ("OPER_NAME" symbol "OPER_NAME" 1 . 10)))) 7839 . 7937) (symbol "OPER_NAME" 7839 . 7937) (punctuation ">" 7839 . 7937) (punctuation ">" 7839 . 7937) (punctuation ">" 7839 . 7937) (punctuation ">" 7839 . 7937) (symbol "Arg" 7839 . 7937) (punctuation "<" 7839 . 7937) (symbol "lambda_functor" 7839 . 7937) (punctuation "," 7839 . 7937) (symbol "type" 7839 . 7937) (punctuation ":" 7839 . 7937) (punctuation ":" 7839 . 7937) (punctuation ">" 7839 . 7937) (symbol "CONSTA" 7839 . 7937) (punctuation "<" 7839 . 7937) (symbol "CONST_CONVERSION" 7839 . 7937) (TYPENAME "typename" 7839 . 7937) (punctuation "<" 7839 . 7937) (symbol "tuple" 7839 . 7937) (punctuation "," 7839 . 7937) (symbol "ACTION" 7839 . 7937) (punctuation "<" 7839 . 7937) (symbol "lambda_functor_base" 7839 . 7937) (punctuation "<" 7839 . 7937) (symbol "lambda_functor" 7839 . 7937) (CONST "const" 7839 . 7937) (INLINE "inline" 7839 . 7937) (punctuation ">" 7839 . 7937) (symbol "Arg" 7839 . 7937) (CLASS "class" 7839 . 7937) (punctuation "," 7839 . 7937) (symbol "A" 7839 . 7937) (CLASS "class" 7839 . 7937) (punctuation "<" 7839 . 7937) (TEMPLATE "template" 7839 . 7937) (semantic-list #("{                      \\
  return                                                                     \\
    lambda_functor_base<                                                     \\
      ACTION,                                                                \\
      tuple<lambda_functor<Arg>, typename CONVERSION <CONSTB>::type>       \\
    >                                                                        \\
   (tuple<lambda_functor<Arg>, typename CONVERSION <CONSTB>::type>(a, b)); \\
}" 0 1 (macros (("CONVERSION" symbol "CONST_CONVERSION" 36 . 52) ("CONSTB" symbol "CONSTB" 28 . 34) ("CONSTA" symbol "CONSTA" 20 . 26) ("ACTION" symbol "ACTION" 12 . 18) ("OPER_NAME" symbol "OPER_NAME" 1 . 10)))) 7839 . 7937) (semantic-list #("(const lambda_functor<Arg>& a, CONSTB& b)" 0 1 (macros (("CONVERSION" symbol "CONST_CONVERSION" 36 . 52) ("CONSTB" symbol "CONSTB" 28 . 34) ("CONSTA" symbol "CONSTA" 20 . 26) ("ACTION" symbol "ACTION" 12 . 18) ("OPER_NAME" symbol "OPER_NAME" 1 . 10)))) 7839 . 7937) (symbol "OPER_NAME" 7839 . 7937) (punctuation ">" 7839 . 7937) (punctuation ">" 7839 . 7937) (punctuation ">" 7839 . 7937) (symbol "type" 7839 . 7937) (punctuation ":" 7839 . 7937) (punctuation ":" 7839 . 7937) (punctuation ">" 7839 . 7937) (symbol "CONSTB" 7839 . 7937) (punctuation "<" 7839 . 7937) (symbol "CONST_CONVERSION" 7839 . 7937) (TYPENAME "typename" 7839 . 7937) (punctuation "," 7839 . 7937) (punctuation ">" 7839 . 7937) (symbol "Arg" 7839 . 7937) (punctuation "<" 7839 . 7937) (symbol "lambda_functor" 7839 . 7937) (punctuation "<" 7839 . 7937) (symbol "tuple" 7839 . 7937) (punctuation "," 7839 . 7937) (symbol "ACTION" 7839 . 7937) (punctuation "<" 7839 . 7937) (symbol "lambda_functor_base" 7839 . 7937) (punctuation "<" 7839 . 7937) (symbol "lambda_functor" 7839 . 7937) (CONST "const" 7839 . 7937) (INLINE "inline" 7839 . 7937) (punctuation ">" 7839 . 7937) (symbol "B" 7839 . 7937) (CLASS "class" 7839 . 7937) (punctuation "," 7839 . 7937) (symbol "Arg" 7839 . 7937) (CLASS "class" 7839 . 7937) (punctuation "<" 7839 . 7937) (TEMPLATE "template" 7839 . 7937) (semantic-list #("{ \\
  return                                                                   \\
    lambda_functor_base<                                                   \\
      ACTION,                                                              \\
      tuple<lambda_functor<ArgA>, lambda_functor<ArgB> >                   \\
    >                                                                      \\
  (tuple<lambda_functor<ArgA>, lambda_functor<ArgB> >(a, b));              \\
}" 0 1 (macros (("CONVERSION" symbol "CONST_CONVERSION" 36 . 52) ("CONSTB" symbol "CONSTB" 28 . 34) ("CONSTA" symbol "CONSTA" 20 . 26) ("ACTION" symbol "ACTION" 12 . 18) ("OPER_NAME" symbol "OPER_NAME" 1 . 10)))) 7732 . 7838) (semantic-list #("(const lambda_functor<ArgA>& a, const lambda_functor<ArgB>& b)" 0 1 (macros (("CONVERSION" symbol "CONST_CONVERSION" 36 . 52) ("CONSTB" symbol "CONSTB" 28 . 34) ("CONSTA" symbol "CONSTA" 20 . 26) ("ACTION" symbol "ACTION" 12 . 18) ("OPER_NAME" symbol "OPER_NAME" 1 . 10)))) 7732 . 7838) (symbol "OPER_NAME" 7732 . 7838) (punctuation ">" 7732 . 7838) (punctuation ">" 7732 . 7838) (punctuation ">" 7732 . 7838) (punctuation ">" 7732 . 7838) (symbol "ArgB" 7732 . 7838) (punctuation "<" 7732 . 7838) (symbol "lambda_functor" 7732 . 7838) (punctuation "," 7732 . 7838) (punctuation ">" 7732 . 7838) (symbol "ArgA" 7732 . 7838) (punctuation "<" 7732 . 7838) (symbol "lambda_functor" 7732 . 7838) (punctuation "<" 7732 . 7838) (symbol "tuple" 7732 . 7838) (punctuation "," 7732 . 7838) (symbol "ACTION" 7732 . 7838) (punctuation "<" 7732 . 7838) (symbol "lambda_functor_base" 7732 . 7838) (punctuation "<" 7732 . 7838) (symbol "lambda_functor" 7732 . 7838) (CONST "const" 7732 . 7838) (INLINE "inline" 7732 . 7838) (punctuation ">" 7732 . 7838) (symbol "ArgB" 7732 . 7838) (CLASS "class" 7732 . 7838) (punctuation "," 7732 . 7838) (symbol "ArgA" 7732 . 7838) (CLASS "class" 7732 . 7838) (punctuation "<" 7732 . 7838) (TEMPLATE "template" 7732 . 7838) (semantic-list #("{                      \\
  return                                                                     \\
    lambda_functor_base<                                                     \\
      ACTION,                                                                \\
      tuple<typename CONVERSION <CONSTA>::type, lambda_functor<Arg> >      \\
    >                                                                        \\
  (tuple<typename CONVERSION <CONSTA>::type, lambda_functor<Arg> >(a, b)); \\
}" 0 1 (macros (("CONVERSION" symbol "CONST_CONVERSION" 36 . 52) ("CONSTB" symbol "CONSTB" 28 . 34) ("CONSTA" symbol "CONSTA" 20 . 26) ("ACTION" symbol "ACTION" 12 . 18) ("OPER_NAME" symbol "OPER_NAME" 1 . 10)))) 7732 . 7838) (semantic-list #("(CONSTA& a, const lambda_functor<Arg>& b)" 0 1 (macros (("CONVERSION" symbol "CONST_CONVERSION" 36 . 52) ("CONSTB" symbol "CONSTB" 28 . 34) ("CONSTA" symbol "CONSTA" 20 . 26) ("ACTION" symbol "ACTION" 12 . 18) ("OPER_NAME" symbol "OPER_NAME" 1 . 10)))) 7732 . 7838) (symbol "OPER_NAME" 7732 . 7838) (punctuation ">" 7732 . 7838) (punctuation ">" 7732 . 7838) (punctuation ">" 7732 . 7838) (punctuation ">" 7732 . 7838) (symbol "Arg" 7732 . 7838) (punctuation "<" 7732 . 7838) (symbol "lambda_functor" 7732 . 7838) (punctuation "," 7732 . 7838) (symbol "type" 7732 . 7838) (punctuation ":" 7732 . 7838) (punctuation ":" 7732 . 7838) (punctuation ">" 7732 . 7838) (symbol "CONSTA" 7732 . 7838) (punctuation "<" 7732 . 7838) (symbol "CONST_CONVERSION" 7732 . 7838) (TYPENAME "typename" 7732 . 7838) (punctuation "<" 7732 . 7838) (symbol "tuple" 7732 . 7838) (punctuation "," 7732 . 7838) (symbol "ACTION" 7732 . 7838) (punctuation "<" 7732 . 7838) (symbol "lambda_functor_base" 7732 . 7838) (punctuation "<" 7732 . 7838) (symbol "lambda_functor" 7732 . 7838) (CONST "const" 7732 . 7838) (INLINE "inline" 7732 . 7838) (punctuation ">" 7732 . 7838) (symbol "Arg" 7732 . 7838) (CLASS "class" 7732 . 7838) (punctuation "," 7732 . 7838) (symbol "A" 7732 . 7838) (CLASS "class" 7732 . 7838) (punctuation "<" 7732 . 7838) (TEMPLATE "template" 7732 . 7838) (semantic-list #("{                      \\
  return                                                                     \\
    lambda_functor_base<                                                     \\
      ACTION,                                                                \\
      tuple<lambda_functor<Arg>, typename CONVERSION <CONSTB>::type>       \\
    >                                                                        \\
   (tuple<lambda_functor<Arg>, typename CONVERSION <CONSTB>::type>(a, b)); \\
}" 0 1 (macros (("CONVERSION" symbol "CONST_CONVERSION" 36 . 52) ("CONSTB" symbol "CONSTB" 28 . 34) ("CONSTA" symbol "CONSTA" 20 . 26) ("ACTION" symbol "ACTION" 12 . 18) ("OPER_NAME" symbol "OPER_NAME" 1 . 10)))) 7732 . 7838) (semantic-list #("(const lambda_functor<Arg>& a, CONSTB& b)" 0 1 (macros (("CONVERSION" symbol "CONST_CONVERSION" 36 . 52) ("CONSTB" symbol "CONSTB" 28 . 34) ("CONSTA" symbol "CONSTA" 20 . 26) ("ACTION" symbol "ACTION" 12 . 18) ("OPER_NAME" symbol "OPER_NAME" 1 . 10)))) 7732 . 7838) (symbol "OPER_NAME" 7732 . 7838) (punctuation ">" 7732 . 7838) (punctuation ">" 7732 . 7838) (punctuation ">" 7732 . 7838) (symbol "type" 7732 . 7838) (punctuation ":" 7732 . 7838) (punctuation ":" 7732 . 7838) (punctuation ">" 7732 . 7838) (symbol "CONSTB" 7732 . 7838) (punctuation "<" 7732 . 7838) (symbol "CONST_CONVERSION" 7732 . 7838) (TYPENAME "typename" 7732 . 7838) (punctuation "," 7732 . 7838) (punctuation ">" 7732 . 7838) (symbol "Arg" 7732 . 7838) (punctuation "<" 7732 . 7838) (symbol "lambda_functor" 7732 . 7838) (punctuation "<" 7732 . 7838) (symbol "tuple" 7732 . 7838) (punctuation "," 7732 . 7838) (symbol "ACTION" 7732 . 7838) (punctuation "<" 7732 . 7838) (symbol "lambda_functor_base" 7732 . 7838) (punctuation "<" 7732 . 7838) (symbol "lambda_functor" 7732 . 7838) (CONST "const" 7732 . 7838) (INLINE "inline" 7732 . 7838) (punctuation ">" 7732 . 7838) (symbol "B" 7732 . 7838) (CLASS "class" 7732 . 7838) (punctuation "," 7732 . 7838) (symbol "Arg" 7732 . 7838) (CLASS "class" 7732 . 7838) (punctuation "<" 7732 . 7838) (TEMPLATE "template" 7732 . 7838) (semantic-list #("{ \\
  return                                                                   \\
    lambda_functor_base<                                                   \\
      ACTION,                                                              \\
      tuple<lambda_functor<ArgA>, lambda_functor<ArgB> >                   \\
    >                                                                      \\
  (tuple<lambda_functor<ArgA>, lambda_functor<ArgB> >(a, b));              \\
}" 0 1 (macros (("CONVERSION" symbol "CONST_CONVERSION" 36 . 52) ("CONSTB" symbol "CONSTB" 28 . 34) ("CONSTA" symbol "CONSTA" 20 . 26) ("ACTION" symbol "ACTION" 12 . 18) ("OPER_NAME" symbol "OPER_NAME" 1 . 10)))) 7626 . 7731) (semantic-list #("(const lambda_functor<ArgA>& a, const lambda_functor<ArgB>& b)" 0 1 (macros (("CONVERSION" symbol "CONST_CONVERSION" 36 . 52) ("CONSTB" symbol "CONSTB" 28 . 34) ("CONSTA" symbol "CONSTA" 20 . 26) ("ACTION" symbol "ACTION" 12 . 18) ("OPER_NAME" symbol "OPER_NAME" 1 . 10)))) 7626 . 7731) (symbol "OPER_NAME" 7626 . 7731) (punctuation ">" 7626 . 7731) (punctuation ">" 7626 . 7731) (punctuation ">" 7626 . 7731) (punctuation ">" 7626 . 7731) (symbol "ArgB" 7626 . 7731) (punctuation "<" 7626 . 7731) (symbol "lambda_functor" 7626 . 7731) (punctuation "," 7626 . 7731) (punctuation ">" 7626 . 7731) (symbol "ArgA" 7626 . 7731) (punctuation "<" 7626 . 7731) (symbol "lambda_functor" 7626 . 7731) (punctuation "<" 7626 . 7731) (symbol "tuple" 7626 . 7731) (punctuation "," 7626 . 7731) (symbol "ACTION" 7626 . 7731) (punctuation "<" 7626 . 7731) (symbol "lambda_functor_base" 7626 . 7731) (punctuation "<" 7626 . 7731) (symbol "lambda_functor" 7626 . 7731) (CONST "const" 7626 . 7731) (INLINE "inline" 7626 . 7731) (punctuation ">" 7626 . 7731) (symbol "ArgB" 7626 . 7731) (CLASS "class" 7626 . 7731) (punctuation "," 7626 . 7731) (symbol "ArgA" 7626 . 7731) (CLASS "class" 7626 . 7731) (punctuation "<" 7626 . 7731) (TEMPLATE "template" 7626 . 7731) (semantic-list #("{                      \\
  return                                                                     \\
    lambda_functor_base<                                                     \\
      ACTION,                                                                \\
      tuple<typename CONVERSION <CONSTA>::type, lambda_functor<Arg> >      \\
    >                                                                        \\
  (tuple<typename CONVERSION <CONSTA>::type, lambda_functor<Arg> >(a, b)); \\
}" 0 1 (macros (("CONVERSION" symbol "CONST_CONVERSION" 36 . 52) ("CONSTB" symbol "CONSTB" 28 . 34) ("CONSTA" symbol "CONSTA" 20 . 26) ("ACTION" symbol "ACTION" 12 . 18) ("OPER_NAME" symbol "OPER_NAME" 1 . 10)))) 7626 . 7731) (semantic-list #("(CONSTA& a, const lambda_functor<Arg>& b)" 0 1 (macros (("CONVERSION" symbol "CONST_CONVERSION" 36 . 52) ("CONSTB" symbol "CONSTB" 28 . 34) ("CONSTA" symbol "CONSTA" 20 . 26) ("ACTION" symbol "ACTION" 12 . 18) ("OPER_NAME" symbol "OPER_NAME" 1 . 10)))) 7626 . 7731) (symbol "OPER_NAME" 7626 . 7731) (punctuation ">" 7626 . 7731) (punctuation ">" 7626 . 7731) (punctuation ">" 7626 . 7731) (punctuation ">" 7626 . 7731) (symbol "Arg" 7626 . 7731) (punctuation "<" 7626 . 7731) (symbol "lambda_functor" 7626 . 7731) (punctuation "," 7626 . 7731) (symbol "type" 7626 . 7731) (punctuation ":" 7626 . 7731) (punctuation ":" 7626 . 7731) (punctuation ">" 7626 . 7731) (symbol "CONSTA" 7626 . 7731) (punctuation "<" 7626 . 7731) (symbol "CONST_CONVERSION" 7626 . 7731) (TYPENAME "typename" 7626 . 7731) (punctuation "<" 7626 . 7731) (symbol "tuple" 7626 . 7731) (punctuation "," 7626 . 7731) (symbol "ACTION" 7626 . 7731) (punctuation "<" 7626 . 7731) (symbol "lambda_functor_base" 7626 . 7731) (punctuation "<" 7626 . 7731) (symbol "lambda_functor" 7626 . 7731) (CONST "const" 7626 . 7731) (INLINE "inline" 7626 . 7731) (punctuation ">" 7626 . 7731) (symbol "Arg" 7626 . 7731) (CLASS "class" 7626 . 7731) (punctuation "," 7626 . 7731) (symbol "A" 7626 . 7731) (CLASS "class" 7626 . 7731) (punctuation "<" 7626 . 7731) (TEMPLATE "template" 7626 . 7731) (semantic-list #("{                      \\
  return                                                                     \\
    lambda_functor_base<                                                     \\
      ACTION,                                                                \\
      tuple<lambda_functor<Arg>, typename CONVERSION <CONSTB>::type>       \\
    >                                                                        \\
   (tuple<lambda_functor<Arg>, typename CONVERSION <CONSTB>::type>(a, b)); \\
}" 0 1 (macros (("CONVERSION" symbol "CONST_CONVERSION" 36 . 52) ("CONSTB" symbol "CONSTB" 28 . 34) ("CONSTA" symbol "CONSTA" 20 . 26) ("ACTION" symbol "ACTION" 12 . 18) ("OPER_NAME" symbol "OPER_NAME" 1 . 10)))) 7626 . 7731) (semantic-list #("(const lambda_functor<Arg>& a, CONSTB& b)" 0 1 (macros (("CONVERSION" symbol "CONST_CONVERSION" 36 . 52) ("CONSTB" symbol "CONSTB" 28 . 34) ("CONSTA" symbol "CONSTA" 20 . 26) ("ACTION" symbol "ACTION" 12 . 18) ("OPER_NAME" symbol "OPER_NAME" 1 . 10)))) 7626 . 7731) (symbol "OPER_NAME" 7626 . 7731) (punctuation ">" 7626 . 7731) (punctuation ">" 7626 . 7731) (punctuation ">" 7626 . 7731) (symbol "type" 7626 . 7731) (punctuation ":" 7626 . 7731) (punctuation ":" 7626 . 7731) (punctuation ">" 7626 . 7731) (symbol "CONSTB" 7626 . 7731) (punctuation "<" 7626 . 7731) (symbol "CONST_CONVERSION" 7626 . 7731) (TYPENAME "typename" 7626 . 7731) (punctuation "," 7626 . 7731) (punctuation ">" 7626 . 7731) (symbol "Arg" 7626 . 7731) (punctuation "<" 7626 . 7731) (symbol "lambda_functor" 7626 . 7731) (punctuation "<" 7626 . 7731) (symbol "tuple" 7626 . 7731) (punctuation "," 7626 . 7731) (symbol "ACTION" 7626 . 7731) (punctuation "<" 7626 . 7731) (symbol "lambda_functor_base" 7626 . 7731) (punctuation "<" 7626 . 7731) (symbol "lambda_functor" 7626 . 7731) (CONST "const" 7626 . 7731) (INLINE "inline" 7626 . 7731) (punctuation ">" 7626 . 7731) (symbol "B" 7626 . 7731) (CLASS "class" 7626 . 7731) (punctuation "," 7626 . 7731) (symbol "Arg" 7626 . 7731) (CLASS "class" 7626 . 7731) (punctuation "<" 7626 . 7731) (TEMPLATE "template" 7626 . 7731) (semantic-list #("{ \\
  return                                                                   \\
    lambda_functor_base<                                                   \\
      ACTION,                                                              \\
      tuple<lambda_functor<ArgA>, lambda_functor<ArgB> >                   \\
    >                                                                      \\
  (tuple<lambda_functor<ArgA>, lambda_functor<ArgB> >(a, b));              \\
}" 0 1 (macros (("CONVERSION" symbol "CONST_CONVERSION" 36 . 52) ("CONSTB" symbol "CONSTB" 28 . 34) ("CONSTA" symbol "CONSTA" 20 . 26) ("ACTION" symbol "ACTION" 12 . 18) ("OPER_NAME" symbol "OPER_NAME" 1 . 10)))) 7518 . 7625) (semantic-list #("(const lambda_functor<ArgA>& a, const lambda_functor<ArgB>& b)" 0 1 (macros (("CONVERSION" symbol "CONST_CONVERSION" 36 . 52) ("CONSTB" symbol "CONSTB" 28 . 34) ("CONSTA" symbol "CONSTA" 20 . 26) ("ACTION" symbol "ACTION" 12 . 18) ("OPER_NAME" symbol "OPER_NAME" 1 . 10)))) 7518 . 7625) (symbol "OPER_NAME" 7518 . 7625) (punctuation ">" 7518 . 7625) (punctuation ">" 7518 . 7625) (punctuation ">" 7518 . 7625) (punctuation ">" 7518 . 7625) (symbol "ArgB" 7518 . 7625) (punctuation "<" 7518 . 7625) (symbol "lambda_functor" 7518 . 7625) (punctuation "," 7518 . 7625) (punctuation ">" 7518 . 7625) (symbol "ArgA" 7518 . 7625) (punctuation "<" 7518 . 7625) (symbol "lambda_functor" 7518 . 7625) (punctuation "<" 7518 . 7625) (symbol "tuple" 7518 . 7625) (punctuation "," 7518 . 7625) (symbol "ACTION" 7518 . 7625) (punctuation "<" 7518 . 7625) (symbol "lambda_functor_base" 7518 . 7625) (punctuation "<" 7518 . 7625) (symbol "lambda_functor" 7518 . 7625) (CONST "const" 7518 . 7625) (INLINE "inline" 7518 . 7625) (punctuation ">" 7518 . 7625) (symbol "ArgB" 7518 . 7625) (CLASS "class" 7518 . 7625) (punctuation "," 7518 . 7625) (symbol "ArgA" 7518 . 7625) (CLASS "class" 7518 . 7625) (punctuation "<" 7518 . 7625) (TEMPLATE "template" 7518 . 7625) (semantic-list #("{                      \\
  return                                                                     \\
    lambda_functor_base<                                                     \\
      ACTION,                                                                \\
      tuple<typename CONVERSION <CONSTA>::type, lambda_functor<Arg> >      \\
    >                                                                        \\
  (tuple<typename CONVERSION <CONSTA>::type, lambda_functor<Arg> >(a, b)); \\
}" 0 1 (macros (("CONVERSION" symbol "CONST_CONVERSION" 36 . 52) ("CONSTB" symbol "CONSTB" 28 . 34) ("CONSTA" symbol "CONSTA" 20 . 26) ("ACTION" symbol "ACTION" 12 . 18) ("OPER_NAME" symbol "OPER_NAME" 1 . 10)))) 7518 . 7625) (semantic-list #("(CONSTA& a, const lambda_functor<Arg>& b)" 0 1 (macros (("CONVERSION" symbol "CONST_CONVERSION" 36 . 52) ("CONSTB" symbol "CONSTB" 28 . 34) ("CONSTA" symbol "CONSTA" 20 . 26) ("ACTION" symbol "ACTION" 12 . 18) ("OPER_NAME" symbol "OPER_NAME" 1 . 10)))) 7518 . 7625) (symbol "OPER_NAME" 7518 . 7625) (punctuation ">" 7518 . 7625) (punctuation ">" 7518 . 7625) (punctuation ">" 7518 . 7625) (punctuation ">" 7518 . 7625) (symbol "Arg" 7518 . 7625) (punctuation "<" 7518 . 7625) (symbol "lambda_functor" 7518 . 7625) (punctuation "," 7518 . 7625) (symbol "type" 7518 . 7625) (punctuation ":" 7518 . 7625) (punctuation ":" 7518 . 7625) (punctuation ">" 7518 . 7625) (symbol "CONSTA" 7518 . 7625) (punctuation "<" 7518 . 7625) (symbol "CONST_CONVERSION" 7518 . 7625) (TYPENAME "typename" 7518 . 7625) (punctuation "<" 7518 . 7625) (symbol "tuple" 7518 . 7625) (punctuation "," 7518 . 7625) (symbol "ACTION" 7518 . 7625) (punctuation "<" 7518 . 7625) (symbol "lambda_functor_base" 7518 . 7625) (punctuation "<" 7518 . 7625) (symbol "lambda_functor" 7518 . 7625) (CONST "const" 7518 . 7625) (INLINE "inline" 7518 . 7625) (punctuation ">" 7518 . 7625) (symbol "Arg" 7518 . 7625) (CLASS "class" 7518 . 7625) (punctuation "," 7518 . 7625) (symbol "A" 7518 . 7625) (CLASS "class" 7518 . 7625) (punctuation "<" 7518 . 7625) (TEMPLATE "template" 7518 . 7625) (semantic-list #("{                      \\
  return                                                                     \\
    lambda_functor_base<                                                     \\
      ACTION,                                                                \\
      tuple<lambda_functor<Arg>, typename CONVERSION <CONSTB>::type>       \\
    >                                                                        \\
   (tuple<lambda_functor<Arg>, typename CONVERSION <CONSTB>::type>(a, b)); \\
}" 0 1 (macros (("CONVERSION" symbol "CONST_CONVERSION" 36 . 52) ("CONSTB" symbol "CONSTB" 28 . 34) ("CONSTA" symbol "CONSTA" 20 . 26) ("ACTION" symbol "ACTION" 12 . 18) ("OPER_NAME" symbol "OPER_NAME" 1 . 10)))) 7518 . 7625) (semantic-list #("(const lambda_functor<Arg>& a, CONSTB& b)" 0 1 (macros (("CONVERSION" symbol "CONST_CONVERSION" 36 . 52) ("CONSTB" symbol "CONSTB" 28 . 34) ("CONSTA" symbol "CONSTA" 20 . 26) ("ACTION" symbol "ACTION" 12 . 18) ("OPER_NAME" symbol "OPER_NAME" 1 . 10)))) 7518 . 7625) (symbol "OPER_NAME" 7518 . 7625) (punctuation ">" 7518 . 7625) (punctuation ">" 7518 . 7625) (punctuation ">" 7518 . 7625) (symbol "type" 7518 . 7625) (punctuation ":" 7518 . 7625) (punctuation ":" 7518 . 7625) (punctuation ">" 7518 . 7625) (symbol "CONSTB" 7518 . 7625) (punctuation "<" 7518 . 7625) (symbol "CONST_CONVERSION" 7518 . 7625) (TYPENAME "typename" 7518 . 7625) (punctuation "," 7518 . 7625) (punctuation ">" 7518 . 7625) (symbol "Arg" 7518 . 7625) (punctuation "<" 7518 . 7625) (symbol "lambda_functor" 7518 . 7625) (punctuation "<" 7518 . 7625) (symbol "tuple" 7518 . 7625) (punctuation "," 7518 . 7625) (symbol "ACTION" 7518 . 7625) (punctuation "<" 7518 . 7625) (symbol "lambda_functor_base" 7518 . 7625) (punctuation "<" 7518 . 7625) (symbol "lambda_functor" 7518 . 7625) (CONST "const" 7518 . 7625) (INLINE "inline" 7518 . 7625) (punctuation ">" 7518 . 7625) (symbol "B" 7518 . 7625) (CLASS "class" 7518 . 7625) (punctuation "," 7518 . 7625) (symbol "Arg" 7518 . 7625) (CLASS "class" 7518 . 7625) (punctuation "<" 7518 . 7625) (TEMPLATE "template" 7518 . 7625) (semantic-list #("{ \\
  return                                                                   \\
    lambda_functor_base<                                                   \\
      ACTION,                                                              \\
      tuple<lambda_functor<ArgA>, lambda_functor<ArgB> >                   \\
    >                                                                      \\
  (tuple<lambda_functor<ArgA>, lambda_functor<ArgB> >(a, b));              \\
}" 0 1 (macros (("CONVERSION" symbol "CONST_CONVERSION" 36 . 52) ("CONSTB" symbol "CONSTB" 28 . 34) ("CONSTA" symbol "CONSTA" 20 . 26) ("ACTION" symbol "ACTION" 12 . 18) ("OPER_NAME" symbol "OPER_NAME" 1 . 10)))) 7413 . 7517) (semantic-list #("(const lambda_functor<ArgA>& a, const lambda_functor<ArgB>& b)" 0 1 (macros (("CONVERSION" symbol "CONST_CONVERSION" 36 . 52) ("CONSTB" symbol "CONSTB" 28 . 34) ("CONSTA" symbol "CONSTA" 20 . 26) ("ACTION" symbol "ACTION" 12 . 18) ("OPER_NAME" symbol "OPER_NAME" 1 . 10)))) 7413 . 7517) (symbol "OPER_NAME" 7413 . 7517) (punctuation ">" 7413 . 7517) (punctuation ">" 7413 . 7517) (punctuation ">" 7413 . 7517) (punctuation ">" 7413 . 7517) (symbol "ArgB" 7413 . 7517) (punctuation "<" 7413 . 7517) (symbol "lambda_functor" 7413 . 7517) (punctuation "," 7413 . 7517) (punctuation ">" 7413 . 7517) (symbol "ArgA" 7413 . 7517) (punctuation "<" 7413 . 7517) (symbol "lambda_functor" 7413 . 7517) (punctuation "<" 7413 . 7517) (symbol "tuple" 7413 . 7517) (punctuation "," 7413 . 7517) (symbol "ACTION" 7413 . 7517) (punctuation "<" 7413 . 7517) (symbol "lambda_functor_base" 7413 . 7517) (punctuation "<" 7413 . 7517) (symbol "lambda_functor" 7413 . 7517) (CONST "const" 7413 . 7517) (INLINE "inline" 7413 . 7517) (punctuation ">" 7413 . 7517) (symbol "ArgB" 7413 . 7517) (CLASS "class" 7413 . 7517) (punctuation "," 7413 . 7517) (symbol "ArgA" 7413 . 7517) (CLASS "class" 7413 . 7517) (punctuation "<" 7413 . 7517) (TEMPLATE "template" 7413 . 7517) (semantic-list #("{                      \\
  return                                                                     \\
    lambda_functor_base<                                                     \\
      ACTION,                                                                \\
      tuple<typename CONVERSION <CONSTA>::type, lambda_functor<Arg> >      \\
    >                                                                        \\
  (tuple<typename CONVERSION <CONSTA>::type, lambda_functor<Arg> >(a, b)); \\
}" 0 1 (macros (("CONVERSION" symbol "CONST_CONVERSION" 36 . 52) ("CONSTB" symbol "CONSTB" 28 . 34) ("CONSTA" symbol "CONSTA" 20 . 26) ("ACTION" symbol "ACTION" 12 . 18) ("OPER_NAME" symbol "OPER_NAME" 1 . 10)))) 7413 . 7517) (semantic-list #("(CONSTA& a, const lambda_functor<Arg>& b)" 0 1 (macros (("CONVERSION" symbol "CONST_CONVERSION" 36 . 52) ("CONSTB" symbol "CONSTB" 28 . 34) ("CONSTA" symbol "CONSTA" 20 . 26) ("ACTION" symbol "ACTION" 12 . 18) ("OPER_NAME" symbol "OPER_NAME" 1 . 10)))) 7413 . 7517) (symbol "OPER_NAME" 7413 . 7517) (punctuation ">" 7413 . 7517) (punctuation ">" 7413 . 7517) (punctuation ">" 7413 . 7517) (punctuation ">" 7413 . 7517) (symbol "Arg" 7413 . 7517) (punctuation "<" 7413 . 7517) (symbol "lambda_functor" 7413 . 7517) (punctuation "," 7413 . 7517) (symbol "type" 7413 . 7517) (punctuation ":" 7413 . 7517) (punctuation ":" 7413 . 7517) (punctuation ">" 7413 . 7517) (symbol "CONSTA" 7413 . 7517) (punctuation "<" 7413 . 7517) (symbol "CONST_CONVERSION" 7413 . 7517) (TYPENAME "typename" 7413 . 7517) (punctuation "<" 7413 . 7517) (symbol "tuple" 7413 . 7517) (punctuation "," 7413 . 7517) (symbol "ACTION" 7413 . 7517) (punctuation "<" 7413 . 7517) (symbol "lambda_functor_base" 7413 . 7517) (punctuation "<" 7413 . 7517) (symbol "lambda_functor" 7413 . 7517) (CONST "const" 7413 . 7517) (INLINE "inline" 7413 . 7517) (punctuation ">" 7413 . 7517) (symbol "Arg" 7413 . 7517) (CLASS "class" 7413 . 7517) (punctuation "," 7413 . 7517) (symbol "A" 7413 . 7517) (CLASS "class" 7413 . 7517) (punctuation "<" 7413 . 7517) (TEMPLATE "template" 7413 . 7517) (semantic-list #("{                      \\
  return                                                                     \\
    lambda_functor_base<                                                     \\
      ACTION,                                                                \\
      tuple<lambda_functor<Arg>, typename CONVERSION <CONSTB>::type>       \\
    >                                                                        \\
   (tuple<lambda_functor<Arg>, typename CONVERSION <CONSTB>::type>(a, b)); \\
}" 0 1 (macros (("CONVERSION" symbol "CONST_CONVERSION" 36 . 52) ("CONSTB" symbol "CONSTB" 28 . 34) ("CONSTA" symbol "CONSTA" 20 . 26) ("ACTION" symbol "ACTION" 12 . 18) ("OPER_NAME" symbol "OPER_NAME" 1 . 10)))) 7413 . 7517) (semantic-list #("(const lambda_functor<Arg>& a, CONSTB& b)" 0 1 (macros (("CONVERSION" symbol "CONST_CONVERSION" 36 . 52) ("CONSTB" symbol "CONSTB" 28 . 34) ("CONSTA" symbol "CONSTA" 20 . 26) ("ACTION" symbol "ACTION" 12 . 18) ("OPER_NAME" symbol "OPER_NAME" 1 . 10)))) 7413 . 7517) (symbol "OPER_NAME" 7413 . 7517) (punctuation ">" 7413 . 7517) (punctuation ">" 7413 . 7517) (punctuation ">" 7413 . 7517) (symbol "type" 7413 . 7517) (punctuation ":" 7413 . 7517) (punctuation ":" 7413 . 7517) (punctuation ">" 7413 . 7517) (symbol "CONSTB" 7413 . 7517) (punctuation "<" 7413 . 7517) (symbol "CONST_CONVERSION" 7413 . 7517) (TYPENAME "typename" 7413 . 7517) (punctuation "," 7413 . 7517) (punctuation ">" 7413 . 7517) (symbol "Arg" 7413 . 7517) (punctuation "<" 7413 . 7517) (symbol "lambda_functor" 7413 . 7517) (punctuation "<" 7413 . 7517) (symbol "tuple" 7413 . 7517) (punctuation "," 7413 . 7517) (symbol "ACTION" 7413 . 7517) (punctuation "<" 7413 . 7517) (symbol "lambda_functor_base" 7413 . 7517) (punctuation "<" 7413 . 7517) (symbol "lambda_functor" 7413 . 7517) (CONST "const" 7413 . 7517) (INLINE "inline" 7413 . 7517) (punctuation ">" 7413 . 7517) (symbol "B" 7413 . 7517) (CLASS "class" 7413 . 7517) (punctuation "," 7413 . 7517) (symbol "Arg" 7413 . 7517) (CLASS "class" 7413 . 7517) (punctuation "<" 7413 . 7517) (TEMPLATE "template" 7413 . 7517) (semantic-list #("{ \\
  return                                                                   \\
    lambda_functor_base<                                                   \\
      ACTION,                                                              \\
      tuple<lambda_functor<ArgA>, lambda_functor<ArgB> >                   \\
    >                                                                      \\
  (tuple<lambda_functor<ArgA>, lambda_functor<ArgB> >(a, b));              \\
}" 0 1 (macros (("CONVERSION" symbol "CONST_CONVERSION" 36 . 52) ("CONSTB" symbol "CONSTB" 28 . 34) ("CONSTA" symbol "CONSTA" 20 . 26) ("ACTION" symbol "ACTION" 12 . 18) ("OPER_NAME" symbol "OPER_NAME" 1 . 10)))) 7306 . 7412) (semantic-list #("(const lambda_functor<ArgA>& a, const lambda_functor<ArgB>& b)" 0 1 (macros (("CONVERSION" symbol "CONST_CONVERSION" 36 . 52) ("CONSTB" symbol "CONSTB" 28 . 34) ("CONSTA" symbol "CONSTA" 20 . 26) ("ACTION" symbol "ACTION" 12 . 18) ("OPER_NAME" symbol "OPER_NAME" 1 . 10)))) 7306 . 7412) (symbol "OPER_NAME" 7306 . 7412) (punctuation ">" 7306 . 7412) (punctuation ">" 7306 . 7412) (punctuation ">" 7306 . 7412) (punctuation ">" 7306 . 7412) (symbol "ArgB" 7306 . 7412) (punctuation "<" 7306 . 7412) (symbol "lambda_functor" 7306 . 7412) (punctuation "," 7306 . 7412) (punctuation ">" 7306 . 7412) (symbol "ArgA" 7306 . 7412) (punctuation "<" 7306 . 7412) (symbol "lambda_functor" 7306 . 7412) (punctuation "<" 7306 . 7412) (symbol "tuple" 7306 . 7412) (punctuation "," 7306 . 7412) (symbol "ACTION" 7306 . 7412) (punctuation "<" 7306 . 7412) (symbol "lambda_functor_base" 7306 . 7412) (punctuation "<" 7306 . 7412) (symbol "lambda_functor" 7306 . 7412) (CONST "const" 7306 . 7412) (INLINE "inline" 7306 . 7412) (punctuation ">" 7306 . 7412) (symbol "ArgB" 7306 . 7412) (CLASS "class" 7306 . 7412) (punctuation "," 7306 . 7412) (symbol "ArgA" 7306 . 7412) (CLASS "class" 7306 . 7412) (punctuation "<" 7306 . 7412) (TEMPLATE "template" 7306 . 7412) (semantic-list #("{                      \\
  return                                                                     \\
    lambda_functor_base<                                                     \\
      ACTION,                                                                \\
      tuple<typename CONVERSION <CONSTA>::type, lambda_functor<Arg> >      \\
    >                                                                        \\
  (tuple<typename CONVERSION <CONSTA>::type, lambda_functor<Arg> >(a, b)); \\
}" 0 1 (macros (("CONVERSION" symbol "CONST_CONVERSION" 36 . 52) ("CONSTB" symbol "CONSTB" 28 . 34) ("CONSTA" symbol "CONSTA" 20 . 26) ("ACTION" symbol "ACTION" 12 . 18) ("OPER_NAME" symbol "OPER_NAME" 1 . 10)))) 7306 . 7412) (semantic-list #("(CONSTA& a, const lambda_functor<Arg>& b)" 0 1 (macros (("CONVERSION" symbol "CONST_CONVERSION" 36 . 52) ("CONSTB" symbol "CONSTB" 28 . 34) ("CONSTA" symbol "CONSTA" 20 . 26) ("ACTION" symbol "ACTION" 12 . 18) ("OPER_NAME" symbol "OPER_NAME" 1 . 10)))) 7306 . 7412) (symbol "OPER_NAME" 7306 . 7412) (punctuation ">" 7306 . 7412) (punctuation ">" 7306 . 7412) (punctuation ">" 7306 . 7412) (punctuation ">" 7306 . 7412) (symbol "Arg" 7306 . 7412) (punctuation "<" 7306 . 7412) (symbol "lambda_functor" 7306 . 7412) (punctuation "," 7306 . 7412) (symbol "type" 7306 . 7412) (punctuation ":" 7306 . 7412) (punctuation ":" 7306 . 7412) (punctuation ">" 7306 . 7412) (symbol "CONSTA" 7306 . 7412) (punctuation "<" 7306 . 7412) (symbol "CONST_CONVERSION" 7306 . 7412) (TYPENAME "typename" 7306 . 7412) (punctuation "<" 7306 . 7412) (symbol "tuple" 7306 . 7412) (punctuation "," 7306 . 7412) (symbol "ACTION" 7306 . 7412) (punctuation "<" 7306 . 7412) (symbol "lambda_functor_base" 7306 . 7412) (punctuation "<" 7306 . 7412) (symbol "lambda_functor" 7306 . 7412) (CONST "const" 7306 . 7412) (INLINE "inline" 7306 . 7412) (punctuation ">" 7306 . 7412) (symbol "Arg" 7306 . 7412) (CLASS "class" 7306 . 7412) (punctuation "," 7306 . 7412) (symbol "A" 7306 . 7412) (CLASS "class" 7306 . 7412) (punctuation "<" 7306 . 7412) (TEMPLATE "template" 7306 . 7412) (semantic-list #("{                      \\
  return                                                                     \\
    lambda_functor_base<                                                     \\
      ACTION,                                                                \\
      tuple<lambda_functor<Arg>, typename CONVERSION <CONSTB>::type>       \\
    >                                                                        \\
   (tuple<lambda_functor<Arg>, typename CONVERSION <CONSTB>::type>(a, b)); \\
}" 0 1 (macros (("CONVERSION" symbol "CONST_CONVERSION" 36 . 52) ("CONSTB" symbol "CONSTB" 28 . 34) ("CONSTA" symbol "CONSTA" 20 . 26) ("ACTION" symbol "ACTION" 12 . 18) ("OPER_NAME" symbol "OPER_NAME" 1 . 10)))) 7306 . 7412) (semantic-list #("(const lambda_functor<Arg>& a, CONSTB& b)" 0 1 (macros (("CONVERSION" symbol "CONST_CONVERSION" 36 . 52) ("CONSTB" symbol "CONSTB" 28 . 34) ("CONSTA" symbol "CONSTA" 20 . 26) ("ACTION" symbol "ACTION" 12 . 18) ("OPER_NAME" symbol "OPER_NAME" 1 . 10)))) 7306 . 7412) (symbol "OPER_NAME" 7306 . 7412) (punctuation ">" 7306 . 7412) (punctuation ">" 7306 . 7412) (punctuation ">" 7306 . 7412) (symbol "type" 7306 . 7412) (punctuation ":" 7306 . 7412) (punctuation ":" 7306 . 7412) (punctuation ">" 7306 . 7412) (symbol "CONSTB" 7306 . 7412) (punctuation "<" 7306 . 7412) (symbol "CONST_CONVERSION" 7306 . 7412) (TYPENAME "typename" 7306 . 7412) (punctuation "," 7306 . 7412) (punctuation ">" 7306 . 7412) (symbol "Arg" 7306 . 7412) (punctuation "<" 7306 . 7412) (symbol "lambda_functor" 7306 . 7412) (punctuation "<" 7306 . 7412) (symbol "tuple" 7306 . 7412) (punctuation "," 7306 . 7412) (symbol "ACTION" 7306 . 7412) (punctuation "<" 7306 . 7412) (symbol "lambda_functor_base" 7306 . 7412) (punctuation "<" 7306 . 7412) (symbol "lambda_functor" 7306 . 7412) (CONST "const" 7306 . 7412) (INLINE "inline" 7306 . 7412) (punctuation ">" 7306 . 7412) (symbol "B" 7306 . 7412) (CLASS "class" 7306 . 7412) (punctuation "," 7306 . 7412) (symbol "Arg" 7306 . 7412) (CLASS "class" 7306 . 7412) (punctuation "<" 7306 . 7412) (TEMPLATE "template" 7306 . 7412) (semantic-list #("{ \\
  return                                                                   \\
    lambda_functor_base<                                                   \\
      ACTION,                                                              \\
      tuple<lambda_functor<ArgA>, lambda_functor<ArgB> >                   \\
    >                                                                      \\
  (tuple<lambda_functor<ArgA>, lambda_functor<ArgB> >(a, b));              \\
}" 0 1 (macros (("CONVERSION" symbol "CONST_CONVERSION" 36 . 52) ("CONSTB" symbol "CONSTB" 28 . 34) ("CONSTA" symbol "CONSTA" 20 . 26) ("ACTION" symbol "ACTION" 12 . 18) ("OPER_NAME" symbol "OPER_NAME" 1 . 10)))) 7202 . 7305) (semantic-list #("(const lambda_functor<ArgA>& a, const lambda_functor<ArgB>& b)" 0 1 (macros (("CONVERSION" symbol "CONST_CONVERSION" 36 . 52) ("CONSTB" symbol "CONSTB" 28 . 34) ("CONSTA" symbol "CONSTA" 20 . 26) ("ACTION" symbol "ACTION" 12 . 18) ("OPER_NAME" symbol "OPER_NAME" 1 . 10)))) 7202 . 7305) (symbol "OPER_NAME" 7202 . 7305) (punctuation ">" 7202 . 7305) (punctuation ">" 7202 . 7305) (punctuation ">" 7202 . 7305) (punctuation ">" 7202 . 7305) (symbol "ArgB" 7202 . 7305) (punctuation "<" 7202 . 7305) (symbol "lambda_functor" 7202 . 7305) (punctuation "," 7202 . 7305) (punctuation ">" 7202 . 7305) (symbol "ArgA" 7202 . 7305) (punctuation "<" 7202 . 7305) (symbol "lambda_functor" 7202 . 7305) (punctuation "<" 7202 . 7305) (symbol "tuple" 7202 . 7305) (punctuation "," 7202 . 7305) (symbol "ACTION" 7202 . 7305) (punctuation "<" 7202 . 7305) (symbol "lambda_functor_base" 7202 . 7305) (punctuation "<" 7202 . 7305) (symbol "lambda_functor" 7202 . 7305) (CONST "const" 7202 . 7305) (INLINE "inline" 7202 . 7305) (punctuation ">" 7202 . 7305) (symbol "ArgB" 7202 . 7305) (CLASS "class" 7202 . 7305) (punctuation "," 7202 . 7305) (symbol "ArgA" 7202 . 7305) (CLASS "class" 7202 . 7305) (punctuation "<" 7202 . 7305) (TEMPLATE "template" 7202 . 7305) (semantic-list #("{                      \\
  return                                                                     \\
    lambda_functor_base<                                                     \\
      ACTION,                                                                \\
      tuple<typename CONVERSION <CONSTA>::type, lambda_functor<Arg> >      \\
    >                                                                        \\
  (tuple<typename CONVERSION <CONSTA>::type, lambda_functor<Arg> >(a, b)); \\
}" 0 1 (macros (("CONVERSION" symbol "CONST_CONVERSION" 36 . 52) ("CONSTB" symbol "CONSTB" 28 . 34) ("CONSTA" symbol "CONSTA" 20 . 26) ("ACTION" symbol "ACTION" 12 . 18) ("OPER_NAME" symbol "OPER_NAME" 1 . 10)))) 7202 . 7305) (semantic-list #("(CONSTA& a, const lambda_functor<Arg>& b)" 0 1 (macros (("CONVERSION" symbol "CONST_CONVERSION" 36 . 52) ("CONSTB" symbol "CONSTB" 28 . 34) ("CONSTA" symbol "CONSTA" 20 . 26) ("ACTION" symbol "ACTION" 12 . 18) ("OPER_NAME" symbol "OPER_NAME" 1 . 10)))) 7202 . 7305) (symbol "OPER_NAME" 7202 . 7305) (punctuation ">" 7202 . 7305) (punctuation ">" 7202 . 7305) (punctuation ">" 7202 . 7305) (punctuation ">" 7202 . 7305) (symbol "Arg" 7202 . 7305) (punctuation "<" 7202 . 7305) (symbol "lambda_functor" 7202 . 7305) (punctuation "," 7202 . 7305) (symbol "type" 7202 . 7305) (punctuation ":" 7202 . 7305) (punctuation ":" 7202 . 7305) (punctuation ">" 7202 . 7305) (symbol "CONSTA" 7202 . 7305) (punctuation "<" 7202 . 7305) (symbol "CONST_CONVERSION" 7202 . 7305) (TYPENAME "typename" 7202 . 7305) (punctuation "<" 7202 . 7305) (symbol "tuple" 7202 . 7305) (punctuation "," 7202 . 7305) (symbol "ACTION" 7202 . 7305) (punctuation "<" 7202 . 7305) (symbol "lambda_functor_base" 7202 . 7305) (punctuation "<" 7202 . 7305) (symbol "lambda_functor" 7202 . 7305) (CONST "const" 7202 . 7305) (INLINE "inline" 7202 . 7305) (punctuation ">" 7202 . 7305) (symbol "Arg" 7202 . 7305) (CLASS "class" 7202 . 7305) (punctuation "," 7202 . 7305) (symbol "A" 7202 . 7305) (CLASS "class" 7202 . 7305) (punctuation "<" 7202 . 7305) (TEMPLATE "template" 7202 . 7305) (semantic-list #("{                      \\
  return                                                                     \\
    lambda_functor_base<                                                     \\
      ACTION,                                                                \\
      tuple<lambda_functor<Arg>, typename CONVERSION <CONSTB>::type>       \\
    >                                                                        \\
   (tuple<lambda_functor<Arg>, typename CONVERSION <CONSTB>::type>(a, b)); \\
}" 0 1 (macros (("CONVERSION" symbol "CONST_CONVERSION" 36 . 52) ("CONSTB" symbol "CONSTB" 28 . 34) ("CONSTA" symbol "CONSTA" 20 . 26) ("ACTION" symbol "ACTION" 12 . 18) ("OPER_NAME" symbol "OPER_NAME" 1 . 10)))) 7202 . 7305) (semantic-list #("(const lambda_functor<Arg>& a, CONSTB& b)" 0 1 (macros (("CONVERSION" symbol "CONST_CONVERSION" 36 . 52) ("CONSTB" symbol "CONSTB" 28 . 34) ("CONSTA" symbol "CONSTA" 20 . 26) ("ACTION" symbol "ACTION" 12 . 18) ("OPER_NAME" symbol "OPER_NAME" 1 . 10)))) 7202 . 7305) (symbol "OPER_NAME" 7202 . 7305) (punctuation ">" 7202 . 7305) (punctuation ">" 7202 . 7305) (punctuation ">" 7202 . 7305) (symbol "type" 7202 . 7305) (punctuation ":" 7202 . 7305) (punctuation ":" 7202 . 7305) (punctuation ">" 7202 . 7305) (symbol "CONSTB" 7202 . 7305) (punctuation "<" 7202 . 7305) (symbol "CONST_CONVERSION" 7202 . 7305) (TYPENAME "typename" 7202 . 7305) (punctuation "," 7202 . 7305) (punctuation ">" 7202 . 7305) (symbol "Arg" 7202 . 7305) (punctuation "<" 7202 . 7305) (symbol "lambda_functor" 7202 . 7305) (punctuation "<" 7202 . 7305) (symbol "tuple" 7202 . 7305) (punctuation "," 7202 . 7305) (symbol "ACTION" 7202 . 7305) (punctuation "<" 7202 . 7305) (symbol "lambda_functor_base" 7202 . 7305) (punctuation "<" 7202 . 7305) (symbol "lambda_functor" 7202 . 7305) (CONST "const" 7202 . 7305) (INLINE "inline" 7202 . 7305) (punctuation ">" 7202 . 7305) (symbol "B" 7202 . 7305) (CLASS "class" 7202 . 7305) (punctuation "," 7202 . 7305) (symbol "Arg" 7202 . 7305) (CLASS "class" 7202 . 7305) (punctuation "<" 7202 . 7305) (TEMPLATE "template" 7202 . 7305) (semantic-list #("{ \\
  return                                                                   \\
    lambda_functor_base<                                                   \\
      ACTION,                                                              \\
      tuple<lambda_functor<ArgA>, lambda_functor<ArgB> >                   \\
    >                                                                      \\
  (tuple<lambda_functor<ArgA>, lambda_functor<ArgB> >(a, b));              \\
}" 0 1 (macros (("CONVERSION" symbol "CONST_CONVERSION" 36 . 52) ("CONSTB" symbol "CONSTB" 28 . 34) ("CONSTA" symbol "CONSTA" 20 . 26) ("ACTION" symbol "ACTION" 12 . 18) ("OPER_NAME" symbol "OPER_NAME" 1 . 10)))) 7099 . 7201) (semantic-list #("(const lambda_functor<ArgA>& a, const lambda_functor<ArgB>& b)" 0 1 (macros (("CONVERSION" symbol "CONST_CONVERSION" 36 . 52) ("CONSTB" symbol "CONSTB" 28 . 34) ("CONSTA" symbol "CONSTA" 20 . 26) ("ACTION" symbol "ACTION" 12 . 18) ("OPER_NAME" symbol "OPER_NAME" 1 . 10)))) 7099 . 7201) (symbol "OPER_NAME" 7099 . 7201) (punctuation ">" 7099 . 7201) (punctuation ">" 7099 . 7201) (punctuation ">" 7099 . 7201) (punctuation ">" 7099 . 7201) (symbol "ArgB" 7099 . 7201) (punctuation "<" 7099 . 7201) (symbol "lambda_functor" 7099 . 7201) (punctuation "," 7099 . 7201) (punctuation ">" 7099 . 7201) (symbol "ArgA" 7099 . 7201) (punctuation "<" 7099 . 7201) (symbol "lambda_functor" 7099 . 7201) (punctuation "<" 7099 . 7201) (symbol "tuple" 7099 . 7201) (punctuation "," 7099 . 7201) (symbol "ACTION" 7099 . 7201) (punctuation "<" 7099 . 7201) (symbol "lambda_functor_base" 7099 . 7201) (punctuation "<" 7099 . 7201) (symbol "lambda_functor" 7099 . 7201) (CONST "const" 7099 . 7201) (INLINE "inline" 7099 . 7201) (punctuation ">" 7099 . 7201) (symbol "ArgB" 7099 . 7201) (CLASS "class" 7099 . 7201) (punctuation "," 7099 . 7201) (symbol "ArgA" 7099 . 7201) (CLASS "class" 7099 . 7201) (punctuation "<" 7099 . 7201) (TEMPLATE "template" 7099 . 7201) (semantic-list #("{                      \\
  return                                                                     \\
    lambda_functor_base<                                                     \\
      ACTION,                                                                \\
      tuple<typename CONVERSION <CONSTA>::type, lambda_functor<Arg> >      \\
    >                                                                        \\
  (tuple<typename CONVERSION <CONSTA>::type, lambda_functor<Arg> >(a, b)); \\
}" 0 1 (macros (("CONVERSION" symbol "CONST_CONVERSION" 36 . 52) ("CONSTB" symbol "CONSTB" 28 . 34) ("CONSTA" symbol "CONSTA" 20 . 26) ("ACTION" symbol "ACTION" 12 . 18) ("OPER_NAME" symbol "OPER_NAME" 1 . 10)))) 7099 . 7201) (semantic-list #("(CONSTA& a, const lambda_functor<Arg>& b)" 0 1 (macros (("CONVERSION" symbol "CONST_CONVERSION" 36 . 52) ("CONSTB" symbol "CONSTB" 28 . 34) ("CONSTA" symbol "CONSTA" 20 . 26) ("ACTION" symbol "ACTION" 12 . 18) ("OPER_NAME" symbol "OPER_NAME" 1 . 10)))) 7099 . 7201) (symbol "OPER_NAME" 7099 . 7201) (punctuation ">" 7099 . 7201) (punctuation ">" 7099 . 7201) (punctuation ">" 7099 . 7201) (punctuation ">" 7099 . 7201) (symbol "Arg" 7099 . 7201) (punctuation "<" 7099 . 7201) (symbol "lambda_functor" 7099 . 7201) (punctuation "," 7099 . 7201) (symbol "type" 7099 . 7201) (punctuation ":" 7099 . 7201) (punctuation ":" 7099 . 7201) (punctuation ">" 7099 . 7201) (symbol "CONSTA" 7099 . 7201) (punctuation "<" 7099 . 7201) (symbol "CONST_CONVERSION" 7099 . 7201) (TYPENAME "typename" 7099 . 7201) (punctuation "<" 7099 . 7201) (symbol "tuple" 7099 . 7201) (punctuation "," 7099 . 7201) (symbol "ACTION" 7099 . 7201) (punctuation "<" 7099 . 7201) (symbol "lambda_functor_base" 7099 . 7201) (punctuation "<" 7099 . 7201) (symbol "lambda_functor" 7099 . 7201) (CONST "const" 7099 . 7201) (INLINE "inline" 7099 . 7201) (punctuation ">" 7099 . 7201) (symbol "Arg" 7099 . 7201) (CLASS "class" 7099 . 7201) (punctuation "," 7099 . 7201) (symbol "A" 7099 . 7201) (CLASS "class" 7099 . 7201) (punctuation "<" 7099 . 7201) (TEMPLATE "template" 7099 . 7201) (semantic-list #("{                      \\
  return                                                                     \\
    lambda_functor_base<                                                     \\
      ACTION,                                                                \\
      tuple<lambda_functor<Arg>, typename CONVERSION <CONSTB>::type>       \\
    >                                                                        \\
   (tuple<lambda_functor<Arg>, typename CONVERSION <CONSTB>::type>(a, b)); \\
}" 0 1 (macros (("CONVERSION" symbol "CONST_CONVERSION" 36 . 52) ("CONSTB" symbol "CONSTB" 28 . 34) ("CONSTA" symbol "CONSTA" 20 . 26) ("ACTION" symbol "ACTION" 12 . 18) ("OPER_NAME" symbol "OPER_NAME" 1 . 10)))) 7099 . 7201) (semantic-list #("(const lambda_functor<Arg>& a, CONSTB& b)" 0 1 (macros (("CONVERSION" symbol "CONST_CONVERSION" 36 . 52) ("CONSTB" symbol "CONSTB" 28 . 34) ("CONSTA" symbol "CONSTA" 20 . 26) ("ACTION" symbol "ACTION" 12 . 18) ("OPER_NAME" symbol "OPER_NAME" 1 . 10)))) 7099 . 7201) (symbol "OPER_NAME" 7099 . 7201) (punctuation ">" 7099 . 7201) (punctuation ">" 7099 . 7201) (punctuation ">" 7099 . 7201) (symbol "type" 7099 . 7201) (punctuation ":" 7099 . 7201) (punctuation ":" 7099 . 7201) (punctuation ">" 7099 . 7201) (symbol "CONSTB" 7099 . 7201) (punctuation "<" 7099 . 7201) (symbol "CONST_CONVERSION" 7099 . 7201) (TYPENAME "typename" 7099 . 7201) (punctuation "," 7099 . 7201) (punctuation ">" 7099 . 7201) (symbol "Arg" 7099 . 7201) (punctuation "<" 7099 . 7201) (symbol "lambda_functor" 7099 . 7201) (punctuation "<" 7099 . 7201) (symbol "tuple" 7099 . 7201) (punctuation "," 7099 . 7201) (symbol "ACTION" 7099 . 7201) (punctuation "<" 7099 . 7201) (symbol "lambda_functor_base" 7099 . 7201) (punctuation "<" 7099 . 7201) (symbol "lambda_functor" 7099 . 7201) (CONST "const" 7099 . 7201) (INLINE "inline" 7099 . 7201) (punctuation ">" 7099 . 7201) (symbol "B" 7099 . 7201) (CLASS "class" 7099 . 7201) (punctuation "," 7099 . 7201) (symbol "Arg" 7099 . 7201) (CLASS "class" 7099 . 7201) (punctuation "<" 7099 . 7201) (TEMPLATE "template" 7099 . 7201) (semantic-list #("{ \\
  return                                                                   \\
    lambda_functor_base<                                                   \\
      ACTION,                                                              \\
      tuple<lambda_functor<ArgA>, lambda_functor<ArgB> >                   \\
    >                                                                      \\
  (tuple<lambda_functor<ArgA>, lambda_functor<ArgB> >(a, b));              \\
}" 0 1 (macros (("CONVERSION" symbol "CONST_CONVERSION" 36 . 52) ("CONSTB" symbol "CONSTB" 28 . 34) ("CONSTA" symbol "CONSTA" 20 . 26) ("ACTION" symbol "ACTION" 12 . 18) ("OPER_NAME" symbol "OPER_NAME" 1 . 10)))) 6995 . 7097) (semantic-list #("(const lambda_functor<ArgA>& a, const lambda_functor<ArgB>& b)" 0 1 (macros (("CONVERSION" symbol "CONST_CONVERSION" 36 . 52) ("CONSTB" symbol "CONSTB" 28 . 34) ("CONSTA" symbol "CONSTA" 20 . 26) ("ACTION" symbol "ACTION" 12 . 18) ("OPER_NAME" symbol "OPER_NAME" 1 . 10)))) 6995 . 7097) (symbol "OPER_NAME" 6995 . 7097) (punctuation ">" 6995 . 7097) (punctuation ">" 6995 . 7097) (punctuation ">" 6995 . 7097) (punctuation ">" 6995 . 7097) (symbol "ArgB" 6995 . 7097) (punctuation "<" 6995 . 7097) (symbol "lambda_functor" 6995 . 7097) (punctuation "," 6995 . 7097) (punctuation ">" 6995 . 7097) (symbol "ArgA" 6995 . 7097) (punctuation "<" 6995 . 7097) (symbol "lambda_functor" 6995 . 7097) (punctuation "<" 6995 . 7097) (symbol "tuple" 6995 . 7097) (punctuation "," 6995 . 7097) (symbol "ACTION" 6995 . 7097) (punctuation "<" 6995 . 7097) (symbol "lambda_functor_base" 6995 . 7097) (punctuation "<" 6995 . 7097) (symbol "lambda_functor" 6995 . 7097) (CONST "const" 6995 . 7097) (INLINE "inline" 6995 . 7097) (punctuation ">" 6995 . 7097) (symbol "ArgB" 6995 . 7097) (CLASS "class" 6995 . 7097) (punctuation "," 6995 . 7097) (symbol "ArgA" 6995 . 7097) (CLASS "class" 6995 . 7097) (punctuation "<" 6995 . 7097) (TEMPLATE "template" 6995 . 7097) (semantic-list #("{                      \\
  return                                                                     \\
    lambda_functor_base<                                                     \\
      ACTION,                                                                \\
      tuple<typename CONVERSION <CONSTA>::type, lambda_functor<Arg> >      \\
    >                                                                        \\
  (tuple<typename CONVERSION <CONSTA>::type, lambda_functor<Arg> >(a, b)); \\
}" 0 1 (macros (("CONVERSION" symbol "CONST_CONVERSION" 36 . 52) ("CONSTB" symbol "CONSTB" 28 . 34) ("CONSTA" symbol "CONSTA" 20 . 26) ("ACTION" symbol "ACTION" 12 . 18) ("OPER_NAME" symbol "OPER_NAME" 1 . 10)))) 6995 . 7097) (semantic-list #("(CONSTA& a, const lambda_functor<Arg>& b)" 0 1 (macros (("CONVERSION" symbol "CONST_CONVERSION" 36 . 52) ("CONSTB" symbol "CONSTB" 28 . 34) ("CONSTA" symbol "CONSTA" 20 . 26) ("ACTION" symbol "ACTION" 12 . 18) ("OPER_NAME" symbol "OPER_NAME" 1 . 10)))) 6995 . 7097) (symbol "OPER_NAME" 6995 . 7097) (punctuation ">" 6995 . 7097) (punctuation ">" 6995 . 7097) (punctuation ">" 6995 . 7097) (punctuation ">" 6995 . 7097) (symbol "Arg" 6995 . 7097) (punctuation "<" 6995 . 7097) (symbol "lambda_functor" 6995 . 7097) (punctuation "," 6995 . 7097) (symbol "type" 6995 . 7097) (punctuation ":" 6995 . 7097) (punctuation ":" 6995 . 7097) (punctuation ">" 6995 . 7097) (symbol "CONSTA" 6995 . 7097) (punctuation "<" 6995 . 7097) (symbol "CONST_CONVERSION" 6995 . 7097) (TYPENAME "typename" 6995 . 7097) (punctuation "<" 6995 . 7097) (symbol "tuple" 6995 . 7097) (punctuation "," 6995 . 7097) (symbol "ACTION" 6995 . 7097) (punctuation "<" 6995 . 7097) (symbol "lambda_functor_base" 6995 . 7097) (punctuation "<" 6995 . 7097) (symbol "lambda_functor" 6995 . 7097) (CONST "const" 6995 . 7097) (INLINE "inline" 6995 . 7097) (punctuation ">" 6995 . 7097) (symbol "Arg" 6995 . 7097) (CLASS "class" 6995 . 7097) (punctuation "," 6995 . 7097) (symbol "A" 6995 . 7097) (CLASS "class" 6995 . 7097) (punctuation "<" 6995 . 7097) (TEMPLATE "template" 6995 . 7097) (semantic-list #("{                      \\
  return                                                                     \\
    lambda_functor_base<                                                     \\
      ACTION,                                                                \\
      tuple<lambda_functor<Arg>, typename CONVERSION <CONSTB>::type>       \\
    >                                                                        \\
   (tuple<lambda_functor<Arg>, typename CONVERSION <CONSTB>::type>(a, b)); \\
}" 0 1 (macros (("CONVERSION" symbol "CONST_CONVERSION" 36 . 52) ("CONSTB" symbol "CONSTB" 28 . 34) ("CONSTA" symbol "CONSTA" 20 . 26) ("ACTION" symbol "ACTION" 12 . 18) ("OPER_NAME" symbol "OPER_NAME" 1 . 10)))) 6995 . 7097) (semantic-list #("(const lambda_functor<Arg>& a, CONSTB& b)" 0 1 (macros (("CONVERSION" symbol "CONST_CONVERSION" 36 . 52) ("CONSTB" symbol "CONSTB" 28 . 34) ("CONSTA" symbol "CONSTA" 20 . 26) ("ACTION" symbol "ACTION" 12 . 18) ("OPER_NAME" symbol "OPER_NAME" 1 . 10)))) 6995 . 7097) (symbol "OPER_NAME" 6995 . 7097) (punctuation ">" 6995 . 7097) (punctuation ">" 6995 . 7097) (punctuation ">" 6995 . 7097) (symbol "type" 6995 . 7097) (punctuation ":" 6995 . 7097) (punctuation ":" 6995 . 7097) (punctuation ">" 6995 . 7097) (symbol "CONSTB" 6995 . 7097) (punctuation "<" 6995 . 7097) (symbol "CONST_CONVERSION" 6995 . 7097) (TYPENAME "typename" 6995 . 7097) (punctuation "," 6995 . 7097) (punctuation ">" 6995 . 7097) (symbol "Arg" 6995 . 7097) (punctuation "<" 6995 . 7097) (symbol "lambda_functor" 6995 . 7097) (punctuation "<" 6995 . 7097) (symbol "tuple" 6995 . 7097) (punctuation "," 6995 . 7097) (symbol "ACTION" 6995 . 7097) (punctuation "<" 6995 . 7097) (symbol "lambda_functor_base" 6995 . 7097) (punctuation "<" 6995 . 7097) (symbol "lambda_functor" 6995 . 7097) (CONST "const" 6995 . 7097) (INLINE "inline" 6995 . 7097) (punctuation ">" 6995 . 7097) (symbol "B" 6995 . 7097) (CLASS "class" 6995 . 7097) (punctuation "," 6995 . 7097) (symbol "Arg" 6995 . 7097) (CLASS "class" 6995 . 7097) (punctuation "<" 6995 . 7097) (TEMPLATE "template" 6995 . 7097) (semantic-list #("{ \\
  return                                                                   \\
    lambda_functor_base<                                                   \\
      ACTION,                                                              \\
      tuple<lambda_functor<ArgA>, lambda_functor<ArgB> >                   \\
    >                                                                      \\
  (tuple<lambda_functor<ArgA>, lambda_functor<ArgB> >(a, b));              \\
}" 0 1 (macros (("CONVERSION" symbol "CONST_CONVERSION" 36 . 52) ("CONSTB" symbol "CONSTB" 28 . 34) ("CONSTA" symbol "CONSTA" 20 . 26) ("ACTION" symbol "ACTION" 12 . 18) ("OPER_NAME" symbol "OPER_NAME" 1 . 10)))) 6895 . 6994) (semantic-list #("(const lambda_functor<ArgA>& a, const lambda_functor<ArgB>& b)" 0 1 (macros (("CONVERSION" symbol "CONST_CONVERSION" 36 . 52) ("CONSTB" symbol "CONSTB" 28 . 34) ("CONSTA" symbol "CONSTA" 20 . 26) ("ACTION" symbol "ACTION" 12 . 18) ("OPER_NAME" symbol "OPER_NAME" 1 . 10)))) 6895 . 6994) (symbol "OPER_NAME" 6895 . 6994) (punctuation ">" 6895 . 6994) (punctuation ">" 6895 . 6994) (punctuation ">" 6895 . 6994) (punctuation ">" 6895 . 6994) (symbol "ArgB" 6895 . 6994) (punctuation "<" 6895 . 6994) (symbol "lambda_functor" 6895 . 6994) (punctuation "," 6895 . 6994) (punctuation ">" 6895 . 6994) (symbol "ArgA" 6895 . 6994) (punctuation "<" 6895 . 6994) (symbol "lambda_functor" 6895 . 6994) (punctuation "<" 6895 . 6994) (symbol "tuple" 6895 . 6994) (punctuation "," 6895 . 6994) (symbol "ACTION" 6895 . 6994) (punctuation "<" 6895 . 6994) (symbol "lambda_functor_base" 6895 . 6994) (punctuation "<" 6895 . 6994) (symbol "lambda_functor" 6895 . 6994) (CONST "const" 6895 . 6994) (INLINE "inline" 6895 . 6994) (punctuation ">" 6895 . 6994) (symbol "ArgB" 6895 . 6994) (CLASS "class" 6895 . 6994) (punctuation "," 6895 . 6994) (symbol "ArgA" 6895 . 6994) (CLASS "class" 6895 . 6994) (punctuation "<" 6895 . 6994) (TEMPLATE "template" 6895 . 6994) (semantic-list #("{                      \\
  return                                                                     \\
    lambda_functor_base<                                                     \\
      ACTION,                                                                \\
      tuple<typename CONVERSION <CONSTA>::type, lambda_functor<Arg> >      \\
    >                                                                        \\
  (tuple<typename CONVERSION <CONSTA>::type, lambda_functor<Arg> >(a, b)); \\
}" 0 1 (macros (("CONVERSION" symbol "CONST_CONVERSION" 36 . 52) ("CONSTB" symbol "CONSTB" 28 . 34) ("CONSTA" symbol "CONSTA" 20 . 26) ("ACTION" symbol "ACTION" 12 . 18) ("OPER_NAME" symbol "OPER_NAME" 1 . 10)))) 6895 . 6994) (semantic-list #("(CONSTA& a, const lambda_functor<Arg>& b)" 0 1 (macros (("CONVERSION" symbol "CONST_CONVERSION" 36 . 52) ("CONSTB" symbol "CONSTB" 28 . 34) ("CONSTA" symbol "CONSTA" 20 . 26) ("ACTION" symbol "ACTION" 12 . 18) ("OPER_NAME" symbol "OPER_NAME" 1 . 10)))) 6895 . 6994) (symbol "OPER_NAME" 6895 . 6994) (punctuation ">" 6895 . 6994) (punctuation ">" 6895 . 6994) (punctuation ">" 6895 . 6994) (punctuation ">" 6895 . 6994) (symbol "Arg" 6895 . 6994) (punctuation "<" 6895 . 6994) (symbol "lambda_functor" 6895 . 6994) (punctuation "," 6895 . 6994) (symbol "type" 6895 . 6994) (punctuation ":" 6895 . 6994) (punctuation ":" 6895 . 6994) (punctuation ">" 6895 . 6994) (symbol "CONSTA" 6895 . 6994) (punctuation "<" 6895 . 6994) (symbol "CONST_CONVERSION" 6895 . 6994) (TYPENAME "typename" 6895 . 6994) (punctuation "<" 6895 . 6994) (symbol "tuple" 6895 . 6994) (punctuation "," 6895 . 6994) (symbol "ACTION" 6895 . 6994) (punctuation "<" 6895 . 6994) (symbol "lambda_functor_base" 6895 . 6994) (punctuation "<" 6895 . 6994) (symbol "lambda_functor" 6895 . 6994) (CONST "const" 6895 . 6994) (INLINE "inline" 6895 . 6994) (punctuation ">" 6895 . 6994) (symbol "Arg" 6895 . 6994) (CLASS "class" 6895 . 6994) (punctuation "," 6895 . 6994) (symbol "A" 6895 . 6994) (CLASS "class" 6895 . 6994) (punctuation "<" 6895 . 6994) (TEMPLATE "template" 6895 . 6994) (semantic-list #("{                      \\
  return                                                                     \\
    lambda_functor_base<                                                     \\
      ACTION,                                                                \\
      tuple<lambda_functor<Arg>, typename CONVERSION <CONSTB>::type>       \\
    >                                                                        \\
   (tuple<lambda_functor<Arg>, typename CONVERSION <CONSTB>::type>(a, b)); \\
}" 0 1 (macros (("CONVERSION" symbol "CONST_CONVERSION" 36 . 52) ("CONSTB" symbol "CONSTB" 28 . 34) ("CONSTA" symbol "CONSTA" 20 . 26) ("ACTION" symbol "ACTION" 12 . 18) ("OPER_NAME" symbol "OPER_NAME" 1 . 10)))) 6895 . 6994) (semantic-list #("(const lambda_functor<Arg>& a, CONSTB& b)" 0 1 (macros (("CONVERSION" symbol "CONST_CONVERSION" 36 . 52) ("CONSTB" symbol "CONSTB" 28 . 34) ("CONSTA" symbol "CONSTA" 20 . 26) ("ACTION" symbol "ACTION" 12 . 18) ("OPER_NAME" symbol "OPER_NAME" 1 . 10)))) 6895 . 6994) (symbol "OPER_NAME" 6895 . 6994) (punctuation ">" 6895 . 6994) (punctuation ">" 6895 . 6994) (punctuation ">" 6895 . 6994) (symbol "type" 6895 . 6994) (punctuation ":" 6895 . 6994) (punctuation ":" 6895 . 6994) (punctuation ">" 6895 . 6994) (symbol "CONSTB" 6895 . 6994) (punctuation "<" 6895 . 6994) (symbol "CONST_CONVERSION" 6895 . 6994) (TYPENAME "typename" 6895 . 6994) (punctuation "," 6895 . 6994) (punctuation ">" 6895 . 6994) (symbol "Arg" 6895 . 6994) (punctuation "<" 6895 . 6994) (symbol "lambda_functor" 6895 . 6994) (punctuation "<" 6895 . 6994) (symbol "tuple" 6895 . 6994) (punctuation "," 6895 . 6994) (symbol "ACTION" 6895 . 6994) (punctuation "<" 6895 . 6994) (symbol "lambda_functor_base" 6895 . 6994) (punctuation "<" 6895 . 6994) (symbol "lambda_functor" 6895 . 6994) (CONST "const" 6895 . 6994) (INLINE "inline" 6895 . 6994) (punctuation ">" 6895 . 6994) (symbol "B" 6895 . 6994) (CLASS "class" 6895 . 6994) (punctuation "," 6895 . 6994) (symbol "Arg" 6895 . 6994) (CLASS "class" 6895 . 6994) (punctuation "<" 6895 . 6994) (TEMPLATE "template" 6895 . 6994) (semantic-list #("{ \\
  return                                                                   \\
    lambda_functor_base<                                                   \\
      ACTION,                                                              \\
      tuple<lambda_functor<ArgA>, lambda_functor<ArgB> >                   \\
    >                                                                      \\
  (tuple<lambda_functor<ArgA>, lambda_functor<ArgB> >(a, b));              \\
}" 0 1 (macros (("CONVERSION" symbol "CONST_CONVERSION" 36 . 52) ("CONSTB" symbol "CONSTB" 28 . 34) ("CONSTA" symbol "CONSTA" 20 . 26) ("ACTION" symbol "ACTION" 12 . 18) ("OPER_NAME" symbol "OPER_NAME" 1 . 10)))) 6786 . 6894) (semantic-list #("(const lambda_functor<ArgA>& a, const lambda_functor<ArgB>& b)" 0 1 (macros (("CONVERSION" symbol "CONST_CONVERSION" 36 . 52) ("CONSTB" symbol "CONSTB" 28 . 34) ("CONSTA" symbol "CONSTA" 20 . 26) ("ACTION" symbol "ACTION" 12 . 18) ("OPER_NAME" symbol "OPER_NAME" 1 . 10)))) 6786 . 6894) (symbol "OPER_NAME" 6786 . 6894) (punctuation ">" 6786 . 6894) (punctuation ">" 6786 . 6894) (punctuation ">" 6786 . 6894) (punctuation ">" 6786 . 6894) (symbol "ArgB" 6786 . 6894) (punctuation "<" 6786 . 6894) (symbol "lambda_functor" 6786 . 6894) (punctuation "," 6786 . 6894) (punctuation ">" 6786 . 6894) (symbol "ArgA" 6786 . 6894) (punctuation "<" 6786 . 6894) (symbol "lambda_functor" 6786 . 6894) (punctuation "<" 6786 . 6894) (symbol "tuple" 6786 . 6894) (punctuation "," 6786 . 6894) (symbol "ACTION" 6786 . 6894) (punctuation "<" 6786 . 6894) (symbol "lambda_functor_base" 6786 . 6894) (punctuation "<" 6786 . 6894) (symbol "lambda_functor" 6786 . 6894) (CONST "const" 6786 . 6894) (INLINE "inline" 6786 . 6894) (punctuation ">" 6786 . 6894) (symbol "ArgB" 6786 . 6894) (CLASS "class" 6786 . 6894) (punctuation "," 6786 . 6894) (symbol "ArgA" 6786 . 6894) (CLASS "class" 6786 . 6894) (punctuation "<" 6786 . 6894) (TEMPLATE "template" 6786 . 6894) (semantic-list #("{                      \\
  return                                                                     \\
    lambda_functor_base<                                                     \\
      ACTION,                                                                \\
      tuple<typename CONVERSION <CONSTA>::type, lambda_functor<Arg> >      \\
    >                                                                        \\
  (tuple<typename CONVERSION <CONSTA>::type, lambda_functor<Arg> >(a, b)); \\
}" 0 1 (macros (("CONVERSION" symbol "CONST_CONVERSION" 36 . 52) ("CONSTB" symbol "CONSTB" 28 . 34) ("CONSTA" symbol "CONSTA" 20 . 26) ("ACTION" symbol "ACTION" 12 . 18) ("OPER_NAME" symbol "OPER_NAME" 1 . 10)))) 6786 . 6894) (semantic-list #("(CONSTA& a, const lambda_functor<Arg>& b)" 0 1 (macros (("CONVERSION" symbol "CONST_CONVERSION" 36 . 52) ("CONSTB" symbol "CONSTB" 28 . 34) ("CONSTA" symbol "CONSTA" 20 . 26) ("ACTION" symbol "ACTION" 12 . 18) ("OPER_NAME" symbol "OPER_NAME" 1 . 10)))) 6786 . 6894) (symbol "OPER_NAME" 6786 . 6894) (punctuation ">" 6786 . 6894) (punctuation ">" 6786 . 6894) (punctuation ">" 6786 . 6894) (punctuation ">" 6786 . 6894) (symbol "Arg" 6786 . 6894) (punctuation "<" 6786 . 6894) (symbol "lambda_functor" 6786 . 6894) (punctuation "," 6786 . 6894) (symbol "type" 6786 . 6894) (punctuation ":" 6786 . 6894) (punctuation ":" 6786 . 6894) (punctuation ">" 6786 . 6894) (symbol "CONSTA" 6786 . 6894) (punctuation "<" 6786 . 6894) (symbol "CONST_CONVERSION" 6786 . 6894) (TYPENAME "typename" 6786 . 6894) (punctuation "<" 6786 . 6894) (symbol "tuple" 6786 . 6894) (punctuation "," 6786 . 6894) (symbol "ACTION" 6786 . 6894) (punctuation "<" 6786 . 6894) (symbol "lambda_functor_base" 6786 . 6894) (punctuation "<" 6786 . 6894) (symbol "lambda_functor" 6786 . 6894) (CONST "const" 6786 . 6894) (INLINE "inline" 6786 . 6894) (punctuation ">" 6786 . 6894) (symbol "Arg" 6786 . 6894) (CLASS "class" 6786 . 6894) (punctuation "," 6786 . 6894) (symbol "A" 6786 . 6894) (CLASS "class" 6786 . 6894) (punctuation "<" 6786 . 6894) (TEMPLATE "template" 6786 . 6894) (semantic-list #("{                      \\
  return                                                                     \\
    lambda_functor_base<                                                     \\
      ACTION,                                                                \\
      tuple<lambda_functor<Arg>, typename CONVERSION <CONSTB>::type>       \\
    >                                                                        \\
   (tuple<lambda_functor<Arg>, typename CONVERSION <CONSTB>::type>(a, b)); \\
}" 0 1 (macros (("CONVERSION" symbol "CONST_CONVERSION" 36 . 52) ("CONSTB" symbol "CONSTB" 28 . 34) ("CONSTA" symbol "CONSTA" 20 . 26) ("ACTION" symbol "ACTION" 12 . 18) ("OPER_NAME" symbol "OPER_NAME" 1 . 10)))) 6786 . 6894) (semantic-list #("(const lambda_functor<Arg>& a, CONSTB& b)" 0 1 (macros (("CONVERSION" symbol "CONST_CONVERSION" 36 . 52) ("CONSTB" symbol "CONSTB" 28 . 34) ("CONSTA" symbol "CONSTA" 20 . 26) ("ACTION" symbol "ACTION" 12 . 18) ("OPER_NAME" symbol "OPER_NAME" 1 . 10)))) 6786 . 6894) (symbol "OPER_NAME" 6786 . 6894) (punctuation ">" 6786 . 6894) (punctuation ">" 6786 . 6894) (punctuation ">" 6786 . 6894) (symbol "type" 6786 . 6894) (punctuation ":" 6786 . 6894) (punctuation ":" 6786 . 6894) (punctuation ">" 6786 . 6894) (symbol "CONSTB" 6786 . 6894) (punctuation "<" 6786 . 6894) (symbol "CONST_CONVERSION" 6786 . 6894) (TYPENAME "typename" 6786 . 6894) (punctuation "," 6786 . 6894) (punctuation ">" 6786 . 6894) (symbol "Arg" 6786 . 6894) (punctuation "<" 6786 . 6894) (symbol "lambda_functor" 6786 . 6894) (punctuation "<" 6786 . 6894) (symbol "tuple" 6786 . 6894) (punctuation "," 6786 . 6894) (symbol "ACTION" 6786 . 6894) (punctuation "<" 6786 . 6894) (symbol "lambda_functor_base" 6786 . 6894) (punctuation "<" 6786 . 6894) (symbol "lambda_functor" 6786 . 6894) (CONST "const" 6786 . 6894) (INLINE "inline" 6786 . 6894) (punctuation ">" 6786 . 6894) (symbol "B" 6786 . 6894) (CLASS "class" 6786 . 6894) (punctuation "," 6786 . 6894) (symbol "Arg" 6786 . 6894) (CLASS "class" 6786 . 6894) (punctuation "<" 6786 . 6894) (TEMPLATE "template" 6786 . 6894) (semantic-list #("{ \\
  return                                                                   \\
    lambda_functor_base<                                                   \\
      ACTION,                                                              \\
      tuple<lambda_functor<ArgA>, lambda_functor<ArgB> >                   \\
    >                                                                      \\
  (tuple<lambda_functor<ArgA>, lambda_functor<ArgB> >(a, b));              \\
}" 0 1 (macros (("CONVERSION" symbol "CONST_CONVERSION" 36 . 52) ("CONSTB" symbol "CONSTB" 28 . 34) ("CONSTA" symbol "CONSTA" 20 . 26) ("ACTION" symbol "ACTION" 12 . 18) ("OPER_NAME" symbol "OPER_NAME" 1 . 10)))) 6680 . 6785) (semantic-list #("(const lambda_functor<ArgA>& a, const lambda_functor<ArgB>& b)" 0 1 (macros (("CONVERSION" symbol "CONST_CONVERSION" 36 . 52) ("CONSTB" symbol "CONSTB" 28 . 34) ("CONSTA" symbol "CONSTA" 20 . 26) ("ACTION" symbol "ACTION" 12 . 18) ("OPER_NAME" symbol "OPER_NAME" 1 . 10)))) 6680 . 6785) (symbol "OPER_NAME" 6680 . 6785) (punctuation ">" 6680 . 6785) (punctuation ">" 6680 . 6785) (punctuation ">" 6680 . 6785) (punctuation ">" 6680 . 6785) (symbol "ArgB" 6680 . 6785) (punctuation "<" 6680 . 6785) (symbol "lambda_functor" 6680 . 6785) (punctuation "," 6680 . 6785) (punctuation ">" 6680 . 6785) (symbol "ArgA" 6680 . 6785) (punctuation "<" 6680 . 6785) (symbol "lambda_functor" 6680 . 6785) (punctuation "<" 6680 . 6785) (symbol "tuple" 6680 . 6785) (punctuation "," 6680 . 6785) (symbol "ACTION" 6680 . 6785) (punctuation "<" 6680 . 6785) (symbol "lambda_functor_base" 6680 . 6785) (punctuation "<" 6680 . 6785) (symbol "lambda_functor" 6680 . 6785) (CONST "const" 6680 . 6785) (INLINE "inline" 6680 . 6785) (punctuation ">" 6680 . 6785) (symbol "ArgB" 6680 . 6785) (CLASS "class" 6680 . 6785) (punctuation "," 6680 . 6785) (symbol "ArgA" 6680 . 6785) (CLASS "class" 6680 . 6785) (punctuation "<" 6680 . 6785) (TEMPLATE "template" 6680 . 6785) (semantic-list #("{                      \\
  return                                                                     \\
    lambda_functor_base<                                                     \\
      ACTION,                                                                \\
      tuple<typename CONVERSION <CONSTA>::type, lambda_functor<Arg> >      \\
    >                                                                        \\
  (tuple<typename CONVERSION <CONSTA>::type, lambda_functor<Arg> >(a, b)); \\
}" 0 1 (macros (("CONVERSION" symbol "CONST_CONVERSION" 36 . 52) ("CONSTB" symbol "CONSTB" 28 . 34) ("CONSTA" symbol "CONSTA" 20 . 26) ("ACTION" symbol "ACTION" 12 . 18) ("OPER_NAME" symbol "OPER_NAME" 1 . 10)))) 6680 . 6785) (semantic-list #("(CONSTA& a, const lambda_functor<Arg>& b)" 0 1 (macros (("CONVERSION" symbol "CONST_CONVERSION" 36 . 52) ("CONSTB" symbol "CONSTB" 28 . 34) ("CONSTA" symbol "CONSTA" 20 . 26) ("ACTION" symbol "ACTION" 12 . 18) ("OPER_NAME" symbol "OPER_NAME" 1 . 10)))) 6680 . 6785) (symbol "OPER_NAME" 6680 . 6785) (punctuation ">" 6680 . 6785) (punctuation ">" 6680 . 6785) (punctuation ">" 6680 . 6785) (punctuation ">" 6680 . 6785) (symbol "Arg" 6680 . 6785) (punctuation "<" 6680 . 6785) (symbol "lambda_functor" 6680 . 6785) (punctuation "," 6680 . 6785) (symbol "type" 6680 . 6785) (punctuation ":" 6680 . 6785) (punctuation ":" 6680 . 6785) (punctuation ">" 6680 . 6785) (symbol "CONSTA" 6680 . 6785) (punctuation "<" 6680 . 6785) (symbol "CONST_CONVERSION" 6680 . 6785) (TYPENAME "typename" 6680 . 6785) (punctuation "<" 6680 . 6785) (symbol "tuple" 6680 . 6785) (punctuation "," 6680 . 6785) (symbol "ACTION" 6680 . 6785) (punctuation "<" 6680 . 6785) (symbol "lambda_functor_base" 6680 . 6785) (punctuation "<" 6680 . 6785) (symbol "lambda_functor" 6680 . 6785) (CONST "const" 6680 . 6785) (INLINE "inline" 6680 . 6785) (punctuation ">" 6680 . 6785) (symbol "Arg" 6680 . 6785) (CLASS "class" 6680 . 6785) (punctuation "," 6680 . 6785) (symbol "A" 6680 . 6785) (CLASS "class" 6680 . 6785) (punctuation "<" 6680 . 6785) (TEMPLATE "template" 6680 . 6785) (semantic-list #("{                      \\
  return                                                                     \\
    lambda_functor_base<                                                     \\
      ACTION,                                                                \\
      tuple<lambda_functor<Arg>, typename CONVERSION <CONSTB>::type>       \\
    >                                                                        \\
   (tuple<lambda_functor<Arg>, typename CONVERSION <CONSTB>::type>(a, b)); \\
}" 0 1 (macros (("CONVERSION" symbol "CONST_CONVERSION" 36 . 52) ("CONSTB" symbol "CONSTB" 28 . 34) ("CONSTA" symbol "CONSTA" 20 . 26) ("ACTION" symbol "ACTION" 12 . 18) ("OPER_NAME" symbol "OPER_NAME" 1 . 10)))) 6680 . 6785) (semantic-list #("(const lambda_functor<Arg>& a, CONSTB& b)" 0 1 (macros (("CONVERSION" symbol "CONST_CONVERSION" 36 . 52) ("CONSTB" symbol "CONSTB" 28 . 34) ("CONSTA" symbol "CONSTA" 20 . 26) ("ACTION" symbol "ACTION" 12 . 18) ("OPER_NAME" symbol "OPER_NAME" 1 . 10)))) 6680 . 6785) (symbol "OPER_NAME" 6680 . 6785) (punctuation ">" 6680 . 6785) (punctuation ">" 6680 . 6785) (punctuation ">" 6680 . 6785) (symbol "type" 6680 . 6785) (punctuation ":" 6680 . 6785) (punctuation ":" 6680 . 6785) (punctuation ">" 6680 . 6785) (symbol "CONSTB" 6680 . 6785) (punctuation "<" 6680 . 6785) (symbol "CONST_CONVERSION" 6680 . 6785) (TYPENAME "typename" 6680 . 6785) (punctuation "," 6680 . 6785) (punctuation ">" 6680 . 6785) (symbol "Arg" 6680 . 6785) (punctuation "<" 6680 . 6785) (symbol "lambda_functor" 6680 . 6785) (punctuation "<" 6680 . 6785) (symbol "tuple" 6680 . 6785) (punctuation "," 6680 . 6785) (symbol "ACTION" 6680 . 6785) (punctuation "<" 6680 . 6785) (symbol "lambda_functor_base" 6680 . 6785) (punctuation "<" 6680 . 6785) (symbol "lambda_functor" 6680 . 6785) (CONST "const" 6680 . 6785) (INLINE "inline" 6680 . 6785) (punctuation ">" 6680 . 6785) (symbol "B" 6680 . 6785) (CLASS "class" 6680 . 6785) (punctuation "," 6680 . 6785) (symbol "Arg" 6680 . 6785) (CLASS "class" 6680 . 6785) (punctuation "<" 6680 . 6785) (TEMPLATE "template" 6680 . 6785) (semantic-list #("{ \\
  return                                                                   \\
    lambda_functor_base<                                                   \\
      ACTION,                                                              \\
      tuple<lambda_functor<ArgA>, lambda_functor<ArgB> >                   \\
    >                                                                      \\
  (tuple<lambda_functor<ArgA>, lambda_functor<ArgB> >(a, b));              \\
}" 0 1 (macros (("CONVERSION" symbol "CONST_CONVERSION" 36 . 52) ("CONSTB" symbol "CONSTB" 28 . 34) ("CONSTA" symbol "CONSTA" 20 . 26) ("ACTION" symbol "ACTION" 12 . 18) ("OPER_NAME" symbol "OPER_NAME" 1 . 10)))) 6579 . 6679) (semantic-list #("(const lambda_functor<ArgA>& a, const lambda_functor<ArgB>& b)" 0 1 (macros (("CONVERSION" symbol "CONST_CONVERSION" 36 . 52) ("CONSTB" symbol "CONSTB" 28 . 34) ("CONSTA" symbol "CONSTA" 20 . 26) ("ACTION" symbol "ACTION" 12 . 18) ("OPER_NAME" symbol "OPER_NAME" 1 . 10)))) 6579 . 6679) (symbol "OPER_NAME" 6579 . 6679) (punctuation ">" 6579 . 6679) (punctuation ">" 6579 . 6679) (punctuation ">" 6579 . 6679) (punctuation ">" 6579 . 6679) (symbol "ArgB" 6579 . 6679) (punctuation "<" 6579 . 6679) (symbol "lambda_functor" 6579 . 6679) (punctuation "," 6579 . 6679) (punctuation ">" 6579 . 6679) (symbol "ArgA" 6579 . 6679) (punctuation "<" 6579 . 6679) (symbol "lambda_functor" 6579 . 6679) (punctuation "<" 6579 . 6679) (symbol "tuple" 6579 . 6679) (punctuation "," 6579 . 6679) (symbol "ACTION" 6579 . 6679) (punctuation "<" 6579 . 6679) (symbol "lambda_functor_base" 6579 . 6679) (punctuation "<" 6579 . 6679) (symbol "lambda_functor" 6579 . 6679) (CONST "const" 6579 . 6679) (INLINE "inline" 6579 . 6679) (punctuation ">" 6579 . 6679) (symbol "ArgB" 6579 . 6679) (CLASS "class" 6579 . 6679) (punctuation "," 6579 . 6679) (symbol "ArgA" 6579 . 6679) (CLASS "class" 6579 . 6679) (punctuation "<" 6579 . 6679) (TEMPLATE "template" 6579 . 6679) (semantic-list #("{                      \\
  return                                                                     \\
    lambda_functor_base<                                                     \\
      ACTION,                                                                \\
      tuple<typename CONVERSION <CONSTA>::type, lambda_functor<Arg> >      \\
    >                                                                        \\
  (tuple<typename CONVERSION <CONSTA>::type, lambda_functor<Arg> >(a, b)); \\
}" 0 1 (macros (("CONVERSION" symbol "CONST_CONVERSION" 36 . 52) ("CONSTB" symbol "CONSTB" 28 . 34) ("CONSTA" symbol "CONSTA" 20 . 26) ("ACTION" symbol "ACTION" 12 . 18) ("OPER_NAME" symbol "OPER_NAME" 1 . 10)))) 6579 . 6679) (semantic-list #("(CONSTA& a, const lambda_functor<Arg>& b)" 0 1 (macros (("CONVERSION" symbol "CONST_CONVERSION" 36 . 52) ("CONSTB" symbol "CONSTB" 28 . 34) ("CONSTA" symbol "CONSTA" 20 . 26) ("ACTION" symbol "ACTION" 12 . 18) ("OPER_NAME" symbol "OPER_NAME" 1 . 10)))) 6579 . 6679) (symbol "OPER_NAME" 6579 . 6679) (punctuation ">" 6579 . 6679) (punctuation ">" 6579 . 6679) (punctuation ">" 6579 . 6679) (punctuation ">" 6579 . 6679) (symbol "Arg" 6579 . 6679) (punctuation "<" 6579 . 6679) (symbol "lambda_functor" 6579 . 6679) (punctuation "," 6579 . 6679) (symbol "type" 6579 . 6679) (punctuation ":" 6579 . 6679) (punctuation ":" 6579 . 6679) (punctuation ">" 6579 . 6679) (symbol "CONSTA" 6579 . 6679) (punctuation "<" 6579 . 6679) (symbol "CONST_CONVERSION" 6579 . 6679) (TYPENAME "typename" 6579 . 6679) (punctuation "<" 6579 . 6679) (symbol "tuple" 6579 . 6679) (punctuation "," 6579 . 6679) (symbol "ACTION" 6579 . 6679) (punctuation "<" 6579 . 6679) (symbol "lambda_functor_base" 6579 . 6679) (punctuation "<" 6579 . 6679) (symbol "lambda_functor" 6579 . 6679) (CONST "const" 6579 . 6679) (INLINE "inline" 6579 . 6679) (punctuation ">" 6579 . 6679) (symbol "Arg" 6579 . 6679) (CLASS "class" 6579 . 6679) (punctuation "," 6579 . 6679) (symbol "A" 6579 . 6679) (CLASS "class" 6579 . 6679) (punctuation "<" 6579 . 6679) (TEMPLATE "template" 6579 . 6679) (semantic-list #("{                      \\
  return                                                                     \\
    lambda_functor_base<                                                     \\
      ACTION,                                                                \\
      tuple<lambda_functor<Arg>, typename CONVERSION <CONSTB>::type>       \\
    >                                                                        \\
   (tuple<lambda_functor<Arg>, typename CONVERSION <CONSTB>::type>(a, b)); \\
}" 0 1 (macros (("CONVERSION" symbol "CONST_CONVERSION" 36 . 52) ("CONSTB" symbol "CONSTB" 28 . 34) ("CONSTA" symbol "CONSTA" 20 . 26) ("ACTION" symbol "ACTION" 12 . 18) ("OPER_NAME" symbol "OPER_NAME" 1 . 10)))) 6579 . 6679) (semantic-list #("(const lambda_functor<Arg>& a, CONSTB& b)" 0 1 (macros (("CONVERSION" symbol "CONST_CONVERSION" 36 . 52) ("CONSTB" symbol "CONSTB" 28 . 34) ("CONSTA" symbol "CONSTA" 20 . 26) ("ACTION" symbol "ACTION" 12 . 18) ("OPER_NAME" symbol "OPER_NAME" 1 . 10)))) 6579 . 6679) (symbol "OPER_NAME" 6579 . 6679) (punctuation ">" 6579 . 6679) (punctuation ">" 6579 . 6679) (punctuation ">" 6579 . 6679) (symbol "type" 6579 . 6679) (punctuation ":" 6579 . 6679) (punctuation ":" 6579 . 6679) (punctuation ">" 6579 . 6679) (symbol "CONSTB" 6579 . 6679) (punctuation "<" 6579 . 6679) (symbol "CONST_CONVERSION" 6579 . 6679) (TYPENAME "typename" 6579 . 6679) (punctuation "," 6579 . 6679) (punctuation ">" 6579 . 6679) (symbol "Arg" 6579 . 6679) (punctuation "<" 6579 . 6679) (symbol "lambda_functor" 6579 . 6679) (punctuation "<" 6579 . 6679) (symbol "tuple" 6579 . 6679) (punctuation "," 6579 . 6679) (symbol "ACTION" 6579 . 6679) (punctuation "<" 6579 . 6679) (symbol "lambda_functor_base" 6579 . 6679) (punctuation "<" 6579 . 6679) (symbol "lambda_functor" 6579 . 6679) (CONST "const" 6579 . 6679) (INLINE "inline" 6579 . 6679) (punctuation ">" 6579 . 6679) (symbol "B" 6579 . 6679) (CLASS "class" 6579 . 6679) (punctuation "," 6579 . 6679) (symbol "Arg" 6579 . 6679) (CLASS "class" 6579 . 6679) (punctuation "<" 6579 . 6679) (TEMPLATE "template" 6579 . 6679) (semantic-list #("{ \\
  return                                                                   \\
    lambda_functor_base<                                                   \\
      ACTION,                                                              \\
      tuple<lambda_functor<ArgA>, lambda_functor<ArgB> >                   \\
    >                                                                      \\
  (tuple<lambda_functor<ArgA>, lambda_functor<ArgB> >(a, b));              \\
}" 0 1 (macros (("CONVERSION" symbol "CONST_CONVERSION" 36 . 52) ("CONSTB" symbol "CONSTB" 28 . 34) ("CONSTA" symbol "CONSTA" 20 . 26) ("ACTION" symbol "ACTION" 12 . 18) ("OPER_NAME" symbol "OPER_NAME" 1 . 10)))) 6481 . 6578) (semantic-list #("(const lambda_functor<ArgA>& a, const lambda_functor<ArgB>& b)" 0 1 (macros (("CONVERSION" symbol "CONST_CONVERSION" 36 . 52) ("CONSTB" symbol "CONSTB" 28 . 34) ("CONSTA" symbol "CONSTA" 20 . 26) ("ACTION" symbol "ACTION" 12 . 18) ("OPER_NAME" symbol "OPER_NAME" 1 . 10)))) 6481 . 6578) (symbol "OPER_NAME" 6481 . 6578) (punctuation ">" 6481 . 6578) (punctuation ">" 6481 . 6578) (punctuation ">" 6481 . 6578) (punctuation ">" 6481 . 6578) (symbol "ArgB" 6481 . 6578) (punctuation "<" 6481 . 6578) (symbol "lambda_functor" 6481 . 6578) (punctuation "," 6481 . 6578) (punctuation ">" 6481 . 6578) (symbol "ArgA" 6481 . 6578) (punctuation "<" 6481 . 6578) (symbol "lambda_functor" 6481 . 6578) (punctuation "<" 6481 . 6578) (symbol "tuple" 6481 . 6578) (punctuation "," 6481 . 6578) (symbol "ACTION" 6481 . 6578) (punctuation "<" 6481 . 6578) (symbol "lambda_functor_base" 6481 . 6578) (punctuation "<" 6481 . 6578) (symbol "lambda_functor" 6481 . 6578) (CONST "const" 6481 . 6578) (INLINE "inline" 6481 . 6578) (punctuation ">" 6481 . 6578) (symbol "ArgB" 6481 . 6578) (CLASS "class" 6481 . 6578) (punctuation "," 6481 . 6578) (symbol "ArgA" 6481 . 6578) (CLASS "class" 6481 . 6578) (punctuation "<" 6481 . 6578) (TEMPLATE "template" 6481 . 6578) (semantic-list #("{                      \\
  return                                                                     \\
    lambda_functor_base<                                                     \\
      ACTION,                                                                \\
      tuple<typename CONVERSION <CONSTA>::type, lambda_functor<Arg> >      \\
    >                                                                        \\
  (tuple<typename CONVERSION <CONSTA>::type, lambda_functor<Arg> >(a, b)); \\
}" 0 1 (macros (("CONVERSION" symbol "CONST_CONVERSION" 36 . 52) ("CONSTB" symbol "CONSTB" 28 . 34) ("CONSTA" symbol "CONSTA" 20 . 26) ("ACTION" symbol "ACTION" 12 . 18) ("OPER_NAME" symbol "OPER_NAME" 1 . 10)))) 6481 . 6578) (semantic-list #("(CONSTA& a, const lambda_functor<Arg>& b)" 0 1 (macros (("CONVERSION" symbol "CONST_CONVERSION" 36 . 52) ("CONSTB" symbol "CONSTB" 28 . 34) ("CONSTA" symbol "CONSTA" 20 . 26) ("ACTION" symbol "ACTION" 12 . 18) ("OPER_NAME" symbol "OPER_NAME" 1 . 10)))) 6481 . 6578) (symbol "OPER_NAME" 6481 . 6578) (punctuation ">" 6481 . 6578) (punctuation ">" 6481 . 6578) (punctuation ">" 6481 . 6578) (punctuation ">" 6481 . 6578) (symbol "Arg" 6481 . 6578) (punctuation "<" 6481 . 6578) (symbol "lambda_functor" 6481 . 6578) (punctuation "," 6481 . 6578) (symbol "type" 6481 . 6578) (punctuation ":" 6481 . 6578) (punctuation ":" 6481 . 6578) (punctuation ">" 6481 . 6578) (symbol "CONSTA" 6481 . 6578) (punctuation "<" 6481 . 6578) (symbol "CONST_CONVERSION" 6481 . 6578) (TYPENAME "typename" 6481 . 6578) (punctuation "<" 6481 . 6578) (symbol "tuple" 6481 . 6578) (punctuation "," 6481 . 6578) (symbol "ACTION" 6481 . 6578) (punctuation "<" 6481 . 6578) (symbol "lambda_functor_base" 6481 . 6578) (punctuation "<" 6481 . 6578) (symbol "lambda_functor" 6481 . 6578) (CONST "const" 6481 . 6578) (INLINE "inline" 6481 . 6578) (punctuation ">" 6481 . 6578) (symbol "Arg" 6481 . 6578) (CLASS "class" 6481 . 6578) (punctuation "," 6481 . 6578) (symbol "A" 6481 . 6578) (CLASS "class" 6481 . 6578) (punctuation "<" 6481 . 6578) (TEMPLATE "template" 6481 . 6578) (semantic-list #("{                      \\
  return                                                                     \\
    lambda_functor_base<                                                     \\
      ACTION,                                                                \\
      tuple<lambda_functor<Arg>, typename CONVERSION <CONSTB>::type>       \\
    >                                                                        \\
   (tuple<lambda_functor<Arg>, typename CONVERSION <CONSTB>::type>(a, b)); \\
}" 0 1 (macros (("CONVERSION" symbol "CONST_CONVERSION" 36 . 52) ("CONSTB" symbol "CONSTB" 28 . 34) ("CONSTA" symbol "CONSTA" 20 . 26) ("ACTION" symbol "ACTION" 12 . 18) ("OPER_NAME" symbol "OPER_NAME" 1 . 10)))) 6481 . 6578) (semantic-list #("(const lambda_functor<Arg>& a, CONSTB& b)" 0 1 (macros (("CONVERSION" symbol "CONST_CONVERSION" 36 . 52) ("CONSTB" symbol "CONSTB" 28 . 34) ("CONSTA" symbol "CONSTA" 20 . 26) ("ACTION" symbol "ACTION" 12 . 18) ("OPER_NAME" symbol "OPER_NAME" 1 . 10)))) 6481 . 6578) (symbol "OPER_NAME" 6481 . 6578) (punctuation ">" 6481 . 6578) (punctuation ">" 6481 . 6578) (punctuation ">" 6481 . 6578) (symbol "type" 6481 . 6578) (punctuation ":" 6481 . 6578) (punctuation ":" 6481 . 6578) (punctuation ">" 6481 . 6578) (symbol "CONSTB" 6481 . 6578) (punctuation "<" 6481 . 6578) (symbol "CONST_CONVERSION" 6481 . 6578) (TYPENAME "typename" 6481 . 6578) (punctuation "," 6481 . 6578) (punctuation ">" 6481 . 6578) (symbol "Arg" 6481 . 6578) (punctuation "<" 6481 . 6578) (symbol "lambda_functor" 6481 . 6578) (punctuation "<" 6481 . 6578) (symbol "tuple" 6481 . 6578) (punctuation "," 6481 . 6578) (symbol "ACTION" 6481 . 6578) (punctuation "<" 6481 . 6578) (symbol "lambda_functor_base" 6481 . 6578) (punctuation "<" 6481 . 6578) (symbol "lambda_functor" 6481 . 6578) (CONST "const" 6481 . 6578) (INLINE "inline" 6481 . 6578) (punctuation ">" 6481 . 6578) (symbol "B" 6481 . 6578) (CLASS "class" 6481 . 6578) (punctuation "," 6481 . 6578) (symbol "Arg" 6481 . 6578) (CLASS "class" 6481 . 6578) (punctuation "<" 6481 . 6578) (TEMPLATE "template" 6481 . 6578) (semantic-list #("{ \\
  return                                                                   \\
    lambda_functor_base<                                                   \\
      ACTION,                                                              \\
      tuple<lambda_functor<ArgA>, lambda_functor<ArgB> >                   \\
    >                                                                      \\
  (tuple<lambda_functor<ArgA>, lambda_functor<ArgB> >(a, b));              \\
}" 0 1 (macros (("CONVERSION" symbol "CONST_CONVERSION" 36 . 52) ("CONSTB" symbol "CONSTB" 28 . 34) ("CONSTA" symbol "CONSTA" 20 . 26) ("ACTION" symbol "ACTION" 12 . 18) ("OPER_NAME" symbol "OPER_NAME" 1 . 10)))) 6387 . 6480) (semantic-list #("(const lambda_functor<ArgA>& a, const lambda_functor<ArgB>& b)" 0 1 (macros (("CONVERSION" symbol "CONST_CONVERSION" 36 . 52) ("CONSTB" symbol "CONSTB" 28 . 34) ("CONSTA" symbol "CONSTA" 20 . 26) ("ACTION" symbol "ACTION" 12 . 18) ("OPER_NAME" symbol "OPER_NAME" 1 . 10)))) 6387 . 6480) (symbol "OPER_NAME" 6387 . 6480) (punctuation ">" 6387 . 6480) (punctuation ">" 6387 . 6480) (punctuation ">" 6387 . 6480) (punctuation ">" 6387 . 6480) (symbol "ArgB" 6387 . 6480) (punctuation "<" 6387 . 6480) (symbol "lambda_functor" 6387 . 6480) (punctuation "," 6387 . 6480) (punctuation ">" 6387 . 6480) (symbol "ArgA" 6387 . 6480) (punctuation "<" 6387 . 6480) (symbol "lambda_functor" 6387 . 6480) (punctuation "<" 6387 . 6480) (symbol "tuple" 6387 . 6480) (punctuation "," 6387 . 6480) (symbol "ACTION" 6387 . 6480) (punctuation "<" 6387 . 6480) (symbol "lambda_functor_base" 6387 . 6480) (punctuation "<" 6387 . 6480) (symbol "lambda_functor" 6387 . 6480) (CONST "const" 6387 . 6480) (INLINE "inline" 6387 . 6480) (punctuation ">" 6387 . 6480) (symbol "ArgB" 6387 . 6480) (CLASS "class" 6387 . 6480) (punctuation "," 6387 . 6480) (symbol "ArgA" 6387 . 6480) (CLASS "class" 6387 . 6480) (punctuation "<" 6387 . 6480) (TEMPLATE "template" 6387 . 6480) (semantic-list #("{                      \\
  return                                                                     \\
    lambda_functor_base<                                                     \\
      ACTION,                                                                \\
      tuple<typename CONVERSION <CONSTA>::type, lambda_functor<Arg> >      \\
    >                                                                        \\
  (tuple<typename CONVERSION <CONSTA>::type, lambda_functor<Arg> >(a, b)); \\
}" 0 1 (macros (("CONVERSION" symbol "CONST_CONVERSION" 36 . 52) ("CONSTB" symbol "CONSTB" 28 . 34) ("CONSTA" symbol "CONSTA" 20 . 26) ("ACTION" symbol "ACTION" 12 . 18) ("OPER_NAME" symbol "OPER_NAME" 1 . 10)))) 6387 . 6480) (semantic-list #("(CONSTA& a, const lambda_functor<Arg>& b)" 0 1 (macros (("CONVERSION" symbol "CONST_CONVERSION" 36 . 52) ("CONSTB" symbol "CONSTB" 28 . 34) ("CONSTA" symbol "CONSTA" 20 . 26) ("ACTION" symbol "ACTION" 12 . 18) ("OPER_NAME" symbol "OPER_NAME" 1 . 10)))) 6387 . 6480) (symbol "OPER_NAME" 6387 . 6480) (punctuation ">" 6387 . 6480) (punctuation ">" 6387 . 6480) (punctuation ">" 6387 . 6480) (punctuation ">" 6387 . 6480) (symbol "Arg" 6387 . 6480) (punctuation "<" 6387 . 6480) (symbol "lambda_functor" 6387 . 6480) (punctuation "," 6387 . 6480) (symbol "type" 6387 . 6480) (punctuation ":" 6387 . 6480) (punctuation ":" 6387 . 6480) (punctuation ">" 6387 . 6480) (symbol "CONSTA" 6387 . 6480) (punctuation "<" 6387 . 6480) (symbol "CONST_CONVERSION" 6387 . 6480) (TYPENAME "typename" 6387 . 6480) (punctuation "<" 6387 . 6480) (symbol "tuple" 6387 . 6480) (punctuation "," 6387 . 6480) (symbol "ACTION" 6387 . 6480) (punctuation "<" 6387 . 6480) (symbol "lambda_functor_base" 6387 . 6480) (punctuation "<" 6387 . 6480) (symbol "lambda_functor" 6387 . 6480) (CONST "const" 6387 . 6480) (INLINE "inline" 6387 . 6480) (punctuation ">" 6387 . 6480) (symbol "Arg" 6387 . 6480) (CLASS "class" 6387 . 6480) (punctuation "," 6387 . 6480) (symbol "A" 6387 . 6480) (CLASS "class" 6387 . 6480) (punctuation "<" 6387 . 6480) (TEMPLATE "template" 6387 . 6480) (semantic-list #("{                      \\
  return                                                                     \\
    lambda_functor_base<                                                     \\
      ACTION,                                                                \\
      tuple<lambda_functor<Arg>, typename CONVERSION <CONSTB>::type>       \\
    >                                                                        \\
   (tuple<lambda_functor<Arg>, typename CONVERSION <CONSTB>::type>(a, b)); \\
}" 0 1 (macros (("CONVERSION" symbol "CONST_CONVERSION" 36 . 52) ("CONSTB" symbol "CONSTB" 28 . 34) ("CONSTA" symbol "CONSTA" 20 . 26) ("ACTION" symbol "ACTION" 12 . 18) ("OPER_NAME" symbol "OPER_NAME" 1 . 10)))) 6387 . 6480) (semantic-list #("(const lambda_functor<Arg>& a, CONSTB& b)" 0 1 (macros (("CONVERSION" symbol "CONST_CONVERSION" 36 . 52) ("CONSTB" symbol "CONSTB" 28 . 34) ("CONSTA" symbol "CONSTA" 20 . 26) ("ACTION" symbol "ACTION" 12 . 18) ("OPER_NAME" symbol "OPER_NAME" 1 . 10)))) 6387 . 6480) (symbol "OPER_NAME" 6387 . 6480) (punctuation ">" 6387 . 6480) (punctuation ">" 6387 . 6480) (punctuation ">" 6387 . 6480) (symbol "type" 6387 . 6480) (punctuation ":" 6387 . 6480) (punctuation ":" 6387 . 6480) (punctuation ">" 6387 . 6480) (symbol "CONSTB" 6387 . 6480) (punctuation "<" 6387 . 6480) (symbol "CONST_CONVERSION" 6387 . 6480) (TYPENAME "typename" 6387 . 6480) (punctuation "," 6387 . 6480) (punctuation ">" 6387 . 6480) (symbol "Arg" 6387 . 6480) (punctuation "<" 6387 . 6480) (symbol "lambda_functor" 6387 . 6480) (punctuation "<" 6387 . 6480) (symbol "tuple" 6387 . 6480) (punctuation "," 6387 . 6480) (symbol "ACTION" 6387 . 6480) (punctuation "<" 6387 . 6480) (symbol "lambda_functor_base" 6387 . 6480) (punctuation "<" 6387 . 6480) (symbol "lambda_functor" 6387 . 6480) (CONST "const" 6387 . 6480) (INLINE "inline" 6387 . 6480) (punctuation ">" 6387 . 6480) (symbol "B" 6387 . 6480) (CLASS "class" 6387 . 6480) (punctuation "," 6387 . 6480) (symbol "Arg" 6387 . 6480) (CLASS "class" 6387 . 6480) (punctuation "<" 6387 . 6480) (TEMPLATE "template" 6387 . 6480) (semantic-list #("{ \\
  return                                                                   \\
    lambda_functor_base<                                                   \\
      ACTION,                                                              \\
      tuple<lambda_functor<ArgA>, lambda_functor<ArgB> >                   \\
    >                                                                      \\
  (tuple<lambda_functor<ArgA>, lambda_functor<ArgB> >(a, b));              \\
}" 0 1 (macros (("CONVERSION" symbol "CONST_CONVERSION" 36 . 52) ("CONSTB" symbol "CONSTB" 28 . 34) ("CONSTA" symbol "CONSTA" 20 . 26) ("ACTION" symbol "ACTION" 12 . 18) ("OPER_NAME" symbol "OPER_NAME" 1 . 10)))) 6292 . 6386) (semantic-list #("(const lambda_functor<ArgA>& a, const lambda_functor<ArgB>& b)" 0 1 (macros (("CONVERSION" symbol "CONST_CONVERSION" 36 . 52) ("CONSTB" symbol "CONSTB" 28 . 34) ("CONSTA" symbol "CONSTA" 20 . 26) ("ACTION" symbol "ACTION" 12 . 18) ("OPER_NAME" symbol "OPER_NAME" 1 . 10)))) 6292 . 6386) (symbol "OPER_NAME" 6292 . 6386) (punctuation ">" 6292 . 6386) (punctuation ">" 6292 . 6386) (punctuation ">" 6292 . 6386) (punctuation ">" 6292 . 6386) (symbol "ArgB" 6292 . 6386) (punctuation "<" 6292 . 6386) (symbol "lambda_functor" 6292 . 6386) (punctuation "," 6292 . 6386) (punctuation ">" 6292 . 6386) (symbol "ArgA" 6292 . 6386) (punctuation "<" 6292 . 6386) (symbol "lambda_functor" 6292 . 6386) (punctuation "<" 6292 . 6386) (symbol "tuple" 6292 . 6386) (punctuation "," 6292 . 6386) (symbol "ACTION" 6292 . 6386) (punctuation "<" 6292 . 6386) (symbol "lambda_functor_base" 6292 . 6386) (punctuation "<" 6292 . 6386) (symbol "lambda_functor" 6292 . 6386) (CONST "const" 6292 . 6386) (INLINE "inline" 6292 . 6386) (punctuation ">" 6292 . 6386) (symbol "ArgB" 6292 . 6386) (CLASS "class" 6292 . 6386) (punctuation "," 6292 . 6386) (symbol "ArgA" 6292 . 6386) (CLASS "class" 6292 . 6386) (punctuation "<" 6292 . 6386) (TEMPLATE "template" 6292 . 6386) (semantic-list #("{                      \\
  return                                                                     \\
    lambda_functor_base<                                                     \\
      ACTION,                                                                \\
      tuple<typename CONVERSION <CONSTA>::type, lambda_functor<Arg> >      \\
    >                                                                        \\
  (tuple<typename CONVERSION <CONSTA>::type, lambda_functor<Arg> >(a, b)); \\
}" 0 1 (macros (("CONVERSION" symbol "CONST_CONVERSION" 36 . 52) ("CONSTB" symbol "CONSTB" 28 . 34) ("CONSTA" symbol "CONSTA" 20 . 26) ("ACTION" symbol "ACTION" 12 . 18) ("OPER_NAME" symbol "OPER_NAME" 1 . 10)))) 6292 . 6386) (semantic-list #("(CONSTA& a, const lambda_functor<Arg>& b)" 0 1 (macros (("CONVERSION" symbol "CONST_CONVERSION" 36 . 52) ("CONSTB" symbol "CONSTB" 28 . 34) ("CONSTA" symbol "CONSTA" 20 . 26) ("ACTION" symbol "ACTION" 12 . 18) ("OPER_NAME" symbol "OPER_NAME" 1 . 10)))) 6292 . 6386) (symbol "OPER_NAME" 6292 . 6386) (punctuation ">" 6292 . 6386) (punctuation ">" 6292 . 6386) (punctuation ">" 6292 . 6386) (punctuation ">" 6292 . 6386) (symbol "Arg" 6292 . 6386) (punctuation "<" 6292 . 6386) (symbol "lambda_functor" 6292 . 6386) (punctuation "," 6292 . 6386) (symbol "type" 6292 . 6386) (punctuation ":" 6292 . 6386) (punctuation ":" 6292 . 6386) (punctuation ">" 6292 . 6386) (symbol "CONSTA" 6292 . 6386) (punctuation "<" 6292 . 6386) (symbol "CONST_CONVERSION" 6292 . 6386) (TYPENAME "typename" 6292 . 6386) (punctuation "<" 6292 . 6386) (symbol "tuple" 6292 . 6386) (punctuation "," 6292 . 6386) (symbol "ACTION" 6292 . 6386) (punctuation "<" 6292 . 6386) (symbol "lambda_functor_base" 6292 . 6386) (punctuation "<" 6292 . 6386) (symbol "lambda_functor" 6292 . 6386) (CONST "const" 6292 . 6386) (INLINE "inline" 6292 . 6386) (punctuation ">" 6292 . 6386) (symbol "Arg" 6292 . 6386) (CLASS "class" 6292 . 6386) (punctuation "," 6292 . 6386) (symbol "A" 6292 . 6386) (CLASS "class" 6292 . 6386) (punctuation "<" 6292 . 6386) (TEMPLATE "template" 6292 . 6386) (semantic-list #("{                      \\
  return                                                                     \\
    lambda_functor_base<                                                     \\
      ACTION,                                                                \\
      tuple<lambda_functor<Arg>, typename CONVERSION <CONSTB>::type>       \\
    >                                                                        \\
   (tuple<lambda_functor<Arg>, typename CONVERSION <CONSTB>::type>(a, b)); \\
}" 0 1 (macros (("CONVERSION" symbol "CONST_CONVERSION" 36 . 52) ("CONSTB" symbol "CONSTB" 28 . 34) ("CONSTA" symbol "CONSTA" 20 . 26) ("ACTION" symbol "ACTION" 12 . 18) ("OPER_NAME" symbol "OPER_NAME" 1 . 10)))) 6292 . 6386) (semantic-list #("(const lambda_functor<Arg>& a, CONSTB& b)" 0 1 (macros (("CONVERSION" symbol "CONST_CONVERSION" 36 . 52) ("CONSTB" symbol "CONSTB" 28 . 34) ("CONSTA" symbol "CONSTA" 20 . 26) ("ACTION" symbol "ACTION" 12 . 18) ("OPER_NAME" symbol "OPER_NAME" 1 . 10)))) 6292 . 6386) (symbol "OPER_NAME" 6292 . 6386) (punctuation ">" 6292 . 6386) (punctuation ">" 6292 . 6386) (punctuation ">" 6292 . 6386) (symbol "type" 6292 . 6386) (punctuation ":" 6292 . 6386) (punctuation ":" 6292 . 6386) (punctuation ">" 6292 . 6386) (symbol "CONSTB" 6292 . 6386) (punctuation "<" 6292 . 6386) (symbol "CONST_CONVERSION" 6292 . 6386) (TYPENAME "typename" 6292 . 6386) (punctuation "," 6292 . 6386) (punctuation ">" 6292 . 6386) (symbol "Arg" 6292 . 6386) (punctuation "<" 6292 . 6386) (symbol "lambda_functor" 6292 . 6386) (punctuation "<" 6292 . 6386) (symbol "tuple" 6292 . 6386) (punctuation "," 6292 . 6386) (symbol "ACTION" 6292 . 6386) (punctuation "<" 6292 . 6386) (symbol "lambda_functor_base" 6292 . 6386) (punctuation "<" 6292 . 6386) (symbol "lambda_functor" 6292 . 6386) (CONST "const" 6292 . 6386) (INLINE "inline" 6292 . 6386) (punctuation ">" 6292 . 6386) (symbol "B" 6292 . 6386) (CLASS "class" 6292 . 6386) (punctuation "," 6292 . 6386) (symbol "Arg" 6292 . 6386) (CLASS "class" 6292 . 6386) (punctuation "<" 6292 . 6386) (TEMPLATE "template" 6292 . 6386) (semantic-list #("{ \\
  return                                                                   \\
    lambda_functor_base<                                                   \\
      ACTION,                                                              \\
      tuple<lambda_functor<ArgA>, lambda_functor<ArgB> >                   \\
    >                                                                      \\
  (tuple<lambda_functor<ArgA>, lambda_functor<ArgB> >(a, b));              \\
}" 0 1 (macros (("CONVERSION" symbol "CONST_CONVERSION" 36 . 52) ("CONSTB" symbol "CONSTB" 28 . 34) ("CONSTA" symbol "CONSTA" 20 . 26) ("ACTION" symbol "ACTION" 12 . 18) ("OPER_NAME" symbol "OPER_NAME" 1 . 10)))) 6198 . 6291) (semantic-list #("(const lambda_functor<ArgA>& a, const lambda_functor<ArgB>& b)" 0 1 (macros (("CONVERSION" symbol "CONST_CONVERSION" 36 . 52) ("CONSTB" symbol "CONSTB" 28 . 34) ("CONSTA" symbol "CONSTA" 20 . 26) ("ACTION" symbol "ACTION" 12 . 18) ("OPER_NAME" symbol "OPER_NAME" 1 . 10)))) 6198 . 6291) (symbol "OPER_NAME" 6198 . 6291) (punctuation ">" 6198 . 6291) (punctuation ">" 6198 . 6291) (punctuation ">" 6198 . 6291) (punctuation ">" 6198 . 6291) (symbol "ArgB" 6198 . 6291) (punctuation "<" 6198 . 6291) (symbol "lambda_functor" 6198 . 6291) (punctuation "," 6198 . 6291) (punctuation ">" 6198 . 6291) (symbol "ArgA" 6198 . 6291) (punctuation "<" 6198 . 6291) (symbol "lambda_functor" 6198 . 6291) (punctuation "<" 6198 . 6291) (symbol "tuple" 6198 . 6291) (punctuation "," 6198 . 6291) (symbol "ACTION" 6198 . 6291) (punctuation "<" 6198 . 6291) (symbol "lambda_functor_base" 6198 . 6291) (punctuation "<" 6198 . 6291) (symbol "lambda_functor" 6198 . 6291) (CONST "const" 6198 . 6291) (INLINE "inline" 6198 . 6291) (punctuation ">" 6198 . 6291) (symbol "ArgB" 6198 . 6291) (CLASS "class" 6198 . 6291) (punctuation "," 6198 . 6291) (symbol "ArgA" 6198 . 6291) (CLASS "class" 6198 . 6291) (punctuation "<" 6198 . 6291) (TEMPLATE "template" 6198 . 6291) (semantic-list #("{                      \\
  return                                                                     \\
    lambda_functor_base<                                                     \\
      ACTION,                                                                \\
      tuple<typename CONVERSION <CONSTA>::type, lambda_functor<Arg> >      \\
    >                                                                        \\
  (tuple<typename CONVERSION <CONSTA>::type, lambda_functor<Arg> >(a, b)); \\
}" 0 1 (macros (("CONVERSION" symbol "CONST_CONVERSION" 36 . 52) ("CONSTB" symbol "CONSTB" 28 . 34) ("CONSTA" symbol "CONSTA" 20 . 26) ("ACTION" symbol "ACTION" 12 . 18) ("OPER_NAME" symbol "OPER_NAME" 1 . 10)))) 6198 . 6291) (semantic-list #("(CONSTA& a, const lambda_functor<Arg>& b)" 0 1 (macros (("CONVERSION" symbol "CONST_CONVERSION" 36 . 52) ("CONSTB" symbol "CONSTB" 28 . 34) ("CONSTA" symbol "CONSTA" 20 . 26) ("ACTION" symbol "ACTION" 12 . 18) ("OPER_NAME" symbol "OPER_NAME" 1 . 10)))) 6198 . 6291) (symbol "OPER_NAME" 6198 . 6291) (punctuation ">" 6198 . 6291) (punctuation ">" 6198 . 6291) (punctuation ">" 6198 . 6291) (punctuation ">" 6198 . 6291) (symbol "Arg" 6198 . 6291) (punctuation "<" 6198 . 6291) (symbol "lambda_functor" 6198 . 6291) (punctuation "," 6198 . 6291) (symbol "type" 6198 . 6291) (punctuation ":" 6198 . 6291) (punctuation ":" 6198 . 6291) (punctuation ">" 6198 . 6291) (symbol "CONSTA" 6198 . 6291) (punctuation "<" 6198 . 6291) (symbol "CONST_CONVERSION" 6198 . 6291) (TYPENAME "typename" 6198 . 6291) (punctuation "<" 6198 . 6291) (symbol "tuple" 6198 . 6291) (punctuation "," 6198 . 6291) (symbol "ACTION" 6198 . 6291) (punctuation "<" 6198 . 6291) (symbol "lambda_functor_base" 6198 . 6291) (punctuation "<" 6198 . 6291) (symbol "lambda_functor" 6198 . 6291) (CONST "const" 6198 . 6291) (INLINE "inline" 6198 . 6291) (punctuation ">" 6198 . 6291) (symbol "Arg" 6198 . 6291) (CLASS "class" 6198 . 6291) (punctuation "," 6198 . 6291) (symbol "A" 6198 . 6291) (CLASS "class" 6198 . 6291) (punctuation "<" 6198 . 6291) (TEMPLATE "template" 6198 . 6291) (semantic-list #("{                      \\
  return                                                                     \\
    lambda_functor_base<                                                     \\
      ACTION,                                                                \\
      tuple<lambda_functor<Arg>, typename CONVERSION <CONSTB>::type>       \\
    >                                                                        \\
   (tuple<lambda_functor<Arg>, typename CONVERSION <CONSTB>::type>(a, b)); \\
}" 0 1 (macros (("CONVERSION" symbol "CONST_CONVERSION" 36 . 52) ("CONSTB" symbol "CONSTB" 28 . 34) ("CONSTA" symbol "CONSTA" 20 . 26) ("ACTION" symbol "ACTION" 12 . 18) ("OPER_NAME" symbol "OPER_NAME" 1 . 10)))) 6198 . 6291) (semantic-list #("(const lambda_functor<Arg>& a, CONSTB& b)" 0 1 (macros (("CONVERSION" symbol "CONST_CONVERSION" 36 . 52) ("CONSTB" symbol "CONSTB" 28 . 34) ("CONSTA" symbol "CONSTA" 20 . 26) ("ACTION" symbol "ACTION" 12 . 18) ("OPER_NAME" symbol "OPER_NAME" 1 . 10)))) 6198 . 6291) (symbol "OPER_NAME" 6198 . 6291) (punctuation ">" 6198 . 6291) (punctuation ">" 6198 . 6291) (punctuation ">" 6198 . 6291) (symbol "type" 6198 . 6291) (punctuation ":" 6198 . 6291) (punctuation ":" 6198 . 6291) (punctuation ">" 6198 . 6291) (symbol "CONSTB" 6198 . 6291) (punctuation "<" 6198 . 6291) (symbol "CONST_CONVERSION" 6198 . 6291) (TYPENAME "typename" 6198 . 6291) (punctuation "," 6198 . 6291) (punctuation ">" 6198 . 6291) (symbol "Arg" 6198 . 6291) (punctuation "<" 6198 . 6291) (symbol "lambda_functor" 6198 . 6291) (punctuation "<" 6198 . 6291) (symbol "tuple" 6198 . 6291) (punctuation "," 6198 . 6291) (symbol "ACTION" 6198 . 6291) (punctuation "<" 6198 . 6291) (symbol "lambda_functor_base" 6198 . 6291) (punctuation "<" 6198 . 6291) (symbol "lambda_functor" 6198 . 6291) (CONST "const" 6198 . 6291) (INLINE "inline" 6198 . 6291) (punctuation ">" 6198 . 6291) (symbol "B" 6198 . 6291) (CLASS "class" 6198 . 6291) (punctuation "," 6198 . 6291) (symbol "Arg" 6198 . 6291) (CLASS "class" 6198 . 6291) (punctuation "<" 6198 . 6291) (TEMPLATE "template" 6198 . 6291) (semantic-list #("{ \\
  return                                                                   \\
    lambda_functor_base<                                                   \\
      ACTION,                                                              \\
      tuple<lambda_functor<ArgA>, lambda_functor<ArgB> >                   \\
    >                                                                      \\
  (tuple<lambda_functor<ArgA>, lambda_functor<ArgB> >(a, b));              \\
}" 0 1 (macros (("CONVERSION" symbol "CONST_CONVERSION" 36 . 52) ("CONSTB" symbol "CONSTB" 28 . 34) ("CONSTA" symbol "CONSTA" 20 . 26) ("ACTION" symbol "ACTION" 12 . 18) ("OPER_NAME" symbol "OPER_NAME" 1 . 10)))) 6105 . 6197) (semantic-list #("(const lambda_functor<ArgA>& a, const lambda_functor<ArgB>& b)" 0 1 (macros (("CONVERSION" symbol "CONST_CONVERSION" 36 . 52) ("CONSTB" symbol "CONSTB" 28 . 34) ("CONSTA" symbol "CONSTA" 20 . 26) ("ACTION" symbol "ACTION" 12 . 18) ("OPER_NAME" symbol "OPER_NAME" 1 . 10)))) 6105 . 6197) (symbol "OPER_NAME" 6105 . 6197) (punctuation ">" 6105 . 6197) (punctuation ">" 6105 . 6197) (punctuation ">" 6105 . 6197) (punctuation ">" 6105 . 6197) (symbol "ArgB" 6105 . 6197) (punctuation "<" 6105 . 6197) (symbol "lambda_functor" 6105 . 6197) (punctuation "," 6105 . 6197) (punctuation ">" 6105 . 6197) (symbol "ArgA" 6105 . 6197) (punctuation "<" 6105 . 6197) (symbol "lambda_functor" 6105 . 6197) (punctuation "<" 6105 . 6197) (symbol "tuple" 6105 . 6197) (punctuation "," 6105 . 6197) (symbol "ACTION" 6105 . 6197) (punctuation "<" 6105 . 6197) (symbol "lambda_functor_base" 6105 . 6197) (punctuation "<" 6105 . 6197) (symbol "lambda_functor" 6105 . 6197) (CONST "const" 6105 . 6197) (INLINE "inline" 6105 . 6197) (punctuation ">" 6105 . 6197) (symbol "ArgB" 6105 . 6197) (CLASS "class" 6105 . 6197) (punctuation "," 6105 . 6197) (symbol "ArgA" 6105 . 6197) (CLASS "class" 6105 . 6197) (punctuation "<" 6105 . 6197) (TEMPLATE "template" 6105 . 6197) (semantic-list #("{                      \\
  return                                                                     \\
    lambda_functor_base<                                                     \\
      ACTION,                                                                \\
      tuple<typename CONVERSION <CONSTA>::type, lambda_functor<Arg> >      \\
    >                                                                        \\
  (tuple<typename CONVERSION <CONSTA>::type, lambda_functor<Arg> >(a, b)); \\
}" 0 1 (macros (("CONVERSION" symbol "CONST_CONVERSION" 36 . 52) ("CONSTB" symbol "CONSTB" 28 . 34) ("CONSTA" symbol "CONSTA" 20 . 26) ("ACTION" symbol "ACTION" 12 . 18) ("OPER_NAME" symbol "OPER_NAME" 1 . 10)))) 6105 . 6197) (semantic-list #("(CONSTA& a, const lambda_functor<Arg>& b)" 0 1 (macros (("CONVERSION" symbol "CONST_CONVERSION" 36 . 52) ("CONSTB" symbol "CONSTB" 28 . 34) ("CONSTA" symbol "CONSTA" 20 . 26) ("ACTION" symbol "ACTION" 12 . 18) ("OPER_NAME" symbol "OPER_NAME" 1 . 10)))) 6105 . 6197) (symbol "OPER_NAME" 6105 . 6197) (punctuation ">" 6105 . 6197) (punctuation ">" 6105 . 6197) (punctuation ">" 6105 . 6197) (punctuation ">" 6105 . 6197) (symbol "Arg" 6105 . 6197) (punctuation "<" 6105 . 6197) (symbol "lambda_functor" 6105 . 6197) (punctuation "," 6105 . 6197) (symbol "type" 6105 . 6197) (punctuation ":" 6105 . 6197) (punctuation ":" 6105 . 6197) (punctuation ">" 6105 . 6197) (symbol "CONSTA" 6105 . 6197) (punctuation "<" 6105 . 6197) (symbol "CONST_CONVERSION" 6105 . 6197) (TYPENAME "typename" 6105 . 6197) (punctuation "<" 6105 . 6197) (symbol "tuple" 6105 . 6197) (punctuation "," 6105 . 6197) (symbol "ACTION" 6105 . 6197) (punctuation "<" 6105 . 6197) (symbol "lambda_functor_base" 6105 . 6197) (punctuation "<" 6105 . 6197) (symbol "lambda_functor" 6105 . 6197) (CONST "const" 6105 . 6197) (INLINE "inline" 6105 . 6197) (punctuation ">" 6105 . 6197) (symbol "Arg" 6105 . 6197) (CLASS "class" 6105 . 6197) (punctuation "," 6105 . 6197) (symbol "A" 6105 . 6197) (CLASS "class" 6105 . 6197) (punctuation "<" 6105 . 6197) (TEMPLATE "template" 6105 . 6197) (semantic-list #("{                      \\
  return                                                                     \\
    lambda_functor_base<                                                     \\
      ACTION,                                                                \\
      tuple<lambda_functor<Arg>, typename CONVERSION <CONSTB>::type>       \\
    >                                                                        \\
   (tuple<lambda_functor<Arg>, typename CONVERSION <CONSTB>::type>(a, b)); \\
}" 0 1 (macros (("CONVERSION" symbol "CONST_CONVERSION" 36 . 52) ("CONSTB" symbol "CONSTB" 28 . 34) ("CONSTA" symbol "CONSTA" 20 . 26) ("ACTION" symbol "ACTION" 12 . 18) ("OPER_NAME" symbol "OPER_NAME" 1 . 10)))) 6105 . 6197) (semantic-list #("(const lambda_functor<Arg>& a, CONSTB& b)" 0 1 (macros (("CONVERSION" symbol "CONST_CONVERSION" 36 . 52) ("CONSTB" symbol "CONSTB" 28 . 34) ("CONSTA" symbol "CONSTA" 20 . 26) ("ACTION" symbol "ACTION" 12 . 18) ("OPER_NAME" symbol "OPER_NAME" 1 . 10)))) 6105 . 6197) (symbol "OPER_NAME" 6105 . 6197) (punctuation ">" 6105 . 6197) (punctuation ">" 6105 . 6197) (punctuation ">" 6105 . 6197) (symbol "type" 6105 . 6197) (punctuation ":" 6105 . 6197) (punctuation ":" 6105 . 6197) (punctuation ">" 6105 . 6197) (symbol "CONSTB" 6105 . 6197) (punctuation "<" 6105 . 6197) (symbol "CONST_CONVERSION" 6105 . 6197) (TYPENAME "typename" 6105 . 6197) (punctuation "," 6105 . 6197) (punctuation ">" 6105 . 6197) (symbol "Arg" 6105 . 6197) (punctuation "<" 6105 . 6197) (symbol "lambda_functor" 6105 . 6197) (punctuation "<" 6105 . 6197) (symbol "tuple" 6105 . 6197) (punctuation "," 6105 . 6197) (symbol "ACTION" 6105 . 6197) (punctuation "<" 6105 . 6197) (symbol "lambda_functor_base" 6105 . 6197) (punctuation "<" 6105 . 6197) (symbol "lambda_functor" 6105 . 6197) (CONST "const" 6105 . 6197) (INLINE "inline" 6105 . 6197) (punctuation ">" 6105 . 6197) (symbol "B" 6105 . 6197) (CLASS "class" 6105 . 6197) (punctuation "," 6105 . 6197) (symbol "Arg" 6105 . 6197) (CLASS "class" 6105 . 6197) (punctuation "<" 6105 . 6197) (TEMPLATE "template" 6105 . 6197) (semantic-list #("{ \\
  return                                                                   \\
    lambda_functor_base<                                                   \\
      ACTION,                                                              \\
      tuple<lambda_functor<ArgA>, lambda_functor<ArgB> >                   \\
    >                                                                      \\
  (tuple<lambda_functor<ArgA>, lambda_functor<ArgB> >(a, b));              \\
}" 0 1 (macros (("CONVERSION" symbol "CONST_CONVERSION" 36 . 52) ("CONSTB" symbol "CONSTB" 28 . 34) ("CONSTA" symbol "CONSTA" 20 . 26) ("ACTION" symbol "ACTION" 12 . 18) ("OPER_NAME" symbol "OPER_NAME" 1 . 10)))) 6011 . 6104) (semantic-list #("(const lambda_functor<ArgA>& a, const lambda_functor<ArgB>& b)" 0 1 (macros (("CONVERSION" symbol "CONST_CONVERSION" 36 . 52) ("CONSTB" symbol "CONSTB" 28 . 34) ("CONSTA" symbol "CONSTA" 20 . 26) ("ACTION" symbol "ACTION" 12 . 18) ("OPER_NAME" symbol "OPER_NAME" 1 . 10)))) 6011 . 6104) (symbol "OPER_NAME" 6011 . 6104) (punctuation ">" 6011 . 6104) (punctuation ">" 6011 . 6104) (punctuation ">" 6011 . 6104) (punctuation ">" 6011 . 6104) (symbol "ArgB" 6011 . 6104) (punctuation "<" 6011 . 6104) (symbol "lambda_functor" 6011 . 6104) (punctuation "," 6011 . 6104) (punctuation ">" 6011 . 6104) (symbol "ArgA" 6011 . 6104) (punctuation "<" 6011 . 6104) (symbol "lambda_functor" 6011 . 6104) (punctuation "<" 6011 . 6104) (symbol "tuple" 6011 . 6104) (punctuation "," 6011 . 6104) (symbol "ACTION" 6011 . 6104) (punctuation "<" 6011 . 6104) (symbol "lambda_functor_base" 6011 . 6104) (punctuation "<" 6011 . 6104) (symbol "lambda_functor" 6011 . 6104) (CONST "const" 6011 . 6104) (INLINE "inline" 6011 . 6104) (punctuation ">" 6011 . 6104) (symbol "ArgB" 6011 . 6104) (CLASS "class" 6011 . 6104) (punctuation "," 6011 . 6104) (symbol "ArgA" 6011 . 6104) (CLASS "class" 6011 . 6104) (punctuation "<" 6011 . 6104) (TEMPLATE "template" 6011 . 6104) (semantic-list #("{                      \\
  return                                                                     \\
    lambda_functor_base<                                                     \\
      ACTION,                                                                \\
      tuple<typename CONVERSION <CONSTA>::type, lambda_functor<Arg> >      \\
    >                                                                        \\
  (tuple<typename CONVERSION <CONSTA>::type, lambda_functor<Arg> >(a, b)); \\
}" 0 1 (macros (("CONVERSION" symbol "CONST_CONVERSION" 36 . 52) ("CONSTB" symbol "CONSTB" 28 . 34) ("CONSTA" symbol "CONSTA" 20 . 26) ("ACTION" symbol "ACTION" 12 . 18) ("OPER_NAME" symbol "OPER_NAME" 1 . 10)))) 6011 . 6104) (semantic-list #("(CONSTA& a, const lambda_functor<Arg>& b)" 0 1 (macros (("CONVERSION" symbol "CONST_CONVERSION" 36 . 52) ("CONSTB" symbol "CONSTB" 28 . 34) ("CONSTA" symbol "CONSTA" 20 . 26) ("ACTION" symbol "ACTION" 12 . 18) ("OPER_NAME" symbol "OPER_NAME" 1 . 10)))) 6011 . 6104) (symbol "OPER_NAME" 6011 . 6104) (punctuation ">" 6011 . 6104) (punctuation ">" 6011 . 6104) (punctuation ">" 6011 . 6104) (punctuation ">" 6011 . 6104) (symbol "Arg" 6011 . 6104) (punctuation "<" 6011 . 6104) (symbol "lambda_functor" 6011 . 6104) (punctuation "," 6011 . 6104) (symbol "type" 6011 . 6104) (punctuation ":" 6011 . 6104) (punctuation ":" 6011 . 6104) (punctuation ">" 6011 . 6104) (symbol "CONSTA" 6011 . 6104) (punctuation "<" 6011 . 6104) (symbol "CONST_CONVERSION" 6011 . 6104) (TYPENAME "typename" 6011 . 6104) (punctuation "<" 6011 . 6104) (symbol "tuple" 6011 . 6104) (punctuation "," 6011 . 6104) (symbol "ACTION" 6011 . 6104) (punctuation "<" 6011 . 6104) (symbol "lambda_functor_base" 6011 . 6104) (punctuation "<" 6011 . 6104) (symbol "lambda_functor" 6011 . 6104) (CONST "const" 6011 . 6104) (INLINE "inline" 6011 . 6104) (punctuation ">" 6011 . 6104) (symbol "Arg" 6011 . 6104) (CLASS "class" 6011 . 6104) (punctuation "," 6011 . 6104) (symbol "A" 6011 . 6104) (CLASS "class" 6011 . 6104) (punctuation "<" 6011 . 6104) (TEMPLATE "template" 6011 . 6104) (semantic-list #("{                      \\
  return                                                                     \\
    lambda_functor_base<                                                     \\
      ACTION,                                                                \\
      tuple<lambda_functor<Arg>, typename CONVERSION <CONSTB>::type>       \\
    >                                                                        \\
   (tuple<lambda_functor<Arg>, typename CONVERSION <CONSTB>::type>(a, b)); \\
}" 0 1 (macros (("CONVERSION" symbol "CONST_CONVERSION" 36 . 52) ("CONSTB" symbol "CONSTB" 28 . 34) ("CONSTA" symbol "CONSTA" 20 . 26) ("ACTION" symbol "ACTION" 12 . 18) ("OPER_NAME" symbol "OPER_NAME" 1 . 10)))) 6011 . 6104) (semantic-list #("(const lambda_functor<Arg>& a, CONSTB& b)" 0 1 (macros (("CONVERSION" symbol "CONST_CONVERSION" 36 . 52) ("CONSTB" symbol "CONSTB" 28 . 34) ("CONSTA" symbol "CONSTA" 20 . 26) ("ACTION" symbol "ACTION" 12 . 18) ("OPER_NAME" symbol "OPER_NAME" 1 . 10)))) 6011 . 6104) (symbol "OPER_NAME" 6011 . 6104) (punctuation ">" 6011 . 6104) (punctuation ">" 6011 . 6104) (punctuation ">" 6011 . 6104) (symbol "type" 6011 . 6104) (punctuation ":" 6011 . 6104) (punctuation ":" 6011 . 6104) (punctuation ">" 6011 . 6104) (symbol "CONSTB" 6011 . 6104) (punctuation "<" 6011 . 6104) (symbol "CONST_CONVERSION" 6011 . 6104) (TYPENAME "typename" 6011 . 6104) (punctuation "," 6011 . 6104) (punctuation ">" 6011 . 6104) (symbol "Arg" 6011 . 6104) (punctuation "<" 6011 . 6104) (symbol "lambda_functor" 6011 . 6104) (punctuation "<" 6011 . 6104) (symbol "tuple" 6011 . 6104) (punctuation "," 6011 . 6104) (symbol "ACTION" 6011 . 6104) (punctuation "<" 6011 . 6104) (symbol "lambda_functor_base" 6011 . 6104) (punctuation "<" 6011 . 6104) (symbol "lambda_functor" 6011 . 6104) (CONST "const" 6011 . 6104) (INLINE "inline" 6011 . 6104) (punctuation ">" 6011 . 6104) (symbol "B" 6011 . 6104) (CLASS "class" 6011 . 6104) (punctuation "," 6011 . 6104) (symbol "Arg" 6011 . 6104) (CLASS "class" 6011 . 6104) (punctuation "<" 6011 . 6104) (TEMPLATE "template" 6011 . 6104) (semantic-list #("{ \\
  return                                                                   \\
    lambda_functor_base<                                                   \\
      ACTION,                                                              \\
      tuple<lambda_functor<ArgA>, lambda_functor<ArgB> >                   \\
    >                                                                      \\
  (tuple<lambda_functor<ArgA>, lambda_functor<ArgB> >(a, b));              \\
}" 0 1 (macros (("CONVERSION" symbol "CONST_CONVERSION" 36 . 52) ("CONSTB" symbol "CONSTB" 28 . 34) ("CONSTA" symbol "CONSTA" 20 . 26) ("ACTION" symbol "ACTION" 12 . 18) ("OPER_NAME" symbol "OPER_NAME" 1 . 10)))) 5909 . 6010) (semantic-list #("(const lambda_functor<ArgA>& a, const lambda_functor<ArgB>& b)" 0 1 (macros (("CONVERSION" symbol "CONST_CONVERSION" 36 . 52) ("CONSTB" symbol "CONSTB" 28 . 34) ("CONSTA" symbol "CONSTA" 20 . 26) ("ACTION" symbol "ACTION" 12 . 18) ("OPER_NAME" symbol "OPER_NAME" 1 . 10)))) 5909 . 6010) (symbol "OPER_NAME" 5909 . 6010) (punctuation ">" 5909 . 6010) (punctuation ">" 5909 . 6010) (punctuation ">" 5909 . 6010) (punctuation ">" 5909 . 6010) (symbol "ArgB" 5909 . 6010) (punctuation "<" 5909 . 6010) (symbol "lambda_functor" 5909 . 6010) (punctuation "," 5909 . 6010) (punctuation ">" 5909 . 6010) (symbol "ArgA" 5909 . 6010) (punctuation "<" 5909 . 6010) (symbol "lambda_functor" 5909 . 6010) (punctuation "<" 5909 . 6010) (symbol "tuple" 5909 . 6010) (punctuation "," 5909 . 6010) (symbol "ACTION" 5909 . 6010) (punctuation "<" 5909 . 6010) (symbol "lambda_functor_base" 5909 . 6010) (punctuation "<" 5909 . 6010) (symbol "lambda_functor" 5909 . 6010) (CONST "const" 5909 . 6010) (INLINE "inline" 5909 . 6010) (punctuation ">" 5909 . 6010) (symbol "ArgB" 5909 . 6010) (CLASS "class" 5909 . 6010) (punctuation "," 5909 . 6010) (symbol "ArgA" 5909 . 6010) (CLASS "class" 5909 . 6010) (punctuation "<" 5909 . 6010) (TEMPLATE "template" 5909 . 6010) (semantic-list #("{                      \\
  return                                                                     \\
    lambda_functor_base<                                                     \\
      ACTION,                                                                \\
      tuple<typename CONVERSION <CONSTA>::type, lambda_functor<Arg> >      \\
    >                                                                        \\
  (tuple<typename CONVERSION <CONSTA>::type, lambda_functor<Arg> >(a, b)); \\
}" 0 1 (macros (("CONVERSION" symbol "CONST_CONVERSION" 36 . 52) ("CONSTB" symbol "CONSTB" 28 . 34) ("CONSTA" symbol "CONSTA" 20 . 26) ("ACTION" symbol "ACTION" 12 . 18) ("OPER_NAME" symbol "OPER_NAME" 1 . 10)))) 5909 . 6010) (semantic-list #("(CONSTA& a, const lambda_functor<Arg>& b)" 0 1 (macros (("CONVERSION" symbol "CONST_CONVERSION" 36 . 52) ("CONSTB" symbol "CONSTB" 28 . 34) ("CONSTA" symbol "CONSTA" 20 . 26) ("ACTION" symbol "ACTION" 12 . 18) ("OPER_NAME" symbol "OPER_NAME" 1 . 10)))) 5909 . 6010) (symbol "OPER_NAME" 5909 . 6010) (punctuation ">" 5909 . 6010) (punctuation ">" 5909 . 6010) (punctuation ">" 5909 . 6010) (punctuation ">" 5909 . 6010) (symbol "Arg" 5909 . 6010) (punctuation "<" 5909 . 6010) (symbol "lambda_functor" 5909 . 6010) (punctuation "," 5909 . 6010) (symbol "type" 5909 . 6010) (punctuation ":" 5909 . 6010) (punctuation ":" 5909 . 6010) (punctuation ">" 5909 . 6010) (symbol "CONSTA" 5909 . 6010) (punctuation "<" 5909 . 6010) (symbol "CONST_CONVERSION" 5909 . 6010) (TYPENAME "typename" 5909 . 6010) (punctuation "<" 5909 . 6010) (symbol "tuple" 5909 . 6010) (punctuation "," 5909 . 6010) (symbol "ACTION" 5909 . 6010) (punctuation "<" 5909 . 6010) (symbol "lambda_functor_base" 5909 . 6010) (punctuation "<" 5909 . 6010) (symbol "lambda_functor" 5909 . 6010) (CONST "const" 5909 . 6010) (INLINE "inline" 5909 . 6010) (punctuation ">" 5909 . 6010) (symbol "Arg" 5909 . 6010) (CLASS "class" 5909 . 6010) (punctuation "," 5909 . 6010) (symbol "A" 5909 . 6010) (CLASS "class" 5909 . 6010) (punctuation "<" 5909 . 6010) (TEMPLATE "template" 5909 . 6010) (semantic-list #("{                      \\
  return                                                                     \\
    lambda_functor_base<                                                     \\
      ACTION,                                                                \\
      tuple<lambda_functor<Arg>, typename CONVERSION <CONSTB>::type>       \\
    >                                                                        \\
   (tuple<lambda_functor<Arg>, typename CONVERSION <CONSTB>::type>(a, b)); \\
}" 0 1 (macros (("CONVERSION" symbol "CONST_CONVERSION" 36 . 52) ("CONSTB" symbol "CONSTB" 28 . 34) ("CONSTA" symbol "CONSTA" 20 . 26) ("ACTION" symbol "ACTION" 12 . 18) ("OPER_NAME" symbol "OPER_NAME" 1 . 10)))) 5909 . 6010) (semantic-list #("(const lambda_functor<Arg>& a, CONSTB& b)" 0 1 (macros (("CONVERSION" symbol "CONST_CONVERSION" 36 . 52) ("CONSTB" symbol "CONSTB" 28 . 34) ("CONSTA" symbol "CONSTA" 20 . 26) ("ACTION" symbol "ACTION" 12 . 18) ("OPER_NAME" symbol "OPER_NAME" 1 . 10)))) 5909 . 6010) (symbol "OPER_NAME" 5909 . 6010) (punctuation ">" 5909 . 6010) (punctuation ">" 5909 . 6010) (punctuation ">" 5909 . 6010) (symbol "type" 5909 . 6010) (punctuation ":" 5909 . 6010) (punctuation ":" 5909 . 6010) (punctuation ">" 5909 . 6010) (symbol "CONSTB" 5909 . 6010) (punctuation "<" 5909 . 6010) (symbol "CONST_CONVERSION" 5909 . 6010) (TYPENAME "typename" 5909 . 6010) (punctuation "," 5909 . 6010) (punctuation ">" 5909 . 6010) (symbol "Arg" 5909 . 6010) (punctuation "<" 5909 . 6010) (symbol "lambda_functor" 5909 . 6010) (punctuation "<" 5909 . 6010) (symbol "tuple" 5909 . 6010) (punctuation "," 5909 . 6010) (symbol "ACTION" 5909 . 6010) (punctuation "<" 5909 . 6010) (symbol "lambda_functor_base" 5909 . 6010) (punctuation "<" 5909 . 6010) (symbol "lambda_functor" 5909 . 6010) (CONST "const" 5909 . 6010) (INLINE "inline" 5909 . 6010) (punctuation ">" 5909 . 6010) (symbol "B" 5909 . 6010) (CLASS "class" 5909 . 6010) (punctuation "," 5909 . 6010) (symbol "Arg" 5909 . 6010) (CLASS "class" 5909 . 6010) (punctuation "<" 5909 . 6010) (TEMPLATE "template" 5909 . 6010) (semantic-list #("{ \\
  return                                                                   \\
    lambda_functor_base<                                                   \\
      ACTION,                                                              \\
      tuple<lambda_functor<ArgA>, lambda_functor<ArgB> >                   \\
    >                                                                      \\
  (tuple<lambda_functor<ArgA>, lambda_functor<ArgB> >(a, b));              \\
}" 0 1 (macros (("CONVERSION" symbol "CONST_CONVERSION" 36 . 52) ("CONSTB" symbol "CONSTB" 28 . 34) ("CONSTA" symbol "CONSTA" 20 . 26) ("ACTION" symbol "ACTION" 12 . 18) ("OPER_NAME" symbol "OPER_NAME" 1 . 10)))) 5808 . 5908) (semantic-list #("(const lambda_functor<ArgA>& a, const lambda_functor<ArgB>& b)" 0 1 (macros (("CONVERSION" symbol "CONST_CONVERSION" 36 . 52) ("CONSTB" symbol "CONSTB" 28 . 34) ("CONSTA" symbol "CONSTA" 20 . 26) ("ACTION" symbol "ACTION" 12 . 18) ("OPER_NAME" symbol "OPER_NAME" 1 . 10)))) 5808 . 5908) (symbol "OPER_NAME" 5808 . 5908) (punctuation ">" 5808 . 5908) (punctuation ">" 5808 . 5908) (punctuation ">" 5808 . 5908) (punctuation ">" 5808 . 5908) (symbol "ArgB" 5808 . 5908) (punctuation "<" 5808 . 5908) (symbol "lambda_functor" 5808 . 5908) (punctuation "," 5808 . 5908) (punctuation ">" 5808 . 5908) (symbol "ArgA" 5808 . 5908) (punctuation "<" 5808 . 5908) (symbol "lambda_functor" 5808 . 5908) (punctuation "<" 5808 . 5908) (symbol "tuple" 5808 . 5908) (punctuation "," 5808 . 5908) (symbol "ACTION" 5808 . 5908) (punctuation "<" 5808 . 5908) (symbol "lambda_functor_base" 5808 . 5908) (punctuation "<" 5808 . 5908) (symbol "lambda_functor" 5808 . 5908) (CONST "const" 5808 . 5908) (INLINE "inline" 5808 . 5908) (punctuation ">" 5808 . 5908) (symbol "ArgB" 5808 . 5908) (CLASS "class" 5808 . 5908) (punctuation "," 5808 . 5908) (symbol "ArgA" 5808 . 5908) (CLASS "class" 5808 . 5908) (punctuation "<" 5808 . 5908) (TEMPLATE "template" 5808 . 5908) (semantic-list #("{                      \\
  return                                                                     \\
    lambda_functor_base<                                                     \\
      ACTION,                                                                \\
      tuple<typename CONVERSION <CONSTA>::type, lambda_functor<Arg> >      \\
    >                                                                        \\
  (tuple<typename CONVERSION <CONSTA>::type, lambda_functor<Arg> >(a, b)); \\
}" 0 1 (macros (("CONVERSION" symbol "CONST_CONVERSION" 36 . 52) ("CONSTB" symbol "CONSTB" 28 . 34) ("CONSTA" symbol "CONSTA" 20 . 26) ("ACTION" symbol "ACTION" 12 . 18) ("OPER_NAME" symbol "OPER_NAME" 1 . 10)))) 5808 . 5908) (semantic-list #("(CONSTA& a, const lambda_functor<Arg>& b)" 0 1 (macros (("CONVERSION" symbol "CONST_CONVERSION" 36 . 52) ("CONSTB" symbol "CONSTB" 28 . 34) ("CONSTA" symbol "CONSTA" 20 . 26) ("ACTION" symbol "ACTION" 12 . 18) ("OPER_NAME" symbol "OPER_NAME" 1 . 10)))) 5808 . 5908) (symbol "OPER_NAME" 5808 . 5908) (punctuation ">" 5808 . 5908) (punctuation ">" 5808 . 5908) (punctuation ">" 5808 . 5908) (punctuation ">" 5808 . 5908) (symbol "Arg" 5808 . 5908) (punctuation "<" 5808 . 5908) (symbol "lambda_functor" 5808 . 5908) (punctuation "," 5808 . 5908) (symbol "type" 5808 . 5908) (punctuation ":" 5808 . 5908) (punctuation ":" 5808 . 5908) (punctuation ">" 5808 . 5908) (symbol "CONSTA" 5808 . 5908) (punctuation "<" 5808 . 5908) (symbol "CONST_CONVERSION" 5808 . 5908) (TYPENAME "typename" 5808 . 5908) (punctuation "<" 5808 . 5908) (symbol "tuple" 5808 . 5908) (punctuation "," 5808 . 5908) (symbol "ACTION" 5808 . 5908) (punctuation "<" 5808 . 5908) (symbol "lambda_functor_base" 5808 . 5908) (punctuation "<" 5808 . 5908) (symbol "lambda_functor" 5808 . 5908) (CONST "const" 5808 . 5908) (INLINE "inline" 5808 . 5908) (punctuation ">" 5808 . 5908) (symbol "Arg" 5808 . 5908) (CLASS "class" 5808 . 5908) (punctuation "," 5808 . 5908) (symbol "A" 5808 . 5908) (CLASS "class" 5808 . 5908) (punctuation "<" 5808 . 5908) (TEMPLATE "template" 5808 . 5908) (semantic-list #("{                      \\
  return                                                                     \\
    lambda_functor_base<                                                     \\
      ACTION,                                                                \\
      tuple<lambda_functor<Arg>, typename CONVERSION <CONSTB>::type>       \\
    >                                                                        \\
   (tuple<lambda_functor<Arg>, typename CONVERSION <CONSTB>::type>(a, b)); \\
}" 0 1 (macros (("CONVERSION" symbol "CONST_CONVERSION" 36 . 52) ("CONSTB" symbol "CONSTB" 28 . 34) ("CONSTA" symbol "CONSTA" 20 . 26) ("ACTION" symbol "ACTION" 12 . 18) ("OPER_NAME" symbol "OPER_NAME" 1 . 10)))) 5808 . 5908) (semantic-list #("(const lambda_functor<Arg>& a, CONSTB& b)" 0 1 (macros (("CONVERSION" symbol "CONST_CONVERSION" 36 . 52) ("CONSTB" symbol "CONSTB" 28 . 34) ("CONSTA" symbol "CONSTA" 20 . 26) ("ACTION" symbol "ACTION" 12 . 18) ("OPER_NAME" symbol "OPER_NAME" 1 . 10)))) 5808 . 5908) (symbol "OPER_NAME" 5808 . 5908) (punctuation ">" 5808 . 5908) (punctuation ">" 5808 . 5908) (punctuation ">" 5808 . 5908) (symbol "type" 5808 . 5908) (punctuation ":" 5808 . 5908) (punctuation ":" 5808 . 5908) (punctuation ">" 5808 . 5908) (symbol "CONSTB" 5808 . 5908) (punctuation "<" 5808 . 5908) (symbol "CONST_CONVERSION" 5808 . 5908) (TYPENAME "typename" 5808 . 5908) (punctuation "," 5808 . 5908) (punctuation ">" 5808 . 5908) (symbol "Arg" 5808 . 5908) (punctuation "<" 5808 . 5908) (symbol "lambda_functor" 5808 . 5908) (punctuation "<" 5808 . 5908) (symbol "tuple" 5808 . 5908) (punctuation "," 5808 . 5908) (symbol "ACTION" 5808 . 5908) (punctuation "<" 5808 . 5908) (symbol "lambda_functor_base" 5808 . 5908) (punctuation "<" 5808 . 5908) (symbol "lambda_functor" 5808 . 5908) (CONST "const" 5808 . 5908) (INLINE "inline" 5808 . 5908) (punctuation ">" 5808 . 5908) (symbol "B" 5808 . 5908) (CLASS "class" 5808 . 5908) (punctuation "," 5808 . 5908) (symbol "Arg" 5808 . 5908) (CLASS "class" 5808 . 5908) (punctuation "<" 5808 . 5908) (TEMPLATE "template" 5808 . 5908) (semantic-list #("{ \\
  return                                                                   \\
    lambda_functor_base<                                                   \\
      ACTION,                                                              \\
      tuple<lambda_functor<ArgA>, lambda_functor<ArgB> >                   \\
    >                                                                      \\
  (tuple<lambda_functor<ArgA>, lambda_functor<ArgB> >(a, b));              \\
}" 0 1 (macros (("CONVERSION" symbol "CONST_CONVERSION" 36 . 52) ("CONSTB" symbol "CONSTB" 28 . 34) ("CONSTA" symbol "CONSTA" 20 . 26) ("ACTION" symbol "ACTION" 12 . 18) ("OPER_NAME" symbol "OPER_NAME" 1 . 10)))) 5705 . 5807) (semantic-list #("(const lambda_functor<ArgA>& a, const lambda_functor<ArgB>& b)" 0 1 (macros (("CONVERSION" symbol "CONST_CONVERSION" 36 . 52) ("CONSTB" symbol "CONSTB" 28 . 34) ("CONSTA" symbol "CONSTA" 20 . 26) ("ACTION" symbol "ACTION" 12 . 18) ("OPER_NAME" symbol "OPER_NAME" 1 . 10)))) 5705 . 5807) (symbol "OPER_NAME" 5705 . 5807) (punctuation ">" 5705 . 5807) (punctuation ">" 5705 . 5807) (punctuation ">" 5705 . 5807) (punctuation ">" 5705 . 5807) (symbol "ArgB" 5705 . 5807) (punctuation "<" 5705 . 5807) (symbol "lambda_functor" 5705 . 5807) (punctuation "," 5705 . 5807) (punctuation ">" 5705 . 5807) (symbol "ArgA" 5705 . 5807) (punctuation "<" 5705 . 5807) (symbol "lambda_functor" 5705 . 5807) (punctuation "<" 5705 . 5807) (symbol "tuple" 5705 . 5807) (punctuation "," 5705 . 5807) (symbol "ACTION" 5705 . 5807) (punctuation "<" 5705 . 5807) (symbol "lambda_functor_base" 5705 . 5807) (punctuation "<" 5705 . 5807) (symbol "lambda_functor" 5705 . 5807) (CONST "const" 5705 . 5807) (INLINE "inline" 5705 . 5807) (punctuation ">" 5705 . 5807) (symbol "ArgB" 5705 . 5807) (CLASS "class" 5705 . 5807) (punctuation "," 5705 . 5807) (symbol "ArgA" 5705 . 5807) (CLASS "class" 5705 . 5807) (punctuation "<" 5705 . 5807) (TEMPLATE "template" 5705 . 5807) (semantic-list #("{                      \\
  return                                                                     \\
    lambda_functor_base<                                                     \\
      ACTION,                                                                \\
      tuple<typename CONVERSION <CONSTA>::type, lambda_functor<Arg> >      \\
    >                                                                        \\
  (tuple<typename CONVERSION <CONSTA>::type, lambda_functor<Arg> >(a, b)); \\
}" 0 1 (macros (("CONVERSION" symbol "CONST_CONVERSION" 36 . 52) ("CONSTB" symbol "CONSTB" 28 . 34) ("CONSTA" symbol "CONSTA" 20 . 26) ("ACTION" symbol "ACTION" 12 . 18) ("OPER_NAME" symbol "OPER_NAME" 1 . 10)))) 5705 . 5807) (semantic-list #("(CONSTA& a, const lambda_functor<Arg>& b)" 0 1 (macros (("CONVERSION" symbol "CONST_CONVERSION" 36 . 52) ("CONSTB" symbol "CONSTB" 28 . 34) ("CONSTA" symbol "CONSTA" 20 . 26) ("ACTION" symbol "ACTION" 12 . 18) ("OPER_NAME" symbol "OPER_NAME" 1 . 10)))) 5705 . 5807) (symbol "OPER_NAME" 5705 . 5807) (punctuation ">" 5705 . 5807) (punctuation ">" 5705 . 5807) (punctuation ">" 5705 . 5807) (punctuation ">" 5705 . 5807) (symbol "Arg" 5705 . 5807) (punctuation "<" 5705 . 5807) (symbol "lambda_functor" 5705 . 5807) (punctuation "," 5705 . 5807) (symbol "type" 5705 . 5807) (punctuation ":" 5705 . 5807) (punctuation ":" 5705 . 5807) (punctuation ">" 5705 . 5807) (symbol "CONSTA" 5705 . 5807) (punctuation "<" 5705 . 5807) (symbol "CONST_CONVERSION" 5705 . 5807) (TYPENAME "typename" 5705 . 5807) (punctuation "<" 5705 . 5807) (symbol "tuple" 5705 . 5807) (punctuation "," 5705 . 5807) (symbol "ACTION" 5705 . 5807) (punctuation "<" 5705 . 5807) (symbol "lambda_functor_base" 5705 . 5807) (punctuation "<" 5705 . 5807) (symbol "lambda_functor" 5705 . 5807) (CONST "const" 5705 . 5807) (INLINE "inline" 5705 . 5807) (punctuation ">" 5705 . 5807) (symbol "Arg" 5705 . 5807) (CLASS "class" 5705 . 5807) (punctuation "," 5705 . 5807) (symbol "A" 5705 . 5807) (CLASS "class" 5705 . 5807) (punctuation "<" 5705 . 5807) (TEMPLATE "template" 5705 . 5807) (semantic-list #("{                      \\
  return                                                                     \\
    lambda_functor_base<                                                     \\
      ACTION,                                                                \\
      tuple<lambda_functor<Arg>, typename CONVERSION <CONSTB>::type>       \\
    >                                                                        \\
   (tuple<lambda_functor<Arg>, typename CONVERSION <CONSTB>::type>(a, b)); \\
}" 0 1 (macros (("CONVERSION" symbol "CONST_CONVERSION" 36 . 52) ("CONSTB" symbol "CONSTB" 28 . 34) ("CONSTA" symbol "CONSTA" 20 . 26) ("ACTION" symbol "ACTION" 12 . 18) ("OPER_NAME" symbol "OPER_NAME" 1 . 10)))) 5705 . 5807) (semantic-list #("(const lambda_functor<Arg>& a, CONSTB& b)" 0 1 (macros (("CONVERSION" symbol "CONST_CONVERSION" 36 . 52) ("CONSTB" symbol "CONSTB" 28 . 34) ("CONSTA" symbol "CONSTA" 20 . 26) ("ACTION" symbol "ACTION" 12 . 18) ("OPER_NAME" symbol "OPER_NAME" 1 . 10)))) 5705 . 5807) (symbol "OPER_NAME" 5705 . 5807) (punctuation ">" 5705 . 5807) (punctuation ">" 5705 . 5807) (punctuation ">" 5705 . 5807) (symbol "type" 5705 . 5807) (punctuation ":" 5705 . 5807) (punctuation ":" 5705 . 5807) (punctuation ">" 5705 . 5807) (symbol "CONSTB" 5705 . 5807) (punctuation "<" 5705 . 5807) (symbol "CONST_CONVERSION" 5705 . 5807) (TYPENAME "typename" 5705 . 5807) (punctuation "," 5705 . 5807) (punctuation ">" 5705 . 5807) (symbol "Arg" 5705 . 5807) (punctuation "<" 5705 . 5807) (symbol "lambda_functor" 5705 . 5807) (punctuation "<" 5705 . 5807) (symbol "tuple" 5705 . 5807) (punctuation "," 5705 . 5807) (symbol "ACTION" 5705 . 5807) (punctuation "<" 5705 . 5807) (symbol "lambda_functor_base" 5705 . 5807) (punctuation "<" 5705 . 5807) (symbol "lambda_functor" 5705 . 5807) (CONST "const" 5705 . 5807) (INLINE "inline" 5705 . 5807) (punctuation ">" 5705 . 5807) (symbol "B" 5705 . 5807) (CLASS "class" 5705 . 5807) (punctuation "," 5705 . 5807) (symbol "Arg" 5705 . 5807) (CLASS "class" 5705 . 5807) (punctuation "<" 5705 . 5807) (TEMPLATE "template" 5705 . 5807) (semantic-list #("{ \\
  return                                                                   \\
    lambda_functor_base<                                                   \\
      ACTION,                                                              \\
      tuple<lambda_functor<ArgA>, lambda_functor<ArgB> >                   \\
    >                                                                      \\
  (tuple<lambda_functor<ArgA>, lambda_functor<ArgB> >(a, b));              \\
}" 0 1 (macros (("CONVERSION" symbol "CONST_CONVERSION" 36 . 52) ("CONSTB" symbol "CONSTB" 28 . 34) ("CONSTA" symbol "CONSTA" 20 . 26) ("ACTION" symbol "ACTION" 12 . 18) ("OPER_NAME" symbol "OPER_NAME" 1 . 10)))) 5605 . 5704) (semantic-list #("(const lambda_functor<ArgA>& a, const lambda_functor<ArgB>& b)" 0 1 (macros (("CONVERSION" symbol "CONST_CONVERSION" 36 . 52) ("CONSTB" symbol "CONSTB" 28 . 34) ("CONSTA" symbol "CONSTA" 20 . 26) ("ACTION" symbol "ACTION" 12 . 18) ("OPER_NAME" symbol "OPER_NAME" 1 . 10)))) 5605 . 5704) (symbol "OPER_NAME" 5605 . 5704) (punctuation ">" 5605 . 5704) (punctuation ">" 5605 . 5704) (punctuation ">" 5605 . 5704) (punctuation ">" 5605 . 5704) (symbol "ArgB" 5605 . 5704) (punctuation "<" 5605 . 5704) (symbol "lambda_functor" 5605 . 5704) (punctuation "," 5605 . 5704) (punctuation ">" 5605 . 5704) (symbol "ArgA" 5605 . 5704) (punctuation "<" 5605 . 5704) (symbol "lambda_functor" 5605 . 5704) (punctuation "<" 5605 . 5704) (symbol "tuple" 5605 . 5704) (punctuation "," 5605 . 5704) (symbol "ACTION" 5605 . 5704) (punctuation "<" 5605 . 5704) (symbol "lambda_functor_base" 5605 . 5704) (punctuation "<" 5605 . 5704) (symbol "lambda_functor" 5605 . 5704) (CONST "const" 5605 . 5704) (INLINE "inline" 5605 . 5704) (punctuation ">" 5605 . 5704) (symbol "ArgB" 5605 . 5704) (CLASS "class" 5605 . 5704) (punctuation "," 5605 . 5704) (symbol "ArgA" 5605 . 5704) (CLASS "class" 5605 . 5704) (punctuation "<" 5605 . 5704) (TEMPLATE "template" 5605 . 5704) (semantic-list #("{                      \\
  return                                                                     \\
    lambda_functor_base<                                                     \\
      ACTION,                                                                \\
      tuple<typename CONVERSION <CONSTA>::type, lambda_functor<Arg> >      \\
    >                                                                        \\
  (tuple<typename CONVERSION <CONSTA>::type, lambda_functor<Arg> >(a, b)); \\
}" 0 1 (macros (("CONVERSION" symbol "CONST_CONVERSION" 36 . 52) ("CONSTB" symbol "CONSTB" 28 . 34) ("CONSTA" symbol "CONSTA" 20 . 26) ("ACTION" symbol "ACTION" 12 . 18) ("OPER_NAME" symbol "OPER_NAME" 1 . 10)))) 5605 . 5704) (semantic-list #("(CONSTA& a, const lambda_functor<Arg>& b)" 0 1 (macros (("CONVERSION" symbol "CONST_CONVERSION" 36 . 52) ("CONSTB" symbol "CONSTB" 28 . 34) ("CONSTA" symbol "CONSTA" 20 . 26) ("ACTION" symbol "ACTION" 12 . 18) ("OPER_NAME" symbol "OPER_NAME" 1 . 10)))) 5605 . 5704) (symbol "OPER_NAME" 5605 . 5704) (punctuation ">" 5605 . 5704) (punctuation ">" 5605 . 5704) (punctuation ">" 5605 . 5704) (punctuation ">" 5605 . 5704) (symbol "Arg" 5605 . 5704) (punctuation "<" 5605 . 5704) (symbol "lambda_functor" 5605 . 5704) (punctuation "," 5605 . 5704) (symbol "type" 5605 . 5704) (punctuation ":" 5605 . 5704) (punctuation ":" 5605 . 5704) (punctuation ">" 5605 . 5704) (symbol "CONSTA" 5605 . 5704) (punctuation "<" 5605 . 5704) (symbol "CONST_CONVERSION" 5605 . 5704) (TYPENAME "typename" 5605 . 5704) (punctuation "<" 5605 . 5704) (symbol "tuple" 5605 . 5704) (punctuation "," 5605 . 5704) (symbol "ACTION" 5605 . 5704) (punctuation "<" 5605 . 5704) (symbol "lambda_functor_base" 5605 . 5704) (punctuation "<" 5605 . 5704) (symbol "lambda_functor" 5605 . 5704) (CONST "const" 5605 . 5704) (INLINE "inline" 5605 . 5704) (punctuation ">" 5605 . 5704) (symbol "Arg" 5605 . 5704) (CLASS "class" 5605 . 5704) (punctuation "," 5605 . 5704) (symbol "A" 5605 . 5704) (CLASS "class" 5605 . 5704) (punctuation "<" 5605 . 5704) (TEMPLATE "template" 5605 . 5704) (semantic-list #("{                      \\
  return                                                                     \\
    lambda_functor_base<                                                     \\
      ACTION,                                                                \\
      tuple<lambda_functor<Arg>, typename CONVERSION <CONSTB>::type>       \\
    >                                                                        \\
   (tuple<lambda_functor<Arg>, typename CONVERSION <CONSTB>::type>(a, b)); \\
}" 0 1 (macros (("CONVERSION" symbol "CONST_CONVERSION" 36 . 52) ("CONSTB" symbol "CONSTB" 28 . 34) ("CONSTA" symbol "CONSTA" 20 . 26) ("ACTION" symbol "ACTION" 12 . 18) ("OPER_NAME" symbol "OPER_NAME" 1 . 10)))) 5605 . 5704) (semantic-list #("(const lambda_functor<Arg>& a, CONSTB& b)" 0 1 (macros (("CONVERSION" symbol "CONST_CONVERSION" 36 . 52) ("CONSTB" symbol "CONSTB" 28 . 34) ("CONSTA" symbol "CONSTA" 20 . 26) ("ACTION" symbol "ACTION" 12 . 18) ("OPER_NAME" symbol "OPER_NAME" 1 . 10)))) 5605 . 5704) (symbol "OPER_NAME" 5605 . 5704) (punctuation ">" 5605 . 5704) (punctuation ">" 5605 . 5704) (punctuation ">" 5605 . 5704) (symbol "type" 5605 . 5704) (punctuation ":" 5605 . 5704) (punctuation ":" 5605 . 5704) (punctuation ">" 5605 . 5704) (symbol "CONSTB" 5605 . 5704) (punctuation "<" 5605 . 5704) (symbol "CONST_CONVERSION" 5605 . 5704) (TYPENAME "typename" 5605 . 5704) (punctuation "," 5605 . 5704) (punctuation ">" 5605 . 5704) (symbol "Arg" 5605 . 5704) (punctuation "<" 5605 . 5704) (symbol "lambda_functor" 5605 . 5704) (punctuation "<" 5605 . 5704) (symbol "tuple" 5605 . 5704) (punctuation "," 5605 . 5704) (symbol "ACTION" 5605 . 5704) (punctuation "<" 5605 . 5704) (symbol "lambda_functor_base" 5605 . 5704) (punctuation "<" 5605 . 5704) (symbol "lambda_functor" 5605 . 5704) (CONST "const" 5605 . 5704) (INLINE "inline" 5605 . 5704) (punctuation ">" 5605 . 5704) (symbol "B" 5605 . 5704) (CLASS "class" 5605 . 5704) (punctuation "," 5605 . 5704) (symbol "Arg" 5605 . 5704) (CLASS "class" 5605 . 5704) (punctuation "<" 5605 . 5704) (TEMPLATE "template" 5605 . 5704) (semantic-list #("{ \\
  return                                                                   \\
    lambda_functor_base<                                                   \\
      ACTION,                                                              \\
      tuple<lambda_functor<ArgA>, lambda_functor<ArgB> >                   \\
    >                                                                      \\
  (tuple<lambda_functor<ArgA>, lambda_functor<ArgB> >(a, b));              \\
}" 0 1 (macros (("CONVERSION" symbol "CONST_CONVERSION" 36 . 52) ("CONSTB" symbol "CONSTB" 28 . 34) ("CONSTA" symbol "CONSTA" 20 . 26) ("ACTION" symbol "ACTION" 12 . 18) ("OPER_NAME" symbol "OPER_NAME" 1 . 10)))) 5503 . 5604) (semantic-list #("(const lambda_functor<ArgA>& a, const lambda_functor<ArgB>& b)" 0 1 (macros (("CONVERSION" symbol "CONST_CONVERSION" 36 . 52) ("CONSTB" symbol "CONSTB" 28 . 34) ("CONSTA" symbol "CONSTA" 20 . 26) ("ACTION" symbol "ACTION" 12 . 18) ("OPER_NAME" symbol "OPER_NAME" 1 . 10)))) 5503 . 5604) (symbol "OPER_NAME" 5503 . 5604) (punctuation ">" 5503 . 5604) (punctuation ">" 5503 . 5604) (punctuation ">" 5503 . 5604) (punctuation ">" 5503 . 5604) (symbol "ArgB" 5503 . 5604) (punctuation "<" 5503 . 5604) (symbol "lambda_functor" 5503 . 5604) (punctuation "," 5503 . 5604) (punctuation ">" 5503 . 5604) (symbol "ArgA" 5503 . 5604) (punctuation "<" 5503 . 5604) (symbol "lambda_functor" 5503 . 5604) (punctuation "<" 5503 . 5604) (symbol "tuple" 5503 . 5604) (punctuation "," 5503 . 5604) (symbol "ACTION" 5503 . 5604) (punctuation "<" 5503 . 5604) (symbol "lambda_functor_base" 5503 . 5604) (punctuation "<" 5503 . 5604) (symbol "lambda_functor" 5503 . 5604) (CONST "const" 5503 . 5604) (INLINE "inline" 5503 . 5604) (punctuation ">" 5503 . 5604) (symbol "ArgB" 5503 . 5604) (CLASS "class" 5503 . 5604) (punctuation "," 5503 . 5604) (symbol "ArgA" 5503 . 5604) (CLASS "class" 5503 . 5604) (punctuation "<" 5503 . 5604) (TEMPLATE "template" 5503 . 5604) (semantic-list #("{                      \\
  return                                                                     \\
    lambda_functor_base<                                                     \\
      ACTION,                                                                \\
      tuple<typename CONVERSION <CONSTA>::type, lambda_functor<Arg> >      \\
    >                                                                        \\
  (tuple<typename CONVERSION <CONSTA>::type, lambda_functor<Arg> >(a, b)); \\
}" 0 1 (macros (("CONVERSION" symbol "CONST_CONVERSION" 36 . 52) ("CONSTB" symbol "CONSTB" 28 . 34) ("CONSTA" symbol "CONSTA" 20 . 26) ("ACTION" symbol "ACTION" 12 . 18) ("OPER_NAME" symbol "OPER_NAME" 1 . 10)))) 5503 . 5604) (semantic-list #("(CONSTA& a, const lambda_functor<Arg>& b)" 0 1 (macros (("CONVERSION" symbol "CONST_CONVERSION" 36 . 52) ("CONSTB" symbol "CONSTB" 28 . 34) ("CONSTA" symbol "CONSTA" 20 . 26) ("ACTION" symbol "ACTION" 12 . 18) ("OPER_NAME" symbol "OPER_NAME" 1 . 10)))) 5503 . 5604) (symbol "OPER_NAME" 5503 . 5604) (punctuation ">" 5503 . 5604) (punctuation ">" 5503 . 5604) (punctuation ">" 5503 . 5604) (punctuation ">" 5503 . 5604) (symbol "Arg" 5503 . 5604) (punctuation "<" 5503 . 5604) (symbol "lambda_functor" 5503 . 5604) (punctuation "," 5503 . 5604) (symbol "type" 5503 . 5604) (punctuation ":" 5503 . 5604) (punctuation ":" 5503 . 5604) (punctuation ">" 5503 . 5604) (symbol "CONSTA" 5503 . 5604) (punctuation "<" 5503 . 5604) (symbol "CONST_CONVERSION" 5503 . 5604) (TYPENAME "typename" 5503 . 5604) (punctuation "<" 5503 . 5604) (symbol "tuple" 5503 . 5604) (punctuation "," 5503 . 5604) (symbol "ACTION" 5503 . 5604) (punctuation "<" 5503 . 5604) (symbol "lambda_functor_base" 5503 . 5604) (punctuation "<" 5503 . 5604) (symbol "lambda_functor" 5503 . 5604) (CONST "const" 5503 . 5604) (INLINE "inline" 5503 . 5604) (punctuation ">" 5503 . 5604) (symbol "Arg" 5503 . 5604) (CLASS "class" 5503 . 5604) (punctuation "," 5503 . 5604) (symbol "A" 5503 . 5604) (CLASS "class" 5503 . 5604) (punctuation "<" 5503 . 5604) (TEMPLATE "template" 5503 . 5604) (semantic-list #("{                      \\
  return                                                                     \\
    lambda_functor_base<                                                     \\
      ACTION,                                                                \\
      tuple<lambda_functor<Arg>, typename CONVERSION <CONSTB>::type>       \\
    >                                                                        \\
   (tuple<lambda_functor<Arg>, typename CONVERSION <CONSTB>::type>(a, b)); \\
}" 0 1 (macros (("CONVERSION" symbol "CONST_CONVERSION" 36 . 52) ("CONSTB" symbol "CONSTB" 28 . 34) ("CONSTA" symbol "CONSTA" 20 . 26) ("ACTION" symbol "ACTION" 12 . 18) ("OPER_NAME" symbol "OPER_NAME" 1 . 10)))) 5503 . 5604) (semantic-list #("(const lambda_functor<Arg>& a, CONSTB& b)" 0 1 (macros (("CONVERSION" symbol "CONST_CONVERSION" 36 . 52) ("CONSTB" symbol "CONSTB" 28 . 34) ("CONSTA" symbol "CONSTA" 20 . 26) ("ACTION" symbol "ACTION" 12 . 18) ("OPER_NAME" symbol "OPER_NAME" 1 . 10)))) 5503 . 5604) (symbol "OPER_NAME" 5503 . 5604) (punctuation ">" 5503 . 5604) (punctuation ">" 5503 . 5604) (punctuation ">" 5503 . 5604) (symbol "type" 5503 . 5604) (punctuation ":" 5503 . 5604) (punctuation ":" 5503 . 5604) (punctuation ">" 5503 . 5604) (symbol "CONSTB" 5503 . 5604) (punctuation "<" 5503 . 5604) (symbol "CONST_CONVERSION" 5503 . 5604) (TYPENAME "typename" 5503 . 5604) (punctuation "," 5503 . 5604) (punctuation ">" 5503 . 5604) (symbol "Arg" 5503 . 5604) (punctuation "<" 5503 . 5604) (symbol "lambda_functor" 5503 . 5604) (punctuation "<" 5503 . 5604) (symbol "tuple" 5503 . 5604) (punctuation "," 5503 . 5604) (symbol "ACTION" 5503 . 5604) (punctuation "<" 5503 . 5604) (symbol "lambda_functor_base" 5503 . 5604) (punctuation "<" 5503 . 5604) (symbol "lambda_functor" 5503 . 5604) (CONST "const" 5503 . 5604) (INLINE "inline" 5503 . 5604) (punctuation ">" 5503 . 5604) (symbol "B" 5503 . 5604) (CLASS "class" 5503 . 5604) (punctuation "," 5503 . 5604) (symbol "Arg" 5503 . 5604) (CLASS "class" 5503 . 5604) (punctuation "<" 5503 . 5604) (TEMPLATE "template" 5503 . 5604) (semantic-list #("{ \\
  return                                                                   \\
    lambda_functor_base<                                                   \\
      ACTION,                                                              \\
      tuple<lambda_functor<ArgA>, lambda_functor<ArgB> >                   \\
    >                                                                      \\
  (tuple<lambda_functor<ArgA>, lambda_functor<ArgB> >(a, b));              \\
}" 0 1 (macros (("CONVERSION" symbol "CONST_CONVERSION" 36 . 52) ("CONSTB" symbol "CONSTB" 28 . 34) ("CONSTA" symbol "CONSTA" 20 . 26) ("ACTION" symbol "ACTION" 12 . 18) ("OPER_NAME" symbol "OPER_NAME" 1 . 10)))) 5404 . 5502) (semantic-list #("(const lambda_functor<ArgA>& a, const lambda_functor<ArgB>& b)" 0 1 (macros (("CONVERSION" symbol "CONST_CONVERSION" 36 . 52) ("CONSTB" symbol "CONSTB" 28 . 34) ("CONSTA" symbol "CONSTA" 20 . 26) ("ACTION" symbol "ACTION" 12 . 18) ("OPER_NAME" symbol "OPER_NAME" 1 . 10)))) 5404 . 5502) (symbol "OPER_NAME" 5404 . 5502) (punctuation ">" 5404 . 5502) (punctuation ">" 5404 . 5502) (punctuation ">" 5404 . 5502) (punctuation ">" 5404 . 5502) (symbol "ArgB" 5404 . 5502) (punctuation "<" 5404 . 5502) (symbol "lambda_functor" 5404 . 5502) (punctuation "," 5404 . 5502) (punctuation ">" 5404 . 5502) (symbol "ArgA" 5404 . 5502) (punctuation "<" 5404 . 5502) (symbol "lambda_functor" 5404 . 5502) (punctuation "<" 5404 . 5502) (symbol "tuple" 5404 . 5502) (punctuation "," 5404 . 5502) (symbol "ACTION" 5404 . 5502) (punctuation "<" 5404 . 5502) (symbol "lambda_functor_base" 5404 . 5502) (punctuation "<" 5404 . 5502) (symbol "lambda_functor" 5404 . 5502) (CONST "const" 5404 . 5502) (INLINE "inline" 5404 . 5502) (punctuation ">" 5404 . 5502) (symbol "ArgB" 5404 . 5502) (CLASS "class" 5404 . 5502) (punctuation "," 5404 . 5502) (symbol "ArgA" 5404 . 5502) (CLASS "class" 5404 . 5502) (punctuation "<" 5404 . 5502) (TEMPLATE "template" 5404 . 5502) (semantic-list #("{                      \\
  return                                                                     \\
    lambda_functor_base<                                                     \\
      ACTION,                                                                \\
      tuple<typename CONVERSION <CONSTA>::type, lambda_functor<Arg> >      \\
    >                                                                        \\
  (tuple<typename CONVERSION <CONSTA>::type, lambda_functor<Arg> >(a, b)); \\
}" 0 1 (macros (("CONVERSION" symbol "CONST_CONVERSION" 36 . 52) ("CONSTB" symbol "CONSTB" 28 . 34) ("CONSTA" symbol "CONSTA" 20 . 26) ("ACTION" symbol "ACTION" 12 . 18) ("OPER_NAME" symbol "OPER_NAME" 1 . 10)))) 5404 . 5502) (semantic-list #("(CONSTA& a, const lambda_functor<Arg>& b)" 0 1 (macros (("CONVERSION" symbol "CONST_CONVERSION" 36 . 52) ("CONSTB" symbol "CONSTB" 28 . 34) ("CONSTA" symbol "CONSTA" 20 . 26) ("ACTION" symbol "ACTION" 12 . 18) ("OPER_NAME" symbol "OPER_NAME" 1 . 10)))) 5404 . 5502) (symbol "OPER_NAME" 5404 . 5502) (punctuation ">" 5404 . 5502) (punctuation ">" 5404 . 5502) (punctuation ">" 5404 . 5502) (punctuation ">" 5404 . 5502) (symbol "Arg" 5404 . 5502) (punctuation "<" 5404 . 5502) (symbol "lambda_functor" 5404 . 5502) (punctuation "," 5404 . 5502) (symbol "type" 5404 . 5502) (punctuation ":" 5404 . 5502) (punctuation ":" 5404 . 5502) (punctuation ">" 5404 . 5502) (symbol "CONSTA" 5404 . 5502) (punctuation "<" 5404 . 5502) (symbol "CONST_CONVERSION" 5404 . 5502) (TYPENAME "typename" 5404 . 5502) (punctuation "<" 5404 . 5502) (symbol "tuple" 5404 . 5502) (punctuation "," 5404 . 5502) (symbol "ACTION" 5404 . 5502) (punctuation "<" 5404 . 5502) (symbol "lambda_functor_base" 5404 . 5502) (punctuation "<" 5404 . 5502) (symbol "lambda_functor" 5404 . 5502) (CONST "const" 5404 . 5502) (INLINE "inline" 5404 . 5502) (punctuation ">" 5404 . 5502) (symbol "Arg" 5404 . 5502) (CLASS "class" 5404 . 5502) (punctuation "," 5404 . 5502) (symbol "A" 5404 . 5502) (CLASS "class" 5404 . 5502) (punctuation "<" 5404 . 5502) (TEMPLATE "template" 5404 . 5502) (semantic-list #("{                      \\
  return                                                                     \\
    lambda_functor_base<                                                     \\
      ACTION,                                                                \\
      tuple<lambda_functor<Arg>, typename CONVERSION <CONSTB>::type>       \\
    >                                                                        \\
   (tuple<lambda_functor<Arg>, typename CONVERSION <CONSTB>::type>(a, b)); \\
}" 0 1 (macros (("CONVERSION" symbol "CONST_CONVERSION" 36 . 52) ("CONSTB" symbol "CONSTB" 28 . 34) ("CONSTA" symbol "CONSTA" 20 . 26) ("ACTION" symbol "ACTION" 12 . 18) ("OPER_NAME" symbol "OPER_NAME" 1 . 10)))) 5404 . 5502) (semantic-list #("(const lambda_functor<Arg>& a, CONSTB& b)" 0 1 (macros (("CONVERSION" symbol "CONST_CONVERSION" 36 . 52) ("CONSTB" symbol "CONSTB" 28 . 34) ("CONSTA" symbol "CONSTA" 20 . 26) ("ACTION" symbol "ACTION" 12 . 18) ("OPER_NAME" symbol "OPER_NAME" 1 . 10)))) 5404 . 5502) (symbol "OPER_NAME" 5404 . 5502) (punctuation ">" 5404 . 5502) (punctuation ">" 5404 . 5502) (punctuation ">" 5404 . 5502) (symbol "type" 5404 . 5502) (punctuation ":" 5404 . 5502) (punctuation ":" 5404 . 5502) (punctuation ">" 5404 . 5502) (symbol "CONSTB" 5404 . 5502) (punctuation "<" 5404 . 5502) (symbol "CONST_CONVERSION" 5404 . 5502) (TYPENAME "typename" 5404 . 5502) (punctuation "," 5404 . 5502) (punctuation ">" 5404 . 5502) (symbol "Arg" 5404 . 5502) (punctuation "<" 5404 . 5502) (symbol "lambda_functor" 5404 . 5502) (punctuation "<" 5404 . 5502) (symbol "tuple" 5404 . 5502) (punctuation "," 5404 . 5502) (symbol "ACTION" 5404 . 5502) (punctuation "<" 5404 . 5502) (symbol "lambda_functor_base" 5404 . 5502) (punctuation "<" 5404 . 5502) (symbol "lambda_functor" 5404 . 5502) (CONST "const" 5404 . 5502) (INLINE "inline" 5404 . 5502) (punctuation ">" 5404 . 5502) (symbol "B" 5404 . 5502) (CLASS "class" 5404 . 5502) (punctuation "," 5404 . 5502) (symbol "Arg" 5404 . 5502) (CLASS "class" 5404 . 5502) (punctuation "<" 5404 . 5502) (TEMPLATE "template" 5404 . 5502) (semantic-list #("{ \\
  return                                                                   \\
    lambda_functor_base<                                                   \\
      ACTION,                                                              \\
      tuple<lambda_functor<ArgA>, lambda_functor<ArgB> >                   \\
    >                                                                      \\
  (tuple<lambda_functor<ArgA>, lambda_functor<ArgB> >(a, b));              \\
}" 0 1 (macros (("CONVERSION" symbol "CONST_CONVERSION" 36 . 52) ("CONSTB" symbol "CONSTB" 28 . 34) ("CONSTA" symbol "CONSTA" 20 . 26) ("ACTION" symbol "ACTION" 12 . 18) ("OPER_NAME" symbol "OPER_NAME" 1 . 10)))) 5306 . 5403) (semantic-list #("(const lambda_functor<ArgA>& a, const lambda_functor<ArgB>& b)" 0 1 (macros (("CONVERSION" symbol "CONST_CONVERSION" 36 . 52) ("CONSTB" symbol "CONSTB" 28 . 34) ("CONSTA" symbol "CONSTA" 20 . 26) ("ACTION" symbol "ACTION" 12 . 18) ("OPER_NAME" symbol "OPER_NAME" 1 . 10)))) 5306 . 5403) (symbol "OPER_NAME" 5306 . 5403) (punctuation ">" 5306 . 5403) (punctuation ">" 5306 . 5403) (punctuation ">" 5306 . 5403) (punctuation ">" 5306 . 5403) (symbol "ArgB" 5306 . 5403) (punctuation "<" 5306 . 5403) (symbol "lambda_functor" 5306 . 5403) (punctuation "," 5306 . 5403) (punctuation ">" 5306 . 5403) (symbol "ArgA" 5306 . 5403) (punctuation "<" 5306 . 5403) (symbol "lambda_functor" 5306 . 5403) (punctuation "<" 5306 . 5403) (symbol "tuple" 5306 . 5403) (punctuation "," 5306 . 5403) (symbol "ACTION" 5306 . 5403) (punctuation "<" 5306 . 5403) (symbol "lambda_functor_base" 5306 . 5403) (punctuation "<" 5306 . 5403) (symbol "lambda_functor" 5306 . 5403) (CONST "const" 5306 . 5403) (INLINE "inline" 5306 . 5403) (punctuation ">" 5306 . 5403) (symbol "ArgB" 5306 . 5403) (CLASS "class" 5306 . 5403) (punctuation "," 5306 . 5403) (symbol "ArgA" 5306 . 5403) (CLASS "class" 5306 . 5403) (punctuation "<" 5306 . 5403) (TEMPLATE "template" 5306 . 5403) (semantic-list #("{                      \\
  return                                                                     \\
    lambda_functor_base<                                                     \\
      ACTION,                                                                \\
      tuple<typename CONVERSION <CONSTA>::type, lambda_functor<Arg> >      \\
    >                                                                        \\
  (tuple<typename CONVERSION <CONSTA>::type, lambda_functor<Arg> >(a, b)); \\
}" 0 1 (macros (("CONVERSION" symbol "CONST_CONVERSION" 36 . 52) ("CONSTB" symbol "CONSTB" 28 . 34) ("CONSTA" symbol "CONSTA" 20 . 26) ("ACTION" symbol "ACTION" 12 . 18) ("OPER_NAME" symbol "OPER_NAME" 1 . 10)))) 5306 . 5403) (semantic-list #("(CONSTA& a, const lambda_functor<Arg>& b)" 0 1 (macros (("CONVERSION" symbol "CONST_CONVERSION" 36 . 52) ("CONSTB" symbol "CONSTB" 28 . 34) ("CONSTA" symbol "CONSTA" 20 . 26) ("ACTION" symbol "ACTION" 12 . 18) ("OPER_NAME" symbol "OPER_NAME" 1 . 10)))) 5306 . 5403) (symbol "OPER_NAME" 5306 . 5403) (punctuation ">" 5306 . 5403) (punctuation ">" 5306 . 5403) (punctuation ">" 5306 . 5403) (punctuation ">" 5306 . 5403) (symbol "Arg" 5306 . 5403) (punctuation "<" 5306 . 5403) (symbol "lambda_functor" 5306 . 5403) (punctuation "," 5306 . 5403) (symbol "type" 5306 . 5403) (punctuation ":" 5306 . 5403) (punctuation ":" 5306 . 5403) (punctuation ">" 5306 . 5403) (symbol "CONSTA" 5306 . 5403) (punctuation "<" 5306 . 5403) (symbol "CONST_CONVERSION" 5306 . 5403) (TYPENAME "typename" 5306 . 5403) (punctuation "<" 5306 . 5403) (symbol "tuple" 5306 . 5403) (punctuation "," 5306 . 5403) (symbol "ACTION" 5306 . 5403) (punctuation "<" 5306 . 5403) (symbol "lambda_functor_base" 5306 . 5403) (punctuation "<" 5306 . 5403) (symbol "lambda_functor" 5306 . 5403) (CONST "const" 5306 . 5403) (INLINE "inline" 5306 . 5403) (punctuation ">" 5306 . 5403) (symbol "Arg" 5306 . 5403) (CLASS "class" 5306 . 5403) (punctuation "," 5306 . 5403) (symbol "A" 5306 . 5403) (CLASS "class" 5306 . 5403) (punctuation "<" 5306 . 5403) (TEMPLATE "template" 5306 . 5403) (semantic-list #("{                      \\
  return                                                                     \\
    lambda_functor_base<                                                     \\
      ACTION,                                                                \\
      tuple<lambda_functor<Arg>, typename CONVERSION <CONSTB>::type>       \\
    >                                                                        \\
   (tuple<lambda_functor<Arg>, typename CONVERSION <CONSTB>::type>(a, b)); \\
}" 0 1 (macros (("CONVERSION" symbol "CONST_CONVERSION" 36 . 52) ("CONSTB" symbol "CONSTB" 28 . 34) ("CONSTA" symbol "CONSTA" 20 . 26) ("ACTION" symbol "ACTION" 12 . 18) ("OPER_NAME" symbol "OPER_NAME" 1 . 10)))) 5306 . 5403) (semantic-list #("(const lambda_functor<Arg>& a, CONSTB& b)" 0 1 (macros (("CONVERSION" symbol "CONST_CONVERSION" 36 . 52) ("CONSTB" symbol "CONSTB" 28 . 34) ("CONSTA" symbol "CONSTA" 20 . 26) ("ACTION" symbol "ACTION" 12 . 18) ("OPER_NAME" symbol "OPER_NAME" 1 . 10)))) 5306 . 5403) (symbol "OPER_NAME" 5306 . 5403) (punctuation ">" 5306 . 5403) (punctuation ">" 5306 . 5403) (punctuation ">" 5306 . 5403) (symbol "type" 5306 . 5403) (punctuation ":" 5306 . 5403) (punctuation ":" 5306 . 5403) (punctuation ">" 5306 . 5403) (symbol "CONSTB" 5306 . 5403) (punctuation "<" 5306 . 5403) (symbol "CONST_CONVERSION" 5306 . 5403) (TYPENAME "typename" 5306 . 5403) (punctuation "," 5306 . 5403) (punctuation ">" 5306 . 5403) (symbol "Arg" 5306 . 5403) (punctuation "<" 5306 . 5403) (symbol "lambda_functor" 5306 . 5403) (punctuation "<" 5306 . 5403) (symbol "tuple" 5306 . 5403) (punctuation "," 5306 . 5403) (symbol "ACTION" 5306 . 5403) (punctuation "<" 5306 . 5403) (symbol "lambda_functor_base" 5306 . 5403) (punctuation "<" 5306 . 5403) (symbol "lambda_functor" 5306 . 5403) (CONST "const" 5306 . 5403) (INLINE "inline" 5306 . 5403) (punctuation ">" 5306 . 5403) (symbol "B" 5306 . 5403) (CLASS "class" 5306 . 5403) (punctuation "," 5306 . 5403) (symbol "Arg" 5306 . 5403) (CLASS "class" 5306 . 5403) (punctuation "<" 5306 . 5403) (TEMPLATE "template" 5306 . 5403) (string 4921 . 4958) (symbol 4915 . 4920) (punctuation 4914 . 4915) (string 3604 . 3642) (symbol 3598 . 3603) (punctuation 3597 . 3598) (string 2261 . 2299) (symbol 2255 . 2260) (punctuation 2254 . 2255) (string 618 . 656) (symbol 612 . 617) (punctuation 611 . 612))
    :lexical-table 
        '(("OPER_NAME"nil ;; bogus macro found.
)
          ("BOOST_LAMBDA_OPERATORS_HPP")
          ("CONVERSION"nil ;; bogus macro found.
)
          ("ACTION"nil ;; bogus macro found.
)
          ("CONSTA"nil ;; bogus macro found.
)
          ("CONSTB"nil ;; bogus macro found.
)
          ("BOOST_LAMBDA_EMPTY" (spp-arg-list nil 5301 . 5303))
          )

    )
   (semanticdb-table "member_ptr.hpp"
    :major-mode 'c++-mode
    :tags 
        '( ("BOOST_LAMBDA_MEMBER_PTR_HPP" variable (:constant-flag t) nil [526 553])
            ("boost" type
               (:members 
                  ( ("lambda" type
                       (:members 
                          ( ("member_pointer_action" type (:type "class") (reparse-symbol namespacesubparts) [595 626])
                            ("detail" type
                               (:members 
                                  ( ("member_pointer" type
                                       (:template 
                                          ( ("T" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :members 
                                          ( ("type" type
                                               (:typedef ("boost::add_reference::type" type (:type "class") nil nil)
                                                :superclasses "boost::add_reference::type"
                                                :type "typedef")
                                                (reparse-symbol classsubparts) [787 839])
                                            ("class_type" type
                                               (:typedef ("detail::unspecified" type (:type "class") nil nil)
                                                :superclasses "detail::unspecified"
                                                :type "typedef")
                                                (reparse-symbol classsubparts) [842 881])
                                            ("qualified_class_type" type
                                               (:typedef ("detail::unspecified" type (:type "class") nil nil)
                                                :superclasses "detail::unspecified"
                                                :type "typedef")
                                                (reparse-symbol classsubparts) [884 933])
                                            ("BOOST_STATIC_CONSTANT" function
                                               (:prototype-flag t
                                                :arguments 
                                                  ( ("" variable (:type "bool") (reparse-symbol arg-sub-list) [958 963])
                                                    ("" variable (:type ("is_data_member" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [964 980])
                                                    ("" variable (:type ("false" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [981 987]))                                                  
                                                :type "int")
                                                (reparse-symbol classsubparts) [936 988])
                                            ("BOOST_STATIC_CONSTANT" function
                                               (:prototype-flag t
                                                :arguments 
                                                  ( ("" variable (:type "bool") (reparse-symbol arg-sub-list) [1013 1018])
                                                    ("" variable (:type ("is_function_member" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1019 1039])
                                                    ("" variable (:type ("false" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1040 1046]))                                                  
                                                :type "int")
                                                (reparse-symbol classsubparts) [991 1047]))                                          )
                                        (reparse-symbol namespacesubparts) [743 1050])
                                    ("T" function
                                       (:arguments 
                                          ( ("" variable (:type ("U" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2385 2387]))                                          
                                        :type "int")
                                        (reparse-symbol namespacesubparts) [2382 2392])
                                    ("T" function
                                       (:arguments 
                                          ( ("" variable (:type ("U" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2650 2652]))                                          
                                        :type "int")
                                        (reparse-symbol namespacesubparts) [2647 2659])
                                    ("T" function
                                       (:arguments 
                                          ( ("" variable (:type ("U" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2927 2929]))                                          
                                        :type "int")
                                        (reparse-symbol namespacesubparts) [2924 2940])
                                    ("T" function
                                       (:arguments 
                                          ( ("" variable (:type ("U" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3218 3220]))                                          
                                        :type "int")
                                        (reparse-symbol namespacesubparts) [3215 3235])
                                    ("T" function
                                       (:arguments 
                                          ( ("" variable (:type ("U" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3523 3525]))                                          
                                        :type "int")
                                        (reparse-symbol namespacesubparts) [3520 3544])
                                    ("T" function
                                       (:arguments 
                                          ( ("" variable (:type ("U" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3842 3844]))                                          
                                        :type "int")
                                        (reparse-symbol namespacesubparts) [3839 3867])
                                    ("T" function
                                       (:arguments 
                                          ( ("" variable (:type ("U" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4184 4186]))                                          
                                        :type "int")
                                        (reparse-symbol namespacesubparts) [4181 4213])
                                    ("T" function
                                       (:arguments 
                                          ( ("" variable (:type ("U" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4540 4542]))                                          
                                        :type "int")
                                        (reparse-symbol namespacesubparts) [4537 4573])
                                    ("T" function
                                       (:arguments 
                                          ( ("" variable (:type ("U" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4910 4912]))                                          
                                        :type "int")
                                        (reparse-symbol namespacesubparts) [4907 4947])
                                    ("T" function
                                       (:arguments 
                                          ( ("" variable (:type ("U" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5294 5296]))                                          
                                        :type "int")
                                        (reparse-symbol namespacesubparts) [5291 5335])
                                    ("T" function
                                       (:arguments 
                                          ( ("" variable (:type ("U" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5615 5617]))                                          
                                        :type "int")
                                        (reparse-symbol namespacesubparts) [5612 5622])
                                    ("T" function
                                       (:arguments 
                                          ( ("" variable (:type ("U" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5892 5894]))                                          
                                        :type "int")
                                        (reparse-symbol namespacesubparts) [5889 5901])
                                    ("T" function
                                       (:arguments 
                                          ( ("" variable (:type ("U" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [6181 6183]))                                          
                                        :type "int")
                                        (reparse-symbol namespacesubparts) [6178 6194])
                                    ("T" function
                                       (:arguments 
                                          ( ("" variable (:type ("U" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [6484 6486]))                                          
                                        :type "int")
                                        (reparse-symbol namespacesubparts) [6481 6501])
                                    ("T" function
                                       (:arguments 
                                          ( ("" variable (:type ("U" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [6801 6803]))                                          
                                        :type "int")
                                        (reparse-symbol namespacesubparts) [6798 6822])
                                    ("T" function
                                       (:arguments 
                                          ( ("" variable (:type ("U" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7132 7134]))                                          
                                        :type "int")
                                        (reparse-symbol namespacesubparts) [7129 7157])
                                    ("T" function
                                       (:arguments 
                                          ( ("" variable (:type ("U" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7486 7488]))                                          
                                        :type "int")
                                        (reparse-symbol namespacesubparts) [7483 7515])
                                    ("T" function
                                       (:arguments 
                                          ( ("" variable (:type ("U" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7854 7856]))                                          
                                        :type "int")
                                        (reparse-symbol namespacesubparts) [7851 7887])
                                    ("T" function
                                       (:arguments 
                                          ( ("" variable (:type ("U" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [8236 8238]))                                          
                                        :type "int")
                                        (reparse-symbol namespacesubparts) [8233 8273])
                                    ("T" function
                                       (:arguments 
                                          ( ("" variable (:type ("U" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [8632 8634]))                                          
                                        :type "int")
                                        (reparse-symbol namespacesubparts) [8629 8673])
                                    ("T" function
                                       (:arguments 
                                          ( ("" variable (:type ("U" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [8953 8955]))                                          
                                        :type "int")
                                        (reparse-symbol namespacesubparts) [8950 8960])
                                    ("T" function
                                       (:arguments 
                                          ( ("" variable (:type ("U" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [9236 9238]))                                          
                                        :type "int")
                                        (reparse-symbol namespacesubparts) [9233 9245])
                                    ("T" function
                                       (:arguments 
                                          ( ("" variable (:type ("U" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [9531 9533]))                                          
                                        :type "int")
                                        (reparse-symbol namespacesubparts) [9528 9544])
                                    ("T" function
                                       (:arguments 
                                          ( ("" variable (:type ("U" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [9840 9842]))                                          
                                        :type "int")
                                        (reparse-symbol namespacesubparts) [9837 9857])
                                    ("T" function
                                       (:arguments 
                                          ( ("" variable (:type ("U" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [10163 10165]))                                          
                                        :type "int")
                                        (reparse-symbol namespacesubparts) [10160 10184])
                                    ("T" function
                                       (:arguments 
                                          ( ("" variable (:type ("U" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [10500 10502]))                                          
                                        :type "int")
                                        (reparse-symbol namespacesubparts) [10497 10525])
                                    ("T" function
                                       (:arguments 
                                          ( ("" variable (:type ("U" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [10860 10862]))                                          
                                        :type "int")
                                        (reparse-symbol namespacesubparts) [10857 10889])
                                    ("T" function
                                       (:arguments 
                                          ( ("" variable (:type ("U" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [11234 11236]))                                          
                                        :type "int")
                                        (reparse-symbol namespacesubparts) [11231 11267])
                                    ("T" function
                                       (:arguments 
                                          ( ("" variable (:type ("U" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [11622 11624]))                                          
                                        :type "int")
                                        (reparse-symbol namespacesubparts) [11619 11659])
                                    ("T" function
                                       (:arguments 
                                          ( ("" variable (:type ("U" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [12024 12026]))                                          
                                        :type "int")
                                        (reparse-symbol namespacesubparts) [12021 12065])
                                    ("T" function
                                       (:arguments 
                                          ( ("" variable (:type ("U" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [12354 12356]))                                          
                                        :type "int")
                                        (reparse-symbol namespacesubparts) [12351 12361])
                                    ("T" function
                                       (:arguments 
                                          ( ("" variable (:type ("U" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [12649 12651]))                                          
                                        :type "int")
                                        (reparse-symbol namespacesubparts) [12646 12658])
                                    ("T" function
                                       (:arguments 
                                          ( ("" variable (:type ("U" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [12956 12958]))                                          
                                        :type "int")
                                        (reparse-symbol namespacesubparts) [12953 12969])
                                    ("T" function
                                       (:arguments 
                                          ( ("" variable (:type ("U" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [13277 13279]))                                          
                                        :type "int")
                                        (reparse-symbol namespacesubparts) [13274 13294])
                                    ("T" function
                                       (:arguments 
                                          ( ("" variable (:type ("U" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [13612 13614]))                                          
                                        :type "int")
                                        (reparse-symbol namespacesubparts) [13609 13633])
                                    ("T" function
                                       (:arguments 
                                          ( ("" variable (:type ("U" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [13848 13850]))                                          
                                        :type "int")
                                        (reparse-symbol namespacesubparts) [13845 13873])
                                    ("T" function
                                       (:arguments 
                                          ( ("" variable (:type ("U" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [14220 14222]))                                          
                                        :type "int")
                                        (reparse-symbol namespacesubparts) [14217 14249])
                                    ("T" function
                                       (:arguments 
                                          ( ("" variable (:type ("U" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [14606 14608]))                                          
                                        :type "int")
                                        (reparse-symbol namespacesubparts) [14603 14639])
                                    ("T" function
                                       (:arguments 
                                          ( ("" variable (:type ("U" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [15006 15008]))                                          
                                        :type "int")
                                        (reparse-symbol namespacesubparts) [15003 15043])
                                    ("T" function
                                       (:arguments 
                                          ( ("" variable (:type ("U" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [15420 15422]))                                          
                                        :type "int")
                                        (reparse-symbol namespacesubparts) [15417 15461]))                                  
                                :type "namespace")
                                (reparse-symbol namespacesubparts) [629 15689])
                            ("detail" type
                               (:members 
                                  ( ("member_pointer_caller" type
                                       (:template 
                                          ( ("RET" type (:type "class") nil nil)
                                            ("A" type (:type "class") nil nil)
                                            ("B" type (:type "class") nil nil))                                          
                                        :type "class"
                                        :members 
                                          ( ("a" variable (:type ("A" type (:type "class") nil nil)) (reparse-symbol classsubparts) [16616 16620])
                                            ("b" variable (:type ("B" type (:type "class") nil nil)) (reparse-symbol classsubparts) [16621 16625])
                                            ("public" label nil (reparse-symbol classsubparts) [16627 16634])
                                            ("member_pointer_caller" function
                                               (:constructor-flag t
                                                :arguments 
                                                  ( ("aa" variable
                                                       (:reference 1
                                                        :constant-flag t
                                                        :type ("A" type (:type "class") nil nil))
                                                        (reparse-symbol arg-sub-list) [16659 16671])
                                                    ("bb" variable
                                                       (:reference 1
                                                        :constant-flag t
                                                        :type ("B" type (:type "class") nil nil))
                                                        (reparse-symbol arg-sub-list) [16672 16684]))                                                  
                                                :type ("member_pointer_caller" type (:type "class") nil nil))
                                                (reparse-symbol classsubparts) [16637 16702])
                                            ("()" function
                                               (:operator-flag t
                                                :type ("RET" type (:type "class") nil nil))
                                                (reparse-symbol classsubparts) [16706 16750])
                                            ("()" function
                                               (:template 
                                                  ( ("A1" type (:type "class") nil nil))                                                  
                                                :type ("RET" type (:type "class") nil nil)
                                                :arguments 
                                                  ( ("a1" variable
                                                       (:reference 1
                                                        :constant-flag t
                                                        :type ("A1" type (:type "class") nil nil))
                                                        (reparse-symbol arg-sub-list) [16791 16804]))                                                  
                                                :operator-flag t)
                                                (reparse-symbol classsubparts) [16755 16834])
                                            ("()" function
                                               (:template 
                                                  ( ("A1" type (:type "class") nil nil)
                                                    ("A2" type (:type "class") nil nil))                                                  
                                                :type ("RET" type (:type "class") nil nil)
                                                :arguments 
                                                  ( ("a1" variable
                                                       (:reference 1
                                                        :constant-flag t
                                                        :type ("A1" type (:type "class") nil nil))
                                                        (reparse-symbol arg-sub-list) [16885 16898])
                                                    ("a2" variable
                                                       (:reference 1
                                                        :constant-flag t
                                                        :type ("A2" type (:type "class") nil nil))
                                                        (reparse-symbol arg-sub-list) [16899 16912]))                                                  
                                                :operator-flag t)
                                                (reparse-symbol classsubparts) [16839 16946])
                                            ("()" function
                                               (:template 
                                                  ( ("A1" type (:type "class") nil nil)
                                                    ("A2" type (:type "class") nil nil)
                                                    ("A3" type (:type "class") nil nil))                                                  
                                                :type ("RET" type (:type "class") nil nil)
                                                :arguments 
                                                  ( ("a1" variable
                                                       (:reference 1
                                                        :constant-flag t
                                                        :type ("A1" type (:type "class") nil nil))
                                                        (reparse-symbol arg-sub-list) [17007 17020])
                                                    ("a2" variable
                                                       (:reference 1
                                                        :constant-flag t
                                                        :type ("A2" type (:type "class") nil nil))
                                                        (reparse-symbol arg-sub-list) [17021 17034])
                                                    ("a3" variable
                                                       (:reference 1
                                                        :constant-flag t
                                                        :type ("A3" type (:type "class") nil nil))
                                                        (reparse-symbol arg-sub-list) [17035 17048]))                                                  
                                                :operator-flag t)
                                                (reparse-symbol classsubparts) [16951 17094])
                                            ("()" function
                                               (:template 
                                                  ( ("A1" type (:type "class") nil nil)
                                                    ("A2" type (:type "class") nil nil)
                                                    ("A3" type (:type "class") nil nil)
                                                    ("A4" type (:type "class") nil nil))                                                  
                                                :type ("RET" type (:type "class") nil nil)
                                                :arguments 
                                                  ( ("a1" variable
                                                       (:reference 1
                                                        :constant-flag t
                                                        :type ("A1" type (:type "class") nil nil))
                                                        (reparse-symbol arg-sub-list) [17165 17178])
                                                    ("a2" variable
                                                       (:reference 1
                                                        :constant-flag t
                                                        :type ("A2" type (:type "class") nil nil))
                                                        (reparse-symbol arg-sub-list) [17179 17192])
                                                    ("a3" variable
                                                       (:reference 1
                                                        :constant-flag t
                                                        :type ("A3" type (:type "class") nil nil))
                                                        (reparse-symbol arg-sub-list) [17193 17206])
                                                    ("a4" variable
                                                       (:reference 1
                                                        :constant-flag t
                                                        :type ("A4" type (:type "class") nil nil))
                                                        (reparse-symbol arg-sub-list) [17225 17238]))                                                  
                                                :operator-flag t)
                                                (reparse-symbol classsubparts) [17099 17288])
                                            ("()" function
                                               (:template 
                                                  ( ("A1" type (:type "class") nil nil)
                                                    ("A2" type (:type "class") nil nil)
                                                    ("A3" type (:type "class") nil nil)
                                                    ("A4" type (:type "class") nil nil)
                                                    ("A5" type (:type "class") nil nil))                                                  
                                                :type ("RET" type (:type "class") nil nil)
                                                :arguments 
                                                  ( ("a1" variable
                                                       (:reference 1
                                                        :constant-flag t
                                                        :type ("A1" type (:type "class") nil nil))
                                                        (reparse-symbol arg-sub-list) [17369 17382])
                                                    ("a2" variable
                                                       (:reference 1
                                                        :constant-flag t
                                                        :type ("A2" type (:type "class") nil nil))
                                                        (reparse-symbol arg-sub-list) [17383 17396])
                                                    ("a3" variable
                                                       (:reference 1
                                                        :constant-flag t
                                                        :type ("A3" type (:type "class") nil nil))
                                                        (reparse-symbol arg-sub-list) [17397 17410])
                                                    ("a4" variable
                                                       (:reference 1
                                                        :constant-flag t
                                                        :type ("A4" type (:type "class") nil nil))
                                                        (reparse-symbol arg-sub-list) [17411 17424])
                                                    ("a5" variable
                                                       (:reference 1
                                                        :constant-flag t
                                                        :type ("A5" type (:type "class") nil nil))
                                                        (reparse-symbol arg-sub-list) [17443 17456]))                                                  
                                                :operator-flag t)
                                                (reparse-symbol classsubparts) [17293 17510])
                                            ("()" function
                                               (:template 
                                                  ( ("A1" type (:type "class") nil nil)
                                                    ("A2" type (:type "class") nil nil)
                                                    ("A3" type (:type "class") nil nil)
                                                    ("A4" type (:type "class") nil nil)
                                                    ("A5" type (:type "class") nil nil)
                                                    ("A6" type (:type "class") nil nil))                                                  
                                                :type ("RET" type (:type "class") nil nil)
                                                :arguments 
                                                  ( ("a1" variable
                                                       (:reference 1
                                                        :constant-flag t
                                                        :type ("A1" type (:type "class") nil nil))
                                                        (reparse-symbol arg-sub-list) [17601 17614])
                                                    ("a2" variable
                                                       (:reference 1
                                                        :constant-flag t
                                                        :type ("A2" type (:type "class") nil nil))
                                                        (reparse-symbol arg-sub-list) [17615 17628])
                                                    ("a3" variable
                                                       (:reference 1
                                                        :constant-flag t
                                                        :type ("A3" type (:type "class") nil nil))
                                                        (reparse-symbol arg-sub-list) [17629 17642])
                                                    ("a4" variable
                                                       (:reference 1
                                                        :constant-flag t
                                                        :type ("A4" type (:type "class") nil nil))
                                                        (reparse-symbol arg-sub-list) [17643 17656])
                                                    ("a5" variable
                                                       (:reference 1
                                                        :constant-flag t
                                                        :type ("A5" type (:type "class") nil nil))
                                                        (reparse-symbol arg-sub-list) [17675 17688])
                                                    ("a6" variable
                                                       (:reference 1
                                                        :constant-flag t
                                                        :type ("A6" type (:type "class") nil nil))
                                                        (reparse-symbol arg-sub-list) [17689 17702]))                                                  
                                                :operator-flag t)
                                                (reparse-symbol classsubparts) [17515 17760])
                                            ("()" function
                                               (:template 
                                                  ( ("A1" type (:type "class") nil nil)
                                                    ("A2" type (:type "class") nil nil)
                                                    ("A3" type (:type "class") nil nil)
                                                    ("A4" type (:type "class") nil nil)
                                                    ("A5" type (:type "class") nil nil)
                                                    ("A6" type (:type "class") nil nil)
                                                    ("A7" type (:type "class") nil nil))                                                  
                                                :type ("RET" type (:type "class") nil nil)
                                                :arguments 
                                                  ( ("a1" variable
                                                       (:reference 1
                                                        :constant-flag t
                                                        :type ("A1" type (:type "class") nil nil))
                                                        (reparse-symbol arg-sub-list) [17873 17886])
                                                    ("a2" variable
                                                       (:reference 1
                                                        :constant-flag t
                                                        :type ("A2" type (:type "class") nil nil))
                                                        (reparse-symbol arg-sub-list) [17887 17900])
                                                    ("a3" variable
                                                       (:reference 1
                                                        :constant-flag t
                                                        :type ("A3" type (:type "class") nil nil))
                                                        (reparse-symbol arg-sub-list) [17901 17914])
                                                    ("a4" variable
                                                       (:reference 1
                                                        :constant-flag t
                                                        :type ("A4" type (:type "class") nil nil))
                                                        (reparse-symbol arg-sub-list) [17915 17928])
                                                    ("a5" variable
                                                       (:reference 1
                                                        :constant-flag t
                                                        :type ("A5" type (:type "class") nil nil))
                                                        (reparse-symbol arg-sub-list) [17947 17960])
                                                    ("a6" variable
                                                       (:reference 1
                                                        :constant-flag t
                                                        :type ("A6" type (:type "class") nil nil))
                                                        (reparse-symbol arg-sub-list) [17961 17974])
                                                    ("a7" variable
                                                       (:reference 1
                                                        :constant-flag t
                                                        :type ("A7" type (:type "class") nil nil))
                                                        (reparse-symbol arg-sub-list) [17975 17988]))                                                  
                                                :operator-flag t)
                                                (reparse-symbol classsubparts) [17765 18050])
                                            ("()" function
                                               (:template 
                                                  ( ("A1" type (:type "class") nil nil)
                                                    ("A2" type (:type "class") nil nil)
                                                    ("A3" type (:type "class") nil nil)
                                                    ("A4" type (:type "class") nil nil)
                                                    ("A5" type (:type "class") nil nil)
                                                    ("A6" type (:type "class") nil nil)
                                                    ("A7" type (:type "class") nil nil)
                                                    ("A8" type (:type "class") nil nil))                                                  
                                                :type ("RET" type (:type "class") nil nil)
                                                :arguments 
                                                  ( ("a1" variable
                                                       (:reference 1
                                                        :constant-flag t
                                                        :type ("A1" type (:type "class") nil nil))
                                                        (reparse-symbol arg-sub-list) [18173 18186])
                                                    ("a2" variable
                                                       (:reference 1
                                                        :constant-flag t
                                                        :type ("A2" type (:type "class") nil nil))
                                                        (reparse-symbol arg-sub-list) [18187 18200])
                                                    ("a3" variable
                                                       (:reference 1
                                                        :constant-flag t
                                                        :type ("A3" type (:type "class") nil nil))
                                                        (reparse-symbol arg-sub-list) [18201 18214])
                                                    ("a4" variable
                                                       (:reference 1
                                                        :constant-flag t
                                                        :type ("A4" type (:type "class") nil nil))
                                                        (reparse-symbol arg-sub-list) [18215 18228])
                                                    ("a5" variable
                                                       (:reference 1
                                                        :constant-flag t
                                                        :type ("A5" type (:type "class") nil nil))
                                                        (reparse-symbol arg-sub-list) [18247 18260])
                                                    ("a6" variable
                                                       (:reference 1
                                                        :constant-flag t
                                                        :type ("A6" type (:type "class") nil nil))
                                                        (reparse-symbol arg-sub-list) [18261 18274])
                                                    ("a7" variable
                                                       (:reference 1
                                                        :constant-flag t
                                                        :type ("A7" type (:type "class") nil nil))
                                                        (reparse-symbol arg-sub-list) [18275 18288])
                                                    ("a8" variable
                                                       (:reference 1
                                                        :constant-flag t
                                                        :type ("A8" type (:type "class") nil nil))
                                                        (reparse-symbol arg-sub-list) [18306 18319]))                                                  
                                                :operator-flag t)
                                                (reparse-symbol classsubparts) [18055 18385])
                                            ("()" function
                                               (:template 
                                                  ( ("A1" type (:type "class") nil nil)
                                                    ("A2" type (:type "class") nil nil)
                                                    ("A3" type (:type "class") nil nil)
                                                    ("A4" type (:type "class") nil nil)
                                                    ("A5" type (:type "class") nil nil)
                                                    ("A6" type (:type "class") nil nil)
                                                    ("A7" type (:type "class") nil nil)
                                                    ("A8" type (:type "class") nil nil)
                                                    ("A9" type (:type "class") nil nil))                                                  
                                                :type ("RET" type (:type "class") nil nil)
                                                :arguments 
                                                  ( ("a1" variable
                                                       (:reference 1
                                                        :constant-flag t
                                                        :type ("A1" type (:type "class") nil nil))
                                                        (reparse-symbol arg-sub-list) [18518 18531])
                                                    ("a2" variable
                                                       (:reference 1
                                                        :constant-flag t
                                                        :type ("A2" type (:type "class") nil nil))
                                                        (reparse-symbol arg-sub-list) [18532 18545])
                                                    ("a3" variable
                                                       (:reference 1
                                                        :constant-flag t
                                                        :type ("A3" type (:type "class") nil nil))
                                                        (reparse-symbol arg-sub-list) [18546 18559])
                                                    ("a4" variable
                                                       (:reference 1
                                                        :constant-flag t
                                                        :type ("A4" type (:type "class") nil nil))
                                                        (reparse-symbol arg-sub-list) [18560 18573])
                                                    ("a5" variable
                                                       (:reference 1
                                                        :constant-flag t
                                                        :type ("A5" type (:type "class") nil nil))
                                                        (reparse-symbol arg-sub-list) [18592 18605])
                                                    ("a6" variable
                                                       (:reference 1
                                                        :constant-flag t
                                                        :type ("A6" type (:type "class") nil nil))
                                                        (reparse-symbol arg-sub-list) [18606 18619])
                                                    ("a7" variable
                                                       (:reference 1
                                                        :constant-flag t
                                                        :type ("A7" type (:type "class") nil nil))
                                                        (reparse-symbol arg-sub-list) [18620 18633])
                                                    ("a8" variable
                                                       (:reference 1
                                                        :constant-flag t
                                                        :type ("A8" type (:type "class") nil nil))
                                                        (reparse-symbol arg-sub-list) [18651 18664])
                                                    ("a9" variable
                                                       (:reference 1
                                                        :constant-flag t
                                                        :type ("A9" type (:type "class") nil nil))
                                                        (reparse-symbol arg-sub-list) [18665 18678]))                                                  
                                                :operator-flag t)
                                                (reparse-symbol classsubparts) [18390 18748]))                                          )
                                        (reparse-symbol namespacesubparts) [16546 18753])
                                    ("member_pointer_action_helper" type
                                       (:template 
                                          ( ("bool" type nil nil nil)
                                            ("bool" type nil nil nil))                                          
                                        :type "struct"
                                        :prototype t)
                                        (reparse-symbol namespacesubparts) [18900 18992])
                                    ("member_pointer_action_helper" type
                                       (:type "struct"
                                        :members 
                                          ( ("public" label nil (reparse-symbol classsubparts) [19250 19257])
                                            ("apply" function
                                               (:template 
                                                  ( ("RET" type (:type "class") nil nil)
                                                    ("A" type (:type "class") nil nil)
                                                    ("B" type (:type "class") nil nil))                                                  
                                                :type ("RET" type (:type "class") nil nil)
                                                :arguments 
                                                  ( ("a" variable
                                                       (:reference 1
                                                        :type ("A" type (:type "class") nil nil))
                                                        (reparse-symbol arg-sub-list) [19318 19323])
                                                    ("b" variable
                                                       (:reference 1
                                                        :type ("B" type (:type "class") nil nil))
                                                        (reparse-symbol arg-sub-list) [19324 19329]))                                                  
                                                :typemodifiers ("static"))
                                                (reparse-symbol classsubparts) [19261 19355])
                                            ("return_type" type
                                               (:template 
                                                  ( ("A" type (:type "class") nil nil)
                                                    ("B" type (:type "class") nil nil))                                                  
                                                :type "struct"
                                                :members 
                                                  ( ("private" label nil (reparse-symbol classsubparts) [19411 19419])
                                                    ("plainB" type
                                                       (:typedef ("detail::remove_reference_and_cv::type" type (:type "class") nil nil)
                                                        :superclasses "detail::remove_reference_and_cv::type"
                                                        :type "typedef")
                                                        (reparse-symbol classsubparts) [19424 19489])
                                                    ("type0" type
                                                       (:typedef ("detail::member_pointer::type" type (:type "class") nil nil)
                                                        :superclasses "detail::member_pointer::type"
                                                        :type "typedef")
                                                        (reparse-symbol classsubparts) [19495 19555])
                                                    ("type1" type
                                                       (:typedef ("boost::remove_reference::type" type (:type "class") nil nil)
                                                        :superclasses "boost::remove_reference::type"
                                                        :type "typedef")
                                                        (reparse-symbol classsubparts) [19624 19684])
                                                    ("non_ref_A" type
                                                       (:typedef ("detail::remove_reference_and_cv::type" type (:type "class") nil nil)
                                                        :superclasses "detail::remove_reference_and_cv::type"
                                                        :type "typedef")
                                                        (reparse-symbol classsubparts) [19781 19856])
                                                    ("non_pointer_A" variable (:type ("boost::remove_pointer::type" type (:type "class") nil nil)) (reparse-symbol classsubparts) [19937 19990])
                                                    ("public" label nil (reparse-symbol classsubparts) [19995 20002])
                                                    ("type2" variable (:type ("RET" type (:type "class") nil nil)) (reparse-symbol classsubparts) [20377 20387])
                                                    ("type3" variable (:type ("RET" type (:type "class") nil nil)) (reparse-symbol classsubparts) [20542 20552])
                                                    ("type" variable (:type ("boost::add_reference::type" type (:type "class") nil nil)) (reparse-symbol classsubparts) [20602 20641]))                                                  )
                                                (reparse-symbol classsubparts) [19359 20646]))                                          
                                        :template-specifier 
                                          ( ("true" type nil nil nil)
                                            ("false" type nil nil nil))                                          )
                                        (reparse-symbol namespacesubparts) [19187 20649])
                                    ("member_pointer_action_helper" type
                                       (:type "struct"
                                        :members 
                                          ( ("public" label nil (reparse-symbol classsubparts) [20733 20740])
                                            ("apply" function
                                               (:template 
                                                  ( ("RET" type (:type "class") nil nil)
                                                    ("A" type (:type "class") nil nil)
                                                    ("B" type (:type "class") nil nil))                                                  
                                                :type ("RET" type (:type "class") nil nil)
                                                :arguments 
                                                  ( ("a" variable
                                                       (:reference 1
                                                        :type ("A" type (:type "class") nil nil))
                                                        (reparse-symbol arg-sub-list) [20800 20805])
                                                    ("b" variable
                                                       (:reference 1
                                                        :type ("B" type (:type "class") nil nil))
                                                        (reparse-symbol arg-sub-list) [20806 20811]))                                                  
                                                :typemodifiers ("static"))
                                                (reparse-symbol classsubparts) [20743 20894])
                                            ("return_type" type
                                               (:template 
                                                  ( ("A" type (:type "class") nil nil)
                                                    ("B" type (:type "class") nil nil))                                                  
                                                :type "struct"
                                                :members 
                                                  ( ("type" variable (:type ("type" type (:type "class") nil nil)) (reparse-symbol classsubparts) [21257 21267]))                                                  )
                                                (reparse-symbol classsubparts) [21109 21272]))                                          
                                        :template-specifier 
                                          ( ("false" type nil nil nil)
                                            ("false" type nil nil nil))                                          )
                                        (reparse-symbol namespacesubparts) [20669 21278])
                                    ("member_pointer_action_helper" type
                                       (:type "struct"
                                        :members 
                                          ( ("public" label nil (reparse-symbol classsubparts) [21609 21616])
                                            ("apply" function
                                               (:template 
                                                  ( ("RET" type (:type "class") nil nil)
                                                    ("A" type (:type "class") nil nil)
                                                    ("B" type (:type "class") nil nil))                                                  
                                                :type ("RET" type (:type "class") nil nil)
                                                :arguments 
                                                  ( ("a" variable
                                                       (:reference 1
                                                        :type ("A" type (:type "class") nil nil))
                                                        (reparse-symbol arg-sub-list) [21677 21682])
                                                    ("b" variable
                                                       (:reference 1
                                                        :type ("B" type (:type "class") nil nil))
                                                        (reparse-symbol arg-sub-list) [21683 21688]))                                                  
                                                :typemodifiers ("static"))
                                                (reparse-symbol classsubparts) [21620 22131])
                                            ("return_type" type
                                               (:template 
                                                  ( ("A" type (:type "class") nil nil)
                                                    ("B" type (:type "class") nil nil))                                                  
                                                :type "struct"
                                                :members 
                                                  ( ("plainB" type
                                                       (:typedef ("detail::remove_reference_and_cv::type" type (:type "class") nil nil)
                                                        :superclasses "detail::remove_reference_and_cv::type"
                                                        :type "typedef")
                                                        (reparse-symbol classsubparts) [22189 22254])
                                                    ("ret_t" type
                                                       (:typedef ("detail::member_pointer::type" type (:type "class") nil nil)
                                                        :superclasses "detail::member_pointer::type"
                                                        :type "typedef")
                                                        (reparse-symbol classsubparts) [22259 22319])
                                                    ("plainA" type
                                                       (:typedef ("detail::remove_reference_and_cv::type" type (:type "class") nil nil)
                                                        :superclasses "detail::remove_reference_and_cv::type"
                                                        :type "typedef")
                                                        (reparse-symbol classsubparts) [22325 22390])
                                                    ("type" type
                                                       (:typedef ("detail::member_pointer_caller" type
                                                             (:template-specifier 
                                                                ( ("ret_t" type nil nil nil)
                                                                  ("plainA" type nil nil nil)
                                                                  ("plainB" type nil nil nil))                                                                
                                                              :type "class")
                                                              nil nil)
                                                        :superclasses "detail::member_pointer_caller"
                                                        :type "typedef")
                                                        (reparse-symbol classsubparts) [22397 22463]))                                                  )
                                                (reparse-symbol classsubparts) [22135 22469]))                                          
                                        :template-specifier 
                                          ( ("false" type nil nil nil)
                                            ("true" type nil nil nil))                                          )
                                        (reparse-symbol namespacesubparts) [21544 22472]))                                  
                                :type "namespace")
                                (reparse-symbol namespacesubparts) [15701 22475])
                            ("other_action" type
                               (:type "class"
                                :members 
                                  ( ("public" label nil (reparse-symbol classsubparts) [22543 22550])
                                    ("apply" function
                                       (:template 
                                          ( ("RET" type (:type "class") nil nil)
                                            ("A" type (:type "class") nil nil)
                                            ("B" type (:type "class") nil nil))                                          
                                        :type ("RET" type (:type "class") nil nil)
                                        :arguments 
                                          ( ("a" variable
                                               (:reference 1
                                                :type ("A" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [22610 22615])
                                            ("b" variable
                                               (:reference 1
                                                :type ("B" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [22616 22621]))                                          
                                        :typemodifiers ("static"))
                                        (reparse-symbol classsubparts) [22553 22979]))                                  
                                :template-specifier 
                                  ( ("member_pointer_action" type nil nil nil))                                  )
                                (reparse-symbol namespacesubparts) [22487 22982])
                            ("return_type_2" type
                               (:template 
                                  ( ("A" type (:type "class") nil nil)
                                    ("B" type (:type "class") nil nil))                                  
                                :type "struct"
                                :members 
                                  ( ("private" label nil (reparse-symbol classsubparts) [23705 23713])
                                    ("plainB" type
                                       (:typedef ("detail::remove_reference_and_cv::type" type (:type "class") nil nil)
                                        :superclasses "detail::remove_reference_and_cv::type"
                                        :type "typedef")
                                        (reparse-symbol classsubparts) [23716 23786])
                                    ("public" label nil (reparse-symbol classsubparts) [23787 23794])
                                    ("type" variable (:type ("type" type (:type "class") nil nil)) (reparse-symbol classsubparts) [24003 24013]))                                  
                                :template-specifier 
                                  ( ("other_action" type nil nil nil)
                                    ("A" type nil nil nil)
                                    ("B" type nil nil nil))                                  )
                                (reparse-symbol namespacesubparts) [23612 24017])
                            ("return_type_N" type
                               (:template 
                                  ( ("Args" type (:type "class") nil nil))                                  
                                :type "struct"
                                :members 
                                  ( ("A" type
                                       (:typedef ("boost::tuples::element::type" type (:type "class") nil nil)
                                        :superclasses "boost::tuples::element::type"
                                        :type "typedef")
                                        (reparse-symbol classsubparts) [24308 24365])
                                    ("B" type
                                       (:typedef ("boost::tuples::element::type" type (:type "class") nil nil)
                                        :superclasses "boost::tuples::element::type"
                                        :type "typedef")
                                        (reparse-symbol classsubparts) [24368 24425])
                                    ("type" variable (:type ("type" type (:type "class") nil nil)) (reparse-symbol classsubparts) [24644 24654]))                                  
                                :template-specifier 
                                  ( ("other_action" type nil nil nil)
                                    ("Args" type nil nil nil))                                  )
                                (reparse-symbol namespacesubparts) [24219 24657])
                            ("->*" function
                               (:operator-flag t
                                :arguments 
                                  ( ("a1" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("lambda_functor" type
                                             (:template-specifier 
                                                ( ("Arg1" type nil nil nil))                                                
                                              :type "class")
                                              nil nil))
                                        (reparse-symbol arg-sub-list) [24890 24921])
                                    ("a2" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("Arg2" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [24922 24937]))                                  
                                :type "int")
                                (reparse-symbol namespacesubparts) [24878 25222])
                            ("->*" function
                               (:template 
                                  ( ("Arg1" type (:type "class") nil nil)
                                    ("Arg2" type (:type "class") nil nil))                                  
                                :type ("lambda_functor" type
                                     (:template-specifier 
                                        ( ("lambda_functor_base" type nil nil nil))                                        
                                      :type "class")
                                      nil nil)
                                :arguments 
                                  ( ("a1" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("lambda_functor" type
                                             (:template-specifier 
                                                ( ("Arg1" type nil nil nil))                                                
                                              :type "class")
                                              nil nil))
                                        (reparse-symbol arg-sub-list) [25435 25466])
                                    ("a2" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("lambda_functor" type
                                             (:template-specifier 
                                                ( ("Arg2" type nil nil nil))                                                
                                              :type "class")
                                              nil nil))
                                        (reparse-symbol arg-sub-list) [25467 25498]))                                  
                                :constant-flag t
                                :typemodifiers ("inline")
                                :operator-flag t)
                                (reparse-symbol namespacesubparts) [25224 25729])
                            ("->*" function
                               (:operator-flag t
                                :arguments 
                                  ( ("a1" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("Arg1" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [25962 25977])
                                    ("a2" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("lambda_functor" type
                                             (:template-specifier 
                                                ( ("Arg2" type nil nil nil))                                                
                                              :type "class")
                                              nil nil))
                                        (reparse-symbol arg-sub-list) [25978 26009]))                                  
                                :type "int")
                                (reparse-symbol namespacesubparts) [25950 26296]))                          
                        :type "namespace")
                        (reparse-symbol namespacesubparts) [574 26300]))                  
                :type "namespace")
                nil [555 26323]))          
    :file "member_ptr.hpp"
    :pointmax 26358
    :fsize 26357
    :lastmodtime '(17765 48449)
    :unmatched-syntax '((punctuation 25948 . 25949) (punctuation 25946 . 25947) (punctuation 25942 . 25943) (punctuation 25940 . 25941) (symbol 25936 . 25940) (punctuation 25935 . 25936) (symbol 25921 . 25935) (punctuation 25919 . 25920) (symbol 25915 . 25919) (punctuation 25914 . 25915) (punctuation 25913 . 25914) (punctuation 25912 . 25913) (symbol 25908 . 25912) (punctuation 25907 . 25908) (symbol 25888 . 25907) (TYPENAME 25879 . 25887) (punctuation 25878 . 25879) (symbol 25873 . 25878) (punctuation 25867 . 25868) (punctuation 25866 . 25867) (punctuation 25864 . 25865) (symbol 25843 . 25864) (punctuation 25842 . 25843) (symbol 25830 . 25842) (punctuation 25828 . 25829) (number 25827 . 25828) (punctuation 25826 . 25827) (symbol 25820 . 25826) (punctuation 25814 . 25815) (symbol 25795 . 25814) (punctuation 25791 . 25792) (symbol 25777 . 25791) (CONST 25771 . 25776) (INLINE 25764 . 25770) (punctuation 25762 . 25763) (symbol 25758 . 25762) (CLASS 25752 . 25757) (punctuation 25750 . 25751) (symbol 25746 . 25750) (CLASS 25740 . 25745) (punctuation 25739 . 25740) (TEMPLATE 25731 . 25739) (punctuation 24876 . 24877) (punctuation 24874 . 24875) (punctuation 24870 . 24871) (symbol 24866 . 24870) (punctuation 24865 . 24866) (punctuation 24864 . 24865) (punctuation 24863 . 24864) (symbol 24859 . 24863) (punctuation 24858 . 24859) (symbol 24839 . 24858) (TYPENAME 24830 . 24838) (punctuation 24828 . 24829) (punctuation 24827 . 24828) (symbol 24823 . 24827) (punctuation 24822 . 24823) (symbol 24808 . 24822) (punctuation 24807 . 24808) (symbol 24802 . 24807) (punctuation 24796 . 24797) (punctuation 24795 . 24796) (punctuation 24793 . 24794) (symbol 24772 . 24793) (punctuation 24771 . 24772) (symbol 24759 . 24771) (punctuation 24757 . 24758) (number 24756 . 24757) (punctuation 24755 . 24756) (symbol 24749 . 24755) (punctuation 24743 . 24744) (symbol 24724 . 24743) (punctuation 24720 . 24721) (symbol 24706 . 24720) (CONST 24700 . 24705) (INLINE 24693 . 24699) (punctuation 24691 . 24692) (symbol 24687 . 24691) (CLASS 24681 . 24686) (punctuation 24679 . 24680) (symbol 24675 . 24679) (CLASS 24669 . 24674) (punctuation 24668 . 24669) (TEMPLATE 24660 . 24668) (punctuation 24643 . 24644) (punctuation 24642 . 24643) (punctuation 24641 . 24642) (symbol 24619 . 24623) (punctuation 24618 . 24619) (punctuation 24617 . 24618) (punctuation 24616 . 24617) (symbol 24615 . 24616) (punctuation 24614 . 24615) (symbol 24598 . 24614) (punctuation 24597 . 24598) (punctuation 24596 . 24597) (symbol 24591 . 24596) (TYPENAME 24582 . 24590) (punctuation 24561 . 24562) (symbol 24557 . 24561) (punctuation 24556 . 24557) (punctuation 24555 . 24556) (punctuation 24554 . 24555) (symbol 24553 . 24554) (punctuation 24552 . 24553) (symbol 24536 . 24552) (punctuation 24535 . 24536) (punctuation 24534 . 24535) (symbol 24529 . 24534) (TYPENAME 24520 . 24528) (punctuation 24499 . 24500) (punctuation 24498 . 24499) (symbol 24477 . 24498) (punctuation 24476 . 24477) (symbol 24464 . 24476) (punctuation 24463 . 24464) (symbol 24450 . 24463) (TYPENAME 24436 . 24444) (TYPEDEF 24428 . 24435) (punctuation 24002 . 24003) (punctuation 24001 . 24002) (punctuation 24000 . 24001) (symbol 23999 . 24000) (punctuation 23997 . 23998) (symbol 23996 . 23997) (punctuation 23995 . 23996) (symbol 23984 . 23995) (TEMPLATE 23975 . 23983) (punctuation 23974 . 23975) (punctuation 23973 . 23974) (punctuation 23972 . 23973) (symbol 23949 . 23967) (punctuation 23948 . 23949) (punctuation 23947 . 23948) (punctuation 23946 . 23947) (symbol 23940 . 23946) (punctuation 23939 . 23940) (symbol 23925 . 23939) (punctuation 23924 . 23925) (punctuation 23923 . 23924) (symbol 23917 . 23923) (punctuation 23909 . 23910) (symbol 23895 . 23909) (punctuation 23894 . 23895) (punctuation 23893 . 23894) (punctuation 23892 . 23893) (symbol 23886 . 23892) (punctuation 23885 . 23886) (symbol 23871 . 23885) (punctuation 23870 . 23871) (punctuation 23869 . 23870) (symbol 23863 . 23869) (punctuation 23855 . 23856) (symbol 23827 . 23855) (punctuation 23826 . 23827) (punctuation 23825 . 23826) (symbol 23819 . 23825) (TYPENAME 23805 . 23813) (TYPEDEF 23797 . 23804) (punctuation 21256 . 21257) (punctuation 21255 . 21256) (punctuation 21254 . 21255) (symbol 21248 . 21249) (punctuation 21246 . 21247) (symbol 21245 . 21246) (punctuation 21243 . 21244) (punctuation 21242 . 21243) (symbol 21221 . 21242) (punctuation 21220 . 21221) (symbol 21208 . 21220) (punctuation 21200 . 21201) (symbol 21181 . 21200) (TYPENAME 21172 . 21180) (TYPEDEF 21164 . 21171) (punctuation 20601 . 20602) (punctuation 20600 . 20601) (TYPENAME 20591 . 20599) (TYPEDEF 20583 . 20590) (punctuation 20541 . 20542) (punctuation 20540 . 20541) (punctuation 20539 . 20540) (symbol 20529 . 20534) (punctuation 20521 . 20522) (symbol 20517 . 20521) (punctuation 20516 . 20517) (punctuation 20515 . 20516) (punctuation 20514 . 20515) (symbol 20509 . 20514) (punctuation 20508 . 20509) (symbol 20496 . 20508) (punctuation 20495 . 20496) (punctuation 20494 . 20495) (symbol 20489 . 20494) (punctuation 20488 . 20489) (punctuation 20487 . 20488) (TYPENAME 20478 . 20486) (punctuation 20469 . 20470) (symbol 20464 . 20469) (punctuation 20463 . 20464) (punctuation 20462 . 20463) (punctuation 20461 . 20462) (symbol 20448 . 20461) (punctuation 20447 . 20448) (symbol 20436 . 20447) (punctuation 20435 . 20436) (punctuation 20434 . 20435) (symbol 20429 . 20434) (punctuation 20428 . 20429) (punctuation 20427 . 20428) (punctuation 20419 . 20420) (symbol 20417 . 20419) (punctuation 20416 . 20417) (punctuation 20415 . 20416) (symbol 20409 . 20415) (TYPENAME 20400 . 20408) (TYPEDEF 20392 . 20399) (punctuation 20376 . 20377) (punctuation 20375 . 20376) (punctuation 20374 . 20375) (symbol 20364 . 20369) (punctuation 20356 . 20357) (symbol 20352 . 20356) (punctuation 20351 . 20352) (punctuation 20350 . 20351) (punctuation 20349 . 20350) (symbol 20344 . 20349) (punctuation 20343 . 20344) (symbol 20334 . 20343) (punctuation 20333 . 20334) (punctuation 20332 . 20333) (symbol 20327 . 20332) (punctuation 20326 . 20327) (punctuation 20325 . 20326) (TYPENAME 20316 . 20324) (punctuation 20307 . 20308) (symbol 20302 . 20307) (punctuation 20301 . 20302) (punctuation 20300 . 20301) (punctuation 20299 . 20300) (symbol 20286 . 20299) (punctuation 20285 . 20286) (symbol 20277 . 20285) (punctuation 20276 . 20277) (punctuation 20275 . 20276) (symbol 20270 . 20275) (punctuation 20269 . 20270) (punctuation 20268 . 20269) (punctuation 20260 . 20261) (symbol 20258 . 20260) (punctuation 20257 . 20258) (punctuation 20256 . 20257) (symbol 20250 . 20256) (TYPENAME 20241 . 20249) (TYPEDEF 20233 . 20240) (punctuation 19936 . 19937) (punctuation 19935 . 19936) (TYPENAME 19926 . 19934) (TYPEDEF 19918 . 19925) (punctuation 15685 . 15686) (semantic-list 15478 . 15685) (punctuation 15476 . 15477) (VOLATILE 15468 . 15476) (CONST 15462 . 15467) (punctuation 15423 . 15424) (punctuation 15422 . 15423) (punctuation 15421 . 15422) (punctuation 15416 . 15417) (symbol 15402 . 15416) (STRUCT 15395 . 15401) (punctuation 15393 . 15394) (symbol 15391 . 15393) (CLASS 15385 . 15390) (punctuation 15383 . 15384) (symbol 15381 . 15383) (CLASS 15375 . 15380) (punctuation 15373 . 15374) (symbol 15371 . 15373) (CLASS 15365 . 15370) (punctuation 15363 . 15364) (symbol 15361 . 15363) (CLASS 15355 . 15360) (punctuation 15344 . 15345) (symbol 15342 . 15344) (CLASS 15336 . 15341) (punctuation 15334 . 15335) (symbol 15332 . 15334) (CLASS 15326 . 15331) (punctuation 15324 . 15325) (symbol 15322 . 15324) (CLASS 15316 . 15321) (punctuation 15314 . 15315) (symbol 15312 . 15314) (CLASS 15306 . 15311) (punctuation 15304 . 15305) (symbol 15302 . 15304) (CLASS 15296 . 15301) (punctuation 15294 . 15295) (symbol 15293 . 15294) (CLASS 15287 . 15292) (punctuation 15285 . 15286) (symbol 15284 . 15285) (CLASS 15278 . 15283) (punctuation 15277 . 15278) (TEMPLATE 15269 . 15277) (punctuation 15267 . 15268) (semantic-list 15060 . 15267) (punctuation 15058 . 15059) (VOLATILE 15050 . 15058) (CONST 15044 . 15049) (punctuation 15009 . 15010) (punctuation 15008 . 15009) (punctuation 15007 . 15008) (punctuation 15002 . 15003) (symbol 14988 . 15002) (STRUCT 14981 . 14987) (punctuation 14979 . 14980) (symbol 14977 . 14979) (CLASS 14971 . 14976) (punctuation 14969 . 14970) (symbol 14967 . 14969) (CLASS 14961 . 14966) (punctuation 14959 . 14960) (symbol 14957 . 14959) (CLASS 14951 . 14956) (punctuation 14940 . 14941) (symbol 14938 . 14940) (CLASS 14932 . 14937) (punctuation 14930 . 14931) (symbol 14928 . 14930) (CLASS 14922 . 14927) (punctuation 14920 . 14921) (symbol 14918 . 14920) (CLASS 14912 . 14917) (punctuation 14910 . 14911) (symbol 14908 . 14910) (CLASS 14902 . 14907) (punctuation 14900 . 14901) (symbol 14898 . 14900) (CLASS 14892 . 14897) (punctuation 14890 . 14891) (symbol 14889 . 14890) (CLASS 14883 . 14888) (punctuation 14881 . 14882) (symbol 14880 . 14881) (CLASS 14874 . 14879) (punctuation 14873 . 14874) (TEMPLATE 14865 . 14873) (punctuation 14863 . 14864) (semantic-list 14656 . 14863) (punctuation 14654 . 14655) (VOLATILE 14646 . 14654) (CONST 14640 . 14645) (punctuation 14609 . 14610) (punctuation 14608 . 14609) (punctuation 14607 . 14608) (punctuation 14602 . 14603) (symbol 14588 . 14602) (STRUCT 14581 . 14587) (punctuation 14579 . 14580) (symbol 14577 . 14579) (CLASS 14571 . 14576) (punctuation 14569 . 14570) (symbol 14567 . 14569) (CLASS 14561 . 14566) (punctuation 14550 . 14551) (symbol 14548 . 14550) (CLASS 14542 . 14547) (punctuation 14540 . 14541) (symbol 14538 . 14540) (CLASS 14532 . 14537) (punctuation 14530 . 14531) (symbol 14528 . 14530) (CLASS 14522 . 14527) (punctuation 14520 . 14521) (symbol 14518 . 14520) (CLASS 14512 . 14517) (punctuation 14510 . 14511) (symbol 14508 . 14510) (CLASS 14502 . 14507) (punctuation 14500 . 14501) (symbol 14499 . 14500) (CLASS 14493 . 14498) (punctuation 14491 . 14492) (symbol 14490 . 14491) (CLASS 14484 . 14489) (punctuation 14483 . 14484) (TEMPLATE 14475 . 14483) (punctuation 14473 . 14474) (semantic-list 14266 . 14473) (punctuation 14264 . 14265) (VOLATILE 14256 . 14264) (CONST 14250 . 14255) (punctuation 14223 . 14224) (punctuation 14222 . 14223) (punctuation 14221 . 14222) (punctuation 14216 . 14217) (symbol 14202 . 14216) (STRUCT 14195 . 14201) (punctuation 14193 . 14194) (symbol 14191 . 14193) (CLASS 14185 . 14190) (punctuation 14174 . 14175) (symbol 14172 . 14174) (CLASS 14166 . 14171) (punctuation 14164 . 14165) (symbol 14162 . 14164) (CLASS 14156 . 14161) (punctuation 14154 . 14155) (symbol 14152 . 14154) (CLASS 14146 . 14151) (punctuation 14144 . 14145) (symbol 14142 . 14144) (CLASS 14136 . 14141) (punctuation 14134 . 14135) (symbol 14132 . 14134) (CLASS 14126 . 14131) (punctuation 14124 . 14125) (symbol 14123 . 14124) (CLASS 14117 . 14122) (punctuation 14115 . 14116) (symbol 14114 . 14115) (CLASS 14108 . 14113) (punctuation 14107 . 14108) (TEMPLATE 14099 . 14107) (punctuation 14097 . 14098) (semantic-list 13890 . 14097) (punctuation 13888 . 13889) (VOLATILE 13880 . 13888) (CONST 13874 . 13879) (punctuation 13851 . 13852) (punctuation 13850 . 13851) (punctuation 13849 . 13850) (punctuation 13844 . 13845) (symbol 13830 . 13844) (STRUCT 13823 . 13829) (punctuation 13821 . 13822) (symbol 13819 . 13821) (CLASS 13813 . 13818) (punctuation 13811 . 13812) (symbol 13809 . 13811) (CLASS 13803 . 13808) (punctuation 13801 . 13802) (symbol 13799 . 13801) (CLASS 13793 . 13798) (punctuation 13791 . 13792) (symbol 13789 . 13791) (CLASS 13783 . 13788) (punctuation 13781 . 13782) (symbol 13779 . 13781) (CLASS 13773 . 13778) (punctuation 13771 . 13772) (symbol 13770 . 13771) (CLASS 13764 . 13769) (punctuation 13762 . 13763) (symbol 13761 . 13762) (CLASS 13755 . 13760) (punctuation 13754 . 13755) (TEMPLATE 13746 . 13754) (punctuation 13744 . 13745) (semantic-list 13650 . 13744) (punctuation 13648 . 13649) (VOLATILE 13640 . 13648) (CONST 13634 . 13639) (punctuation 13615 . 13616) (punctuation 13614 . 13615) (punctuation 13613 . 13614) (punctuation 13608 . 13609) (symbol 13594 . 13608) (STRUCT 13587 . 13593) (punctuation 13585 . 13586) (symbol 13583 . 13585) (CLASS 13577 . 13582) (punctuation 13575 . 13576) (symbol 13573 . 13575) (CLASS 13567 . 13572) (punctuation 13565 . 13566) (symbol 13563 . 13565) (CLASS 13557 . 13562) (punctuation 13555 . 13556) (symbol 13553 . 13555) (CLASS 13547 . 13552) (punctuation 13545 . 13546) (symbol 13544 . 13545) (CLASS 13538 . 13543) (punctuation 13536 . 13537) (symbol 13535 . 13536) (CLASS 13529 . 13534) (punctuation 13528 . 13529) (TEMPLATE 13520 . 13528) (punctuation 13518 . 13519) (semantic-list 13311 . 13518) (punctuation 13309 . 13310) (VOLATILE 13301 . 13309) (CONST 13295 . 13300) (punctuation 13280 . 13281) (punctuation 13279 . 13280) (punctuation 13278 . 13279) (punctuation 13273 . 13274) (symbol 13259 . 13273) (STRUCT 13252 . 13258) (punctuation 13250 . 13251) (symbol 13248 . 13250) (CLASS 13242 . 13247) (punctuation 13240 . 13241) (symbol 13238 . 13240) (CLASS 13232 . 13237) (punctuation 13230 . 13231) (symbol 13228 . 13230) (CLASS 13222 . 13227) (punctuation 13220 . 13221) (symbol 13219 . 13220) (CLASS 13213 . 13218) (punctuation 13211 . 13212) (symbol 13210 . 13211) (CLASS 13204 . 13209) (punctuation 13203 . 13204) (TEMPLATE 13195 . 13203) (punctuation 13193 . 13194) (semantic-list 12986 . 13193) (punctuation 12984 . 12985) (VOLATILE 12976 . 12984) (CONST 12970 . 12975) (punctuation 12959 . 12960) (punctuation 12958 . 12959) (punctuation 12957 . 12958) (punctuation 12952 . 12953) (symbol 12938 . 12952) (STRUCT 12931 . 12937) (punctuation 12929 . 12930) (symbol 12927 . 12929) (CLASS 12921 . 12926) (punctuation 12919 . 12920) (symbol 12917 . 12919) (CLASS 12911 . 12916) (punctuation 12909 . 12910) (symbol 12908 . 12909) (CLASS 12902 . 12907) (punctuation 12900 . 12901) (symbol 12899 . 12900) (CLASS 12893 . 12898) (punctuation 12892 . 12893) (TEMPLATE 12884 . 12892) (punctuation 12882 . 12883) (semantic-list 12675 . 12882) (punctuation 12673 . 12674) (VOLATILE 12665 . 12673) (CONST 12659 . 12664) (punctuation 12652 . 12653) (punctuation 12651 . 12652) (punctuation 12650 . 12651) (punctuation 12645 . 12646) (symbol 12631 . 12645) (STRUCT 12624 . 12630) (punctuation 12622 . 12623) (symbol 12620 . 12622) (CLASS 12614 . 12619) (punctuation 12612 . 12613) (symbol 12611 . 12612) (CLASS 12605 . 12610) (punctuation 12603 . 12604) (symbol 12602 . 12603) (CLASS 12596 . 12601) (punctuation 12595 . 12596) (TEMPLATE 12587 . 12595) (punctuation 12585 . 12586) (semantic-list 12378 . 12585) (punctuation 12376 . 12377) (VOLATILE 12368 . 12376) (CONST 12362 . 12367) (punctuation 12357 . 12358) (punctuation 12356 . 12357) (punctuation 12355 . 12356) (punctuation 12350 . 12351) (symbol 12336 . 12350) (STRUCT 12329 . 12335) (punctuation 12327 . 12328) (symbol 12326 . 12327) (CLASS 12320 . 12325) (punctuation 12318 . 12319) (symbol 12317 . 12318) (CLASS 12311 . 12316) (punctuation 12310 . 12311) (TEMPLATE 12302 . 12310) (punctuation 12277 . 12278) (semantic-list 12076 . 12277) (punctuation 12074 . 12075) (VOLATILE 12066 . 12074) (punctuation 12027 . 12028) (punctuation 12026 . 12027) (punctuation 12025 . 12026) (punctuation 12020 . 12021) (symbol 12006 . 12020) (STRUCT 11999 . 12005) (punctuation 11997 . 11998) (symbol 11995 . 11997) (CLASS 11989 . 11994) (punctuation 11987 . 11988) (symbol 11985 . 11987) (CLASS 11979 . 11984) (punctuation 11977 . 11978) (symbol 11975 . 11977) (CLASS 11969 . 11974) (punctuation 11967 . 11968) (symbol 11965 . 11967) (CLASS 11959 . 11964) (punctuation 11948 . 11949) (symbol 11946 . 11948) (CLASS 11940 . 11945) (punctuation 11938 . 11939) (symbol 11936 . 11938) (CLASS 11930 . 11935) (punctuation 11928 . 11929) (symbol 11926 . 11928) (CLASS 11920 . 11925) (punctuation 11918 . 11919) (symbol 11916 . 11918) (CLASS 11910 . 11915) (punctuation 11908 . 11909) (symbol 11906 . 11908) (CLASS 11900 . 11905) (punctuation 11898 . 11899) (symbol 11897 . 11898) (CLASS 11891 . 11896) (punctuation 11889 . 11890) (symbol 11888 . 11889) (CLASS 11882 . 11887) (punctuation 11881 . 11882) (TEMPLATE 11873 . 11881) (punctuation 11871 . 11872) (semantic-list 11670 . 11871) (punctuation 11668 . 11669) (VOLATILE 11660 . 11668) (punctuation 11625 . 11626) (punctuation 11624 . 11625) (punctuation 11623 . 11624) (punctuation 11618 . 11619) (symbol 11604 . 11618) (STRUCT 11597 . 11603) (punctuation 11595 . 11596) (symbol 11593 . 11595) (CLASS 11587 . 11592) (punctuation 11585 . 11586) (symbol 11583 . 11585) (CLASS 11577 . 11582) (punctuation 11575 . 11576) (symbol 11573 . 11575) (CLASS 11567 . 11572) (punctuation 11556 . 11557) (symbol 11554 . 11556) (CLASS 11548 . 11553) (punctuation 11546 . 11547) (symbol 11544 . 11546) (CLASS 11538 . 11543) (punctuation 11536 . 11537) (symbol 11534 . 11536) (CLASS 11528 . 11533) (punctuation 11526 . 11527) (symbol 11524 . 11526) (CLASS 11518 . 11523) (punctuation 11516 . 11517) (symbol 11514 . 11516) (CLASS 11508 . 11513) (punctuation 11506 . 11507) (symbol 11505 . 11506) (CLASS 11499 . 11504) (punctuation 11497 . 11498) (symbol 11496 . 11497) (CLASS 11490 . 11495) (punctuation 11489 . 11490) (TEMPLATE 11481 . 11489) (punctuation 11479 . 11480) (semantic-list 11278 . 11479) (punctuation 11276 . 11277) (VOLATILE 11268 . 11276) (punctuation 11237 . 11238) (punctuation 11236 . 11237) (punctuation 11235 . 11236) (punctuation 11230 . 11231) (symbol 11216 . 11230) (STRUCT 11209 . 11215) (punctuation 11207 . 11208) (symbol 11205 . 11207) (CLASS 11199 . 11204) (punctuation 11197 . 11198) (symbol 11195 . 11197) (CLASS 11189 . 11194) (punctuation 11178 . 11179) (symbol 11176 . 11178) (CLASS 11170 . 11175) (punctuation 11168 . 11169) (symbol 11166 . 11168) (CLASS 11160 . 11165) (punctuation 11158 . 11159) (symbol 11156 . 11158) (CLASS 11150 . 11155) (punctuation 11148 . 11149) (symbol 11146 . 11148) (CLASS 11140 . 11145) (punctuation 11138 . 11139) (symbol 11136 . 11138) (CLASS 11130 . 11135) (punctuation 11128 . 11129) (symbol 11127 . 11128) (CLASS 11121 . 11126) (punctuation 11119 . 11120) (symbol 11118 . 11119) (CLASS 11112 . 11117) (punctuation 11111 . 11112) (TEMPLATE 11103 . 11111) (punctuation 11101 . 11102) (semantic-list 10900 . 11101) (punctuation 10898 . 10899) (VOLATILE 10890 . 10898) (punctuation 10863 . 10864) (punctuation 10862 . 10863) (punctuation 10861 . 10862) (punctuation 10856 . 10857) (symbol 10842 . 10856) (STRUCT 10835 . 10841) (punctuation 10833 . 10834) (symbol 10831 . 10833) (CLASS 10825 . 10830) (punctuation 10814 . 10815) (symbol 10812 . 10814) (CLASS 10806 . 10811) (punctuation 10804 . 10805) (symbol 10802 . 10804) (CLASS 10796 . 10801) (punctuation 10794 . 10795) (symbol 10792 . 10794) (CLASS 10786 . 10791) (punctuation 10784 . 10785) (symbol 10782 . 10784) (CLASS 10776 . 10781) (punctuation 10774 . 10775) (symbol 10772 . 10774) (CLASS 10766 . 10771) (punctuation 10764 . 10765) (symbol 10763 . 10764) (CLASS 10757 . 10762) (punctuation 10755 . 10756) (symbol 10754 . 10755) (CLASS 10748 . 10753) (punctuation 10747 . 10748) (TEMPLATE 10739 . 10747) (punctuation 10737 . 10738) (semantic-list 10536 . 10737) (punctuation 10534 . 10535) (VOLATILE 10526 . 10534) (punctuation 10503 . 10504) (punctuation 10502 . 10503) (punctuation 10501 . 10502) (punctuation 10496 . 10497) (symbol 10482 . 10496) (STRUCT 10475 . 10481) (punctuation 10473 . 10474) (symbol 10471 . 10473) (CLASS 10465 . 10470) (punctuation 10463 . 10464) (symbol 10461 . 10463) (CLASS 10455 . 10460) (punctuation 10453 . 10454) (symbol 10451 . 10453) (CLASS 10445 . 10450) (punctuation 10443 . 10444) (symbol 10441 . 10443) (CLASS 10435 . 10440) (punctuation 10433 . 10434) (symbol 10431 . 10433) (CLASS 10425 . 10430) (punctuation 10423 . 10424) (symbol 10422 . 10423) (CLASS 10416 . 10421) (punctuation 10414 . 10415) (symbol 10413 . 10414) (CLASS 10407 . 10412) (punctuation 10406 . 10407) (TEMPLATE 10398 . 10406) (punctuation 10396 . 10397) (semantic-list 10195 . 10396) (punctuation 10193 . 10194) (VOLATILE 10185 . 10193) (punctuation 10166 . 10167) (punctuation 10165 . 10166) (punctuation 10164 . 10165) (punctuation 10159 . 10160) (symbol 10145 . 10159) (STRUCT 10138 . 10144) (punctuation 10136 . 10137) (symbol 10134 . 10136) (CLASS 10128 . 10133) (punctuation 10126 . 10127) (symbol 10124 . 10126) (CLASS 10118 . 10123) (punctuation 10116 . 10117) (symbol 10114 . 10116) (CLASS 10108 . 10113) (punctuation 10106 . 10107) (symbol 10104 . 10106) (CLASS 10098 . 10103) (punctuation 10096 . 10097) (symbol 10095 . 10096) (CLASS 10089 . 10094) (punctuation 10087 . 10088) (symbol 10086 . 10087) (CLASS 10080 . 10085) (punctuation 10079 . 10080) (TEMPLATE 10071 . 10079) (punctuation 10069 . 10070) (semantic-list 9868 . 10069) (punctuation 9866 . 9867) (VOLATILE 9858 . 9866) (punctuation 9843 . 9844) (punctuation 9842 . 9843) (punctuation 9841 . 9842) (punctuation 9836 . 9837) (symbol 9822 . 9836) (STRUCT 9815 . 9821) (punctuation 9813 . 9814) (symbol 9811 . 9813) (CLASS 9805 . 9810) (punctuation 9803 . 9804) (symbol 9801 . 9803) (CLASS 9795 . 9800) (punctuation 9793 . 9794) (symbol 9791 . 9793) (CLASS 9785 . 9790) (punctuation 9783 . 9784) (symbol 9782 . 9783) (CLASS 9776 . 9781) (punctuation 9774 . 9775) (symbol 9773 . 9774) (CLASS 9767 . 9772) (punctuation 9766 . 9767) (TEMPLATE 9758 . 9766) (punctuation 9756 . 9757) (semantic-list 9555 . 9756) (punctuation 9553 . 9554) (VOLATILE 9545 . 9553) (punctuation 9534 . 9535) (punctuation 9533 . 9534) (punctuation 9532 . 9533) (punctuation 9527 . 9528) (symbol 9513 . 9527) (STRUCT 9506 . 9512) (punctuation 9504 . 9505) (symbol 9502 . 9504) (CLASS 9496 . 9501) (punctuation 9494 . 9495) (symbol 9492 . 9494) (CLASS 9486 . 9491) (punctuation 9484 . 9485) (symbol 9483 . 9484) (CLASS 9477 . 9482) (punctuation 9475 . 9476) (symbol 9474 . 9475) (CLASS 9468 . 9473) (punctuation 9467 . 9468) (TEMPLATE 9459 . 9467) (punctuation 9457 . 9458) (semantic-list 9256 . 9457) (punctuation 9254 . 9255) (VOLATILE 9246 . 9254) (punctuation 9239 . 9240) (punctuation 9238 . 9239) (punctuation 9237 . 9238) (punctuation 9232 . 9233) (symbol 9218 . 9232) (STRUCT 9211 . 9217) (punctuation 9209 . 9210) (symbol 9207 . 9209) (CLASS 9201 . 9206) (punctuation 9199 . 9200) (symbol 9198 . 9199) (CLASS 9192 . 9197) (punctuation 9190 . 9191) (symbol 9189 . 9190) (CLASS 9183 . 9188) (punctuation 9182 . 9183) (TEMPLATE 9174 . 9182) (punctuation 9172 . 9173) (semantic-list 8971 . 9172) (punctuation 8969 . 8970) (VOLATILE 8961 . 8969) (punctuation 8956 . 8957) (punctuation 8955 . 8956) (punctuation 8954 . 8955) (punctuation 8949 . 8950) (symbol 8935 . 8949) (STRUCT 8928 . 8934) (punctuation 8926 . 8927) (symbol 8925 . 8926) (CLASS 8919 . 8924) (punctuation 8917 . 8918) (symbol 8916 . 8917) (CLASS 8910 . 8915) (punctuation 8909 . 8910) (TEMPLATE 8901 . 8909) (punctuation 8879 . 8880) (semantic-list 8681 . 8879) (punctuation 8679 . 8680) (CONST 8674 . 8679) (punctuation 8635 . 8636) (punctuation 8634 . 8635) (punctuation 8633 . 8634) (punctuation 8628 . 8629) (symbol 8614 . 8628) (STRUCT 8607 . 8613) (punctuation 8605 . 8606) (symbol 8603 . 8605) (CLASS 8597 . 8602) (punctuation 8595 . 8596) (symbol 8593 . 8595) (CLASS 8587 . 8592) (punctuation 8585 . 8586) (symbol 8583 . 8585) (CLASS 8577 . 8582) (punctuation 8575 . 8576) (symbol 8573 . 8575) (CLASS 8567 . 8572) (punctuation 8556 . 8557) (symbol 8554 . 8556) (CLASS 8548 . 8553) (punctuation 8546 . 8547) (symbol 8544 . 8546) (CLASS 8538 . 8543) (punctuation 8536 . 8537) (symbol 8534 . 8536) (CLASS 8528 . 8533) (punctuation 8526 . 8527) (symbol 8524 . 8526) (CLASS 8518 . 8523) (punctuation 8516 . 8517) (symbol 8514 . 8516) (CLASS 8508 . 8513) (punctuation 8506 . 8507) (symbol 8505 . 8506) (CLASS 8499 . 8504) (punctuation 8497 . 8498) (symbol 8496 . 8497) (CLASS 8490 . 8495) (punctuation 8489 . 8490) (TEMPLATE 8481 . 8489) (punctuation 8479 . 8480) (semantic-list 8281 . 8479) (punctuation 8279 . 8280) (CONST 8274 . 8279) (punctuation 8239 . 8240) (punctuation 8238 . 8239) (punctuation 8237 . 8238) (punctuation 8232 . 8233) (symbol 8218 . 8232) (STRUCT 8211 . 8217) (punctuation 8209 . 8210) (symbol 8207 . 8209) (CLASS 8201 . 8206) (punctuation 8199 . 8200) (symbol 8197 . 8199) (CLASS 8191 . 8196) (punctuation 8189 . 8190) (symbol 8187 . 8189) (CLASS 8181 . 8186) (punctuation 8170 . 8171) (symbol 8168 . 8170) (CLASS 8162 . 8167) (punctuation 8160 . 8161) (symbol 8158 . 8160) (CLASS 8152 . 8157) (punctuation 8150 . 8151) (symbol 8148 . 8150) (CLASS 8142 . 8147) (punctuation 8140 . 8141) (symbol 8138 . 8140) (CLASS 8132 . 8137) (punctuation 8130 . 8131) (symbol 8128 . 8130) (CLASS 8122 . 8127) (punctuation 8120 . 8121) (symbol 8119 . 8120) (CLASS 8113 . 8118) (punctuation 8111 . 8112) (symbol 8110 . 8111) (CLASS 8104 . 8109) (punctuation 8103 . 8104) (TEMPLATE 8095 . 8103) (punctuation 8093 . 8094) (semantic-list 7895 . 8093) (punctuation 7893 . 7894) (CONST 7888 . 7893) (punctuation 7857 . 7858) (punctuation 7856 . 7857) (punctuation 7855 . 7856) (punctuation 7850 . 7851) (symbol 7836 . 7850) (STRUCT 7829 . 7835) (punctuation 7827 . 7828) (symbol 7825 . 7827) (CLASS 7819 . 7824) (punctuation 7817 . 7818) (symbol 7815 . 7817) (CLASS 7809 . 7814) (punctuation 7798 . 7799) (symbol 7796 . 7798) (CLASS 7790 . 7795) (punctuation 7788 . 7789) (symbol 7786 . 7788) (CLASS 7780 . 7785) (punctuation 7778 . 7779) (symbol 7776 . 7778) (CLASS 7770 . 7775) (punctuation 7768 . 7769) (symbol 7766 . 7768) (CLASS 7760 . 7765) (punctuation 7758 . 7759) (symbol 7756 . 7758) (CLASS 7750 . 7755) (punctuation 7748 . 7749) (symbol 7747 . 7748) (CLASS 7741 . 7746) (punctuation 7739 . 7740) (symbol 7738 . 7739) (CLASS 7732 . 7737) (punctuation 7731 . 7732) (TEMPLATE 7723 . 7731) (punctuation 7721 . 7722) (semantic-list 7523 . 7721) (punctuation 7521 . 7522) (CONST 7516 . 7521) (punctuation 7489 . 7490) (punctuation 7488 . 7489) (punctuation 7487 . 7488) (punctuation 7482 . 7483) (symbol 7468 . 7482) (STRUCT 7461 . 7467) (punctuation 7459 . 7460) (symbol 7457 . 7459) (CLASS 7451 . 7456) (punctuation 7440 . 7441) (symbol 7438 . 7440) (CLASS 7432 . 7437) (punctuation 7430 . 7431) (symbol 7428 . 7430) (CLASS 7422 . 7427) (punctuation 7420 . 7421) (symbol 7418 . 7420) (CLASS 7412 . 7417) (punctuation 7410 . 7411) (symbol 7408 . 7410) (CLASS 7402 . 7407) (punctuation 7400 . 7401) (symbol 7398 . 7400) (CLASS 7392 . 7397) (punctuation 7390 . 7391) (symbol 7389 . 7390) (CLASS 7383 . 7388) (punctuation 7381 . 7382) (symbol 7380 . 7381) (CLASS 7374 . 7379) (punctuation 7373 . 7374) (TEMPLATE 7365 . 7373) (punctuation 7363 . 7364) (semantic-list 7165 . 7363) (punctuation 7163 . 7164) (CONST 7158 . 7163) (punctuation 7135 . 7136) (punctuation 7134 . 7135) (punctuation 7133 . 7134) (punctuation 7128 . 7129) (symbol 7114 . 7128) (STRUCT 7107 . 7113) (punctuation 7105 . 7106) (symbol 7103 . 7105) (CLASS 7097 . 7102) (punctuation 7095 . 7096) (symbol 7093 . 7095) (CLASS 7087 . 7092) (punctuation 7085 . 7086) (symbol 7083 . 7085) (CLASS 7077 . 7082) (punctuation 7075 . 7076) (symbol 7073 . 7075) (CLASS 7067 . 7072) (punctuation 7065 . 7066) (symbol 7063 . 7065) (CLASS 7057 . 7062) (punctuation 7055 . 7056) (symbol 7054 . 7055) (CLASS 7048 . 7053) (punctuation 7046 . 7047) (symbol 7045 . 7046) (CLASS 7039 . 7044) (punctuation 7038 . 7039) (TEMPLATE 7030 . 7038) (punctuation 7028 . 7029) (semantic-list 6830 . 7028) (punctuation 6828 . 6829) (CONST 6823 . 6828) (punctuation 6804 . 6805) (punctuation 6803 . 6804) (punctuation 6802 . 6803) (punctuation 6797 . 6798) (symbol 6783 . 6797) (STRUCT 6776 . 6782) (punctuation 6774 . 6775) (symbol 6772 . 6774) (CLASS 6766 . 6771) (punctuation 6764 . 6765) (symbol 6762 . 6764) (CLASS 6756 . 6761) (punctuation 6754 . 6755) (symbol 6752 . 6754) (CLASS 6746 . 6751) (punctuation 6744 . 6745) (symbol 6742 . 6744) (CLASS 6736 . 6741) (punctuation 6734 . 6735) (symbol 6733 . 6734) (CLASS 6727 . 6732) (punctuation 6725 . 6726) (symbol 6724 . 6725) (CLASS 6718 . 6723) (punctuation 6717 . 6718) (TEMPLATE 6709 . 6717) (punctuation 6707 . 6708) (semantic-list 6509 . 6707) (punctuation 6507 . 6508) (CONST 6502 . 6507) (punctuation 6487 . 6488) (punctuation 6486 . 6487) (punctuation 6485 . 6486) (punctuation 6480 . 6481) (symbol 6466 . 6480) (STRUCT 6459 . 6465) (punctuation 6457 . 6458) (symbol 6455 . 6457) (CLASS 6449 . 6454) (punctuation 6447 . 6448) (symbol 6445 . 6447) (CLASS 6439 . 6444) (punctuation 6437 . 6438) (symbol 6435 . 6437) (CLASS 6429 . 6434) (punctuation 6427 . 6428) (symbol 6426 . 6427) (CLASS 6420 . 6425) (punctuation 6418 . 6419) (symbol 6417 . 6418) (CLASS 6411 . 6416) (punctuation 6410 . 6411) (TEMPLATE 6402 . 6410) (punctuation 6400 . 6401) (semantic-list 6202 . 6400) (punctuation 6200 . 6201) (CONST 6195 . 6200) (punctuation 6184 . 6185) (punctuation 6183 . 6184) (punctuation 6182 . 6183) (punctuation 6177 . 6178) (symbol 6163 . 6177) (STRUCT 6156 . 6162) (punctuation 6154 . 6155) (symbol 6152 . 6154) (CLASS 6146 . 6151) (punctuation 6144 . 6145) (symbol 6142 . 6144) (CLASS 6136 . 6141) (punctuation 6134 . 6135) (symbol 6133 . 6134) (CLASS 6127 . 6132) (punctuation 6125 . 6126) (symbol 6124 . 6125) (CLASS 6118 . 6123) (punctuation 6117 . 6118) (TEMPLATE 6109 . 6117) (punctuation 6107 . 6108) (semantic-list 5909 . 6107) (punctuation 5907 . 5908) (CONST 5902 . 5907) (punctuation 5895 . 5896) (punctuation 5894 . 5895) (punctuation 5893 . 5894) (punctuation 5888 . 5889) (symbol 5874 . 5888) (STRUCT 5867 . 5873) (punctuation 5865 . 5866) (symbol 5863 . 5865) (CLASS 5857 . 5862) (punctuation 5855 . 5856) (symbol 5854 . 5855) (CLASS 5848 . 5853) (punctuation 5846 . 5847) (symbol 5845 . 5846) (CLASS 5839 . 5844) (punctuation 5838 . 5839) (TEMPLATE 5830 . 5838) (punctuation 5828 . 5829) (semantic-list 5630 . 5828) (punctuation 5628 . 5629) (CONST 5623 . 5628) (punctuation 5618 . 5619) (punctuation 5617 . 5618) (punctuation 5616 . 5617) (punctuation 5611 . 5612) (symbol 5597 . 5611) (STRUCT 5590 . 5596) (punctuation 5588 . 5589) (symbol 5587 . 5588) (CLASS 5581 . 5586) (punctuation 5579 . 5580) (symbol 5578 . 5579) (CLASS 5572 . 5577) (punctuation 5571 . 5572) (TEMPLATE 5563 . 5571) (punctuation 5529 . 5530) (semantic-list 5337 . 5529) (punctuation 5335 . 5336) (punctuation 5297 . 5298) (punctuation 5296 . 5297) (punctuation 5295 . 5296) (punctuation 5290 . 5291) (symbol 5276 . 5290) (STRUCT 5269 . 5275) (punctuation 5267 . 5268) (symbol 5265 . 5267) (CLASS 5259 . 5264) (punctuation 5257 . 5258) (symbol 5255 . 5257) (CLASS 5249 . 5254) (punctuation 5247 . 5248) (symbol 5245 . 5247) (CLASS 5239 . 5244) (punctuation 5237 . 5238) (symbol 5235 . 5237) (CLASS 5229 . 5234) (punctuation 5218 . 5219) (symbol 5216 . 5218) (CLASS 5210 . 5215) (punctuation 5208 . 5209) (symbol 5206 . 5208) (CLASS 5200 . 5205) (punctuation 5198 . 5199) (symbol 5196 . 5198) (CLASS 5190 . 5195) (punctuation 5188 . 5189) (symbol 5186 . 5188) (CLASS 5180 . 5185) (punctuation 5178 . 5179) (symbol 5176 . 5178) (CLASS 5170 . 5175) (punctuation 5168 . 5169) (symbol 5167 . 5168) (CLASS 5161 . 5166) (punctuation 5159 . 5160) (symbol 5158 . 5159) (CLASS 5152 . 5157) (punctuation 5151 . 5152) (TEMPLATE 5143 . 5151) (punctuation 5141 . 5142) (semantic-list 4949 . 5141) (punctuation 4947 . 4948) (punctuation 4913 . 4914) (punctuation 4912 . 4913) (punctuation 4911 . 4912) (punctuation 4906 . 4907) (symbol 4892 . 4906) (STRUCT 4885 . 4891) (punctuation 4883 . 4884) (symbol 4881 . 4883) (CLASS 4875 . 4880) (punctuation 4873 . 4874) (symbol 4871 . 4873) (CLASS 4865 . 4870) (punctuation 4863 . 4864) (symbol 4861 . 4863) (CLASS 4855 . 4860) (punctuation 4844 . 4845) (symbol 4842 . 4844) (CLASS 4836 . 4841) (punctuation 4834 . 4835) (symbol 4832 . 4834) (CLASS 4826 . 4831) (punctuation 4824 . 4825) (symbol 4822 . 4824) (CLASS 4816 . 4821) (punctuation 4814 . 4815) (symbol 4812 . 4814) (CLASS 4806 . 4811) (punctuation 4804 . 4805) (symbol 4802 . 4804) (CLASS 4796 . 4801) (punctuation 4794 . 4795) (symbol 4793 . 4794) (CLASS 4787 . 4792) (punctuation 4785 . 4786) (symbol 4784 . 4785) (CLASS 4778 . 4783) (punctuation 4777 . 4778) (TEMPLATE 4769 . 4777) (punctuation 4767 . 4768) (semantic-list 4575 . 4767) (punctuation 4573 . 4574) (punctuation 4543 . 4544) (punctuation 4542 . 4543) (punctuation 4541 . 4542) (punctuation 4536 . 4537) (symbol 4522 . 4536) (STRUCT 4515 . 4521) (punctuation 4513 . 4514) (symbol 4511 . 4513) (CLASS 4505 . 4510) (punctuation 4503 . 4504) (symbol 4501 . 4503) (CLASS 4495 . 4500) (punctuation 4484 . 4485) (symbol 4482 . 4484) (CLASS 4476 . 4481) (punctuation 4474 . 4475) (symbol 4472 . 4474) (CLASS 4466 . 4471) (punctuation 4464 . 4465) (symbol 4462 . 4464) (CLASS 4456 . 4461) (punctuation 4454 . 4455) (symbol 4452 . 4454) (CLASS 4446 . 4451) (punctuation 4444 . 4445) (symbol 4442 . 4444) (CLASS 4436 . 4441) (punctuation 4434 . 4435) (symbol 4433 . 4434) (CLASS 4427 . 4432) (punctuation 4425 . 4426) (symbol 4424 . 4425) (CLASS 4418 . 4423) (punctuation 4417 . 4418) (TEMPLATE 4409 . 4417) (punctuation 4407 . 4408) (semantic-list 4215 . 4407) (punctuation 4213 . 4214) (punctuation 4187 . 4188) (punctuation 4186 . 4187) (punctuation 4185 . 4186) (punctuation 4180 . 4181) (symbol 4166 . 4180) (STRUCT 4159 . 4165) (punctuation 4157 . 4158) (symbol 4155 . 4157) (CLASS 4149 . 4154) (punctuation 4138 . 4139) (symbol 4136 . 4138) (CLASS 4130 . 4135) (punctuation 4128 . 4129) (symbol 4126 . 4128) (CLASS 4120 . 4125) (punctuation 4118 . 4119) (symbol 4116 . 4118) (CLASS 4110 . 4115) (punctuation 4108 . 4109) (symbol 4106 . 4108) (CLASS 4100 . 4105) (punctuation 4098 . 4099) (symbol 4096 . 4098) (CLASS 4090 . 4095) (punctuation 4088 . 4089) (symbol 4087 . 4088) (CLASS 4081 . 4086) (punctuation 4079 . 4080) (symbol 4078 . 4079) (CLASS 4072 . 4077) (punctuation 4071 . 4072) (TEMPLATE 4063 . 4071) (punctuation 4061 . 4062) (semantic-list 3869 . 4061) (punctuation 3867 . 3868) (punctuation 3845 . 3846) (punctuation 3844 . 3845) (punctuation 3843 . 3844) (punctuation 3838 . 3839) (symbol 3824 . 3838) (STRUCT 3817 . 3823) (punctuation 3815 . 3816) (symbol 3813 . 3815) (CLASS 3807 . 3812) (punctuation 3805 . 3806) (symbol 3803 . 3805) (CLASS 3797 . 3802) (punctuation 3795 . 3796) (symbol 3793 . 3795) (CLASS 3787 . 3792) (punctuation 3785 . 3786) (symbol 3783 . 3785) (CLASS 3777 . 3782) (punctuation 3775 . 3776) (symbol 3773 . 3775) (CLASS 3767 . 3772) (punctuation 3765 . 3766) (symbol 3764 . 3765) (CLASS 3758 . 3763) (punctuation 3756 . 3757) (symbol 3755 . 3756) (CLASS 3749 . 3754) (punctuation 3748 . 3749) (TEMPLATE 3740 . 3748) (punctuation 3738 . 3739) (semantic-list 3546 . 3738) (punctuation 3544 . 3545) (punctuation 3526 . 3527) (punctuation 3525 . 3526) (punctuation 3524 . 3525) (punctuation 3519 . 3520) (symbol 3505 . 3519) (STRUCT 3498 . 3504) (punctuation 3496 . 3497) (symbol 3494 . 3496) (CLASS 3488 . 3493) (punctuation 3486 . 3487) (symbol 3484 . 3486) (CLASS 3478 . 3483) (punctuation 3476 . 3477) (symbol 3474 . 3476) (CLASS 3468 . 3473) (punctuation 3466 . 3467) (symbol 3464 . 3466) (CLASS 3458 . 3463) (punctuation 3456 . 3457) (symbol 3455 . 3456) (CLASS 3449 . 3454) (punctuation 3447 . 3448) (symbol 3446 . 3447) (CLASS 3440 . 3445) (punctuation 3439 . 3440) (TEMPLATE 3431 . 3439) (punctuation 3429 . 3430) (semantic-list 3237 . 3429) (punctuation 3235 . 3236) (punctuation 3221 . 3222) (punctuation 3220 . 3221) (punctuation 3219 . 3220) (punctuation 3214 . 3215) (symbol 3200 . 3214) (STRUCT 3193 . 3199) (punctuation 3191 . 3192) (symbol 3189 . 3191) (CLASS 3183 . 3188) (punctuation 3181 . 3182) (symbol 3179 . 3181) (CLASS 3173 . 3178) (punctuation 3171 . 3172) (symbol 3169 . 3171) (CLASS 3163 . 3168) (punctuation 3161 . 3162) (symbol 3160 . 3161) (CLASS 3154 . 3159) (punctuation 3152 . 3153) (symbol 3151 . 3152) (CLASS 3145 . 3150) (punctuation 3144 . 3145) (TEMPLATE 3136 . 3144) (punctuation 3134 . 3135) (semantic-list 2942 . 3134) (punctuation 2940 . 2941) (punctuation 2930 . 2931) (punctuation 2929 . 2930) (punctuation 2928 . 2929) (punctuation 2923 . 2924) (symbol 2909 . 2923) (STRUCT 2902 . 2908) (punctuation 2900 . 2901) (symbol 2898 . 2900) (CLASS 2892 . 2897) (punctuation 2890 . 2891) (symbol 2888 . 2890) (CLASS 2882 . 2887) (punctuation 2880 . 2881) (symbol 2879 . 2880) (CLASS 2873 . 2878) (punctuation 2871 . 2872) (symbol 2870 . 2871) (CLASS 2864 . 2869) (punctuation 2863 . 2864) (TEMPLATE 2855 . 2863) (punctuation 2853 . 2854) (semantic-list 2661 . 2853) (punctuation 2659 . 2660) (punctuation 2653 . 2654) (punctuation 2652 . 2653) (punctuation 2651 . 2652) (punctuation 2646 . 2647) (symbol 2632 . 2646) (STRUCT 2625 . 2631) (punctuation 2623 . 2624) (symbol 2621 . 2623) (CLASS 2615 . 2620) (punctuation 2613 . 2614) (symbol 2612 . 2613) (CLASS 2606 . 2611) (punctuation 2604 . 2605) (symbol 2603 . 2604) (CLASS 2597 . 2602) (punctuation 2596 . 2597) (TEMPLATE 2588 . 2596) (punctuation 2586 . 2587) (semantic-list 2394 . 2586) (punctuation 2392 . 2393) (punctuation 2388 . 2389) (punctuation 2387 . 2388) (punctuation 2386 . 2387) (punctuation 2381 . 2382) (symbol 2367 . 2381) (STRUCT 2360 . 2366) (punctuation 2358 . 2359) (symbol 2357 . 2358) (CLASS 2351 . 2356) (punctuation 2349 . 2350) (symbol 2348 . 2349) (CLASS 2342 . 2347) (punctuation 2341 . 2342) (TEMPLATE 2333 . 2341) (punctuation 2295 . 2296) (semantic-list 2036 . 2295) (punctuation 2034 . 2035) (punctuation 2033 . 2034) (punctuation 2032 . 2033) (punctuation 2031 . 2032) (symbol 2030 . 2031) (symbol 2028 . 2029) (VOLATILE 2019 . 2027) (CONST 2013 . 2018) (punctuation 2012 . 2013) (symbol 1998 . 2012) (STRUCT 1991 . 1997) (punctuation 1989 . 1990) (symbol 1988 . 1989) (CLASS 1982 . 1987) (punctuation 1980 . 1981) (symbol 1979 . 1980) (CLASS 1973 . 1978) (punctuation 1972 . 1973) (TEMPLATE 1964 . 1972) (punctuation 1961 . 1962) (semantic-list 1714 . 1961) (punctuation 1712 . 1713) (punctuation 1711 . 1712) (punctuation 1710 . 1711) (punctuation 1709 . 1710) (symbol 1708 . 1709) (symbol 1706 . 1707) (VOLATILE 1697 . 1705) (punctuation 1696 . 1697) (symbol 1682 . 1696) (STRUCT 1675 . 1681) (punctuation 1673 . 1674) (symbol 1672 . 1673) (CLASS 1666 . 1671) (punctuation 1664 . 1665) (symbol 1663 . 1664) (CLASS 1657 . 1662) (punctuation 1656 . 1657) (TEMPLATE 1648 . 1656) (punctuation 1645 . 1646) (semantic-list 1404 . 1645) (punctuation 1402 . 1403) (punctuation 1401 . 1402) (punctuation 1400 . 1401) (punctuation 1399 . 1400) (symbol 1398 . 1399) (symbol 1396 . 1397) (CONST 1390 . 1395) (punctuation 1389 . 1390) (symbol 1375 . 1389) (STRUCT 1368 . 1374) (punctuation 1366 . 1367) (symbol 1365 . 1366) (CLASS 1359 . 1364) (punctuation 1357 . 1358) (symbol 1356 . 1357) (CLASS 1350 . 1355) (punctuation 1349 . 1350) (TEMPLATE 1341 . 1349) (punctuation 1338 . 1339) (semantic-list 1109 . 1338) (punctuation 1107 . 1108) (punctuation 1106 . 1107) (punctuation 1105 . 1106) (punctuation 1104 . 1105) (symbol 1103 . 1104) (symbol 1101 . 1102) (punctuation 1100 . 1101) (symbol 1086 . 1100) (STRUCT 1079 . 1085) (punctuation 1077 . 1078) (symbol 1076 . 1077) (CLASS 1070 . 1075) (punctuation 1068 . 1069) (symbol 1067 . 1068) (CLASS 1061 . 1066) (punctuation 1060 . 1061) (TEMPLATE 1052 . 1060) (punctuation 1038 . 1039) (punctuation 979 . 980))
    :lexical-table 
        '(("BOOST_LAMBDA_MEMBER_PTR_HPP")
          )

    )
   (semanticdb-table "bind_functions.hpp"
    :major-mode 'c++-mode
    :tags 
        '( ("BOOST_LAMBDA_BIND_FUNCTIONS_HPP" variable (:constant-flag t) nil [449 480])
            ("boost" type
               (:members 
                  ( ("lambda" type
                       (:members 
                          ( ("Result" function (:type "int") (reparse-symbol namespacesubparts) [1296 1307])
                            ("bind" function
                               (:arguments 
                                  ( ("" variable (:type ("Result" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1327 1339]))                                  
                                :type "int")
                                (reparse-symbol namespacesubparts) [1322 1570])
                            ("bind" function
                               (:arguments 
                                  ( ("a1" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("Arg1" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [1808 1823]))                                  
                                :type "int")
                                (reparse-symbol namespacesubparts) [1803 2041])
                            ("bind" function
                               (:arguments 
                                  ( ("a1" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("Arg1" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [2244 2259]))                                  
                                :type "int")
                                (reparse-symbol namespacesubparts) [2239 2485])
                            ("Result" function (:type "int") (reparse-symbol namespacesubparts) [4406 4421])
                            ("bind" function
                               (:arguments 
                                  ( ("" variable (:type ("Result" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4453 4464])
                                    ("a2" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("Arg2" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [4472 4487]))                                  
                                :type "int")
                                (reparse-symbol namespacesubparts) [4448 4751])
                            ("bind" function
                               (:arguments 
                                  ( ("a1" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("Arg1" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [5012 5027])
                                    ("a2" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("Arg2" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [5028 5043]))                                  
                                :type "int")
                                (reparse-symbol namespacesubparts) [5007 5289])
                            ("bind" function
                               (:arguments 
                                  ( ("a1" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("Arg1" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [5516 5531])
                                    ("a2" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("Arg2" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [5532 5547]))                                  
                                :type "int")
                                (reparse-symbol namespacesubparts) [5511 5801])
                            ("Result" function (:type "int") (reparse-symbol namespacesubparts) [7986 8007])
                            ("bind" function
                               (:arguments 
                                  ( ("" variable (:type ("Result" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [8056 8067])
                                    ("a2" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("Arg2" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [8081 8096])
                                    ("a3" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("Arg3" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [8097 8112]))                                  
                                :type "int")
                                (reparse-symbol namespacesubparts) [8051 8448])
                            ("bind" function
                               (:arguments 
                                  ( ("a1" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("Arg1" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [8746 8761])
                                    ("a2" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("Arg2" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [8762 8777])
                                    ("a3" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("Arg3" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [8778 8793]))                                  
                                :type "int")
                                (reparse-symbol namespacesubparts) [8741 9099])
                            ("bind" function
                               (:arguments 
                                  ( ("a1" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("Arg1" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [9362 9377])
                                    ("a2" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("Arg2" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [9378 9393])
                                    ("a3" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("Arg3" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [9394 9409]))                                  
                                :type "int")
                                (reparse-symbol namespacesubparts) [9357 9723])
                            ("Result" function (:type "int") (reparse-symbol namespacesubparts) [12258 12285])
                            ("bind" function
                               (:arguments 
                                  ( ("" variable (:type ("Result" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [12346 12357])
                                    ("a2" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("Arg2" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [12377 12392])
                                    ("a3" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("Arg3" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [12393 12408])
                                    ("a4" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("Arg4" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [12414 12429]))                                  
                                :type "int")
                                (reparse-symbol namespacesubparts) [12341 12805])
                            ("bind" function
                               (:arguments 
                                  ( ("a1" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("Arg1" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [13127 13142])
                                    ("a2" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("Arg2" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [13143 13158])
                                    ("a3" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("Arg3" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [13159 13174])
                                    ("a4" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("Arg4" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [13175 13190]))                                  
                                :type "int")
                                (reparse-symbol namespacesubparts) [13122 13524])
                            ("bind" function
                               (:arguments 
                                  ( ("a1" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("Arg1" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [13811 13826])
                                    ("a2" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("Arg2" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [13827 13842])
                                    ("a3" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("Arg3" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [13843 13858])
                                    ("a4" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("Arg4" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [13859 13874]))                                  
                                :type "int")
                                (reparse-symbol namespacesubparts) [13806 14216])
                            ("Result" function (:type "int") (reparse-symbol namespacesubparts) [17042 17075])
                            ("bind" function
                               (:arguments 
                                  ( ("" variable (:type ("Result" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [17154 17165])
                                    ("a2" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("Arg2" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [17191 17206])
                                    ("a3" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("Arg3" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [17207 17222])
                                    ("a4" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("Arg4" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [17228 17243])
                                    ("a5" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("Arg5" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [17244 17259]))                                  
                                :type "int")
                                (reparse-symbol namespacesubparts) [17149 17691])
                            ("bind" function
                               (:arguments 
                                  ( ("a1" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("Arg1" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [18037 18052])
                                    ("a2" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("Arg2" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [18053 18068])
                                    ("a3" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("Arg3" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [18069 18084])
                                    ("a4" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("Arg4" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [18085 18100])
                                    ("a5" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("Arg5" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [18106 18121]))                                  
                                :type "int")
                                (reparse-symbol namespacesubparts) [18032 18483])
                            ("bind" function
                               (:arguments 
                                  ( ("a1" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("Arg1" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [18804 18819])
                                    ("a2" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("Arg2" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [18820 18835])
                                    ("a3" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("Arg3" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [18836 18851])
                                    ("a4" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("Arg4" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [18852 18867])
                                    ("a5" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("Arg5" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [18873 18888]))                                  
                                :type "int")
                                (reparse-symbol namespacesubparts) [18799 19258])
                            ("Result" function (:type "int") (reparse-symbol namespacesubparts) [22400 22439])
                            ("bind" function
                               (:arguments 
                                  ( ("" variable (:type ("Result" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [22530 22541])
                                    ("a2" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("Arg2" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [22573 22588])
                                    ("a3" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("Arg3" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [22594 22609])
                                    ("a4" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("Arg4" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [22610 22625])
                                    ("a5" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("Arg5" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [22626 22641])
                                    ("a6" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("Arg6" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [22642 22657]))                                  
                                :type "int")
                                (reparse-symbol namespacesubparts) [22525 23129])
                            ("bind" function
                               (:arguments 
                                  ( ("a1" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("Arg1" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [23509 23524])
                                    ("a2" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("Arg2" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [23525 23540])
                                    ("a3" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("Arg3" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [23541 23556])
                                    ("a4" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("Arg4" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [23557 23572])
                                    ("a5" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("Arg5" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [23578 23593])
                                    ("a6" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("Arg6" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [23594 23609]))                                  
                                :type "int")
                                (reparse-symbol namespacesubparts) [23504 23999])
                            ("bind" function
                               (:arguments 
                                  ( ("a1" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("Arg1" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [24344 24359])
                                    ("a2" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("Arg2" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [24360 24375])
                                    ("a3" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("Arg3" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [24376 24391])
                                    ("a4" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("Arg4" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [24392 24407])
                                    ("a5" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("Arg5" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [24413 24428])
                                    ("a6" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("Arg6" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [24429 24444]))                                  
                                :type "int")
                                (reparse-symbol namespacesubparts) [24339 24842])
                            ("Result" function (:type "int") (reparse-symbol namespacesubparts) [28268 28313])
                            ("bind" function
                               (:arguments 
                                  ( ("" variable (:type ("Result" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [28416 28427])
                                    ("a2" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("Arg2" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [28465 28480])
                                    ("a3" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("Arg3" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [28486 28501])
                                    ("a4" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("Arg4" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [28502 28517])
                                    ("a5" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("Arg5" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [28518 28533])
                                    ("a6" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("Arg6" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [28534 28549])
                                    ("a7" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("Arg7" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [28555 28570]))                                  
                                :type "int")
                                (reparse-symbol namespacesubparts) [28411 29082])
                            ("bind" function
                               (:arguments 
                                  ( ("a1" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("Arg1" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [29492 29507])
                                    ("a2" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("Arg2" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [29508 29523])
                                    ("a3" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("Arg3" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [29524 29539])
                                    ("a4" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("Arg4" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [29540 29555])
                                    ("a5" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("Arg5" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [29561 29576])
                                    ("a6" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("Arg6" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [29577 29592])
                                    ("a7" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("Arg7" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [29593 29608]))                                  
                                :type "int")
                                (reparse-symbol namespacesubparts) [29487 30042])
                            ("bind" function
                               (:arguments 
                                  ( ("a1" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("Arg1" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [30417 30432])
                                    ("a2" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("Arg2" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [30433 30448])
                                    ("a3" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("Arg3" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [30449 30464])
                                    ("a4" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("Arg4" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [30465 30480])
                                    ("a5" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("Arg5" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [30486 30501])
                                    ("a6" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("Arg6" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [30502 30517])
                                    ("a7" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("Arg7" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [30518 30533]))                                  
                                :type "int")
                                (reparse-symbol namespacesubparts) [30412 30975])
                            ("Result" function (:type "int") (reparse-symbol namespacesubparts) [34670 34721])
                            ("bind" function
                               (:arguments 
                                  ( ("" variable (:type ("Result" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [34836 34847])
                                    ("a2" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("Arg2" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [34891 34906])
                                    ("a3" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("Arg3" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [34912 34927])
                                    ("a4" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("Arg4" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [34928 34943])
                                    ("a5" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("Arg5" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [34944 34959])
                                    ("a6" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("Arg6" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [34960 34975])
                                    ("a7" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("Arg7" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [34981 34996])
                                    ("a8" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("Arg8" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [34997 35012]))                                  
                                :type "int")
                                (reparse-symbol namespacesubparts) [34831 35564])
                            ("bind" function
                               (:arguments 
                                  ( ("a1" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("Arg1" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [35998 36013])
                                    ("a2" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("Arg2" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [36014 36029])
                                    ("a3" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("Arg3" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [36030 36045])
                                    ("a4" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("Arg4" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [36046 36061])
                                    ("a5" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("Arg5" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [36067 36082])
                                    ("a6" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("Arg6" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [36083 36098])
                                    ("a7" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("Arg7" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [36099 36114])
                                    ("a8" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("Arg8" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [36115 36130]))                                  
                                :type "int")
                                (reparse-symbol namespacesubparts) [35993 36592])
                            ("bind" function
                               (:arguments 
                                  ( ("a1" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("Arg1" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [36991 37006])
                                    ("a2" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("Arg2" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [37007 37022])
                                    ("a3" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("Arg3" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [37023 37038])
                                    ("a4" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("Arg4" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [37039 37054])
                                    ("a5" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("Arg5" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [37060 37075])
                                    ("a6" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("Arg6" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [37076 37091])
                                    ("a7" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("Arg7" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [37092 37107])
                                    ("a8" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("Arg8" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [37108 37123]))                                  
                                :type "int")
                                (reparse-symbol namespacesubparts) [36986 37593])
                            ("Result" function (:type "int") (reparse-symbol namespacesubparts) [41562 41619])
                            ("bind" function
                               (:arguments 
                                  ( ("" variable (:type ("Result" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [41752 41763])
                                    ("a2" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("Arg2" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [41818 41833])
                                    ("a3" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("Arg3" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [41834 41849])
                                    ("a4" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("Arg4" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [41850 41865])
                                    ("a5" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("Arg5" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [41866 41881])
                                    ("a6" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("Arg6" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [41887 41902])
                                    ("a7" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("Arg7" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [41903 41918])
                                    ("a8" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("Arg8" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [41919 41934])
                                    ("a9" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("Arg9" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [41935 41950]))                                  
                                :type "int")
                                (reparse-symbol namespacesubparts) [41747 42558])
                            ("bind" function
                               (:arguments 
                                  ( ("a1" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("Arg1" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [43016 43031])
                                    ("a2" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("Arg2" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [43032 43047])
                                    ("a3" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("Arg3" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [43048 43063])
                                    ("a4" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("Arg4" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [43064 43079])
                                    ("a5" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("Arg5" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [43085 43100])
                                    ("a6" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("Arg6" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [43101 43116])
                                    ("a7" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("Arg7" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [43117 43132])
                                    ("a8" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("Arg8" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [43133 43148])
                                    ("a9" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("Arg9" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [43154 43169]))                                  
                                :type "int")
                                (reparse-symbol namespacesubparts) [43011 43659])
                            ("bind" function
                               (:arguments 
                                  ( ("a1" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("Arg1" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [44082 44097])
                                    ("a2" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("Arg2" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [44098 44113])
                                    ("a3" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("Arg3" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [44114 44129])
                                    ("a4" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("Arg4" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [44130 44145])
                                    ("a5" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("Arg5" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [44151 44166])
                                    ("a6" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("Arg6" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [44167 44182])
                                    ("a7" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("Arg7" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [44183 44198])
                                    ("a8" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("Arg8" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [44199 44214])
                                    ("a9" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("Arg9" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [44220 44235]))                                  
                                :type "int")
                                (reparse-symbol namespacesubparts) [44077 44733])
                            ("Result" function (:type "int") (reparse-symbol namespacesubparts) [49044 49107])
                            ("bind" function
                               (:arguments 
                                  ( ("" variable (:type ("Result" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [49253 49264])
                                    ("a2" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("Arg2" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [49325 49340])
                                    ("a3" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("Arg3" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [49341 49356])
                                    ("a4" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("Arg4" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [49357 49372])
                                    ("a5" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("Arg5" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [49373 49388])
                                    ("a6" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("Arg6" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [49394 49409])
                                    ("a7" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("Arg7" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [49410 49425])
                                    ("a8" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("Arg8" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [49426 49441])
                                    ("a9" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("Arg9" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [49442 49457])
                                    ("a10" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("Arg10" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [49463 49480]))                                  
                                :type "int")
                                (reparse-symbol namespacesubparts) [49248 50133])
                            ("bind" function
                               (:arguments 
                                  ( ("a1" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("Arg1" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [50619 50634])
                                    ("a2" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("Arg2" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [50635 50650])
                                    ("a3" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("Arg3" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [50651 50666])
                                    ("a4" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("Arg4" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [50667 50682])
                                    ("a5" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("Arg5" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [50688 50703])
                                    ("a6" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("Arg6" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [50704 50719])
                                    ("a7" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("Arg7" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [50720 50735])
                                    ("a8" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("Arg8" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [50736 50751])
                                    ("a9" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("Arg9" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [50757 50772])
                                    ("a10" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("Arg10" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [50773 50790]))                                  
                                :type "int")
                                (reparse-symbol namespacesubparts) [50614 51313])
                            ("bind" function
                               (:arguments 
                                  ( ("a1" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("Arg1" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [51774 51789])
                                    ("a2" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("Arg2" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [51790 51805])
                                    ("a3" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("Arg3" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [51806 51821])
                                    ("a4" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("Arg4" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [51822 51837])
                                    ("a5" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("Arg5" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [51843 51858])
                                    ("a6" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("Arg6" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [51859 51874])
                                    ("a7" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("Arg7" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [51875 51890])
                                    ("a8" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("Arg8" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [51891 51906])
                                    ("a9" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("Arg9" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [51912 51927])
                                    ("a10" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("Arg10" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [51928 51945]))                                  
                                :type "int")
                                (reparse-symbol namespacesubparts) [51769 52476]))                          
                        :type "namespace")
                        (reparse-symbol namespacesubparts) [502 56566]))                  
                :type "namespace")
                nil [483 56589]))          
    :file "bind_functions.hpp"
    :pointmax 56617
    :fsize 56616
    :lastmodtime '(17765 48449)
    :unmatched-syntax '((punctuation 51766 . 51767) (punctuation 51764 . 51765) (symbol 51757 . 51761) (punctuation 51756 . 51757) (punctuation 51755 . 51756) (punctuation 51754 . 51755) (symbol 51744 . 51749) (CONST 51738 . 51743) (punctuation 51736 . 51737) (symbol 51732 . 51736) (CONST 51726 . 51731) (punctuation 51724 . 51725) (symbol 51720 . 51724) (CONST 51714 . 51719) (punctuation 51712 . 51713) (symbol 51708 . 51712) (CONST 51702 . 51707) (punctuation 51694 . 51695) (symbol 51690 . 51694) (CONST 51684 . 51689) (punctuation 51682 . 51683) (symbol 51678 . 51682) (CONST 51672 . 51677) (punctuation 51670 . 51671) (symbol 51666 . 51670) (CONST 51660 . 51665) (punctuation 51658 . 51659) (symbol 51654 . 51658) (CONST 51648 . 51653) (punctuation 51646 . 51647) (symbol 51642 . 51646) (CONST 51636 . 51641) (punctuation 51634 . 51635) (symbol 51630 . 51634) (CONST 51624 . 51629) (punctuation 51616 . 51617) (symbol 51599 . 51616) (punctuation 51598 . 51599) (punctuation 51597 . 51598) (symbol 51591 . 51597) (TYPENAME 51582 . 51590) (punctuation 51576 . 51577) (punctuation 51575 . 51576) (punctuation 51573 . 51574) (symbol 51567 . 51573) (punctuation 51565 . 51566) (number 51563 . 51565) (punctuation 51562 . 51563) (symbol 51547 . 51562) (punctuation 51545 . 51546) (number 51543 . 51545) (punctuation 51542 . 51543) (symbol 51536 . 51542) (punctuation 51530 . 51531) (symbol 51511 . 51530) (punctuation 51507 . 51508) (symbol 51493 . 51507) (CONST 51487 . 51492) (INLINE 51480 . 51486) (punctuation 51478 . 51479) (symbol 51473 . 51478) (CLASS 51467 . 51472) (punctuation 51455 . 51456) (symbol 51451 . 51455) (CLASS 51445 . 51450) (punctuation 51443 . 51444) (symbol 51439 . 51443) (CLASS 51433 . 51438) (punctuation 51431 . 51432) (symbol 51427 . 51431) (CLASS 51421 . 51426) (punctuation 51419 . 51420) (symbol 51415 . 51419) (CLASS 51409 . 51414) (punctuation 51407 . 51408) (symbol 51403 . 51407) (CLASS 51397 . 51402) (punctuation 51385 . 51386) (symbol 51381 . 51385) (CLASS 51375 . 51380) (punctuation 51373 . 51374) (symbol 51369 . 51373) (CLASS 51363 . 51368) (punctuation 51361 . 51362) (symbol 51357 . 51361) (CLASS 51351 . 51356) (punctuation 51349 . 51350) (symbol 51345 . 51349) (CLASS 51339 . 51344) (punctuation 51337 . 51338) (symbol 51331 . 51337) (CLASS 51325 . 51330) (punctuation 51324 . 51325) (TEMPLATE 51315 . 51323) (punctuation 50611 . 50612) (punctuation 50609 . 50610) (symbol 50602 . 50606) (punctuation 50601 . 50602) (punctuation 50600 . 50601) (punctuation 50599 . 50600) (symbol 50589 . 50594) (CONST 50583 . 50588) (punctuation 50581 . 50582) (symbol 50577 . 50581) (CONST 50571 . 50576) (punctuation 50569 . 50570) (symbol 50565 . 50569) (CONST 50559 . 50564) (punctuation 50557 . 50558) (symbol 50553 . 50557) (CONST 50547 . 50552) (punctuation 50539 . 50540) (symbol 50535 . 50539) (CONST 50529 . 50534) (punctuation 50527 . 50528) (symbol 50523 . 50527) (CONST 50517 . 50522) (punctuation 50515 . 50516) (symbol 50511 . 50515) (CONST 50505 . 50510) (punctuation 50503 . 50504) (symbol 50499 . 50503) (CONST 50493 . 50498) (punctuation 50491 . 50492) (symbol 50487 . 50491) (CONST 50481 . 50486) (punctuation 50479 . 50480) (symbol 50475 . 50479) (CONST 50469 . 50474) (punctuation 50461 . 50462) (symbol 50444 . 50461) (punctuation 50443 . 50444) (punctuation 50442 . 50443) (symbol 50436 . 50442) (TYPENAME 50427 . 50435) (punctuation 50421 . 50422) (punctuation 50420 . 50421) (punctuation 50418 . 50419) (number 50416 . 50418) (punctuation 50415 . 50416) (symbol 50400 . 50415) (punctuation 50398 . 50399) (number 50396 . 50398) (punctuation 50395 . 50396) (symbol 50389 . 50395) (punctuation 50383 . 50384) (symbol 50364 . 50383) (punctuation 50360 . 50361) (symbol 50346 . 50360) (CONST 50340 . 50345) (INLINE 50333 . 50339) (punctuation 50331 . 50332) (symbol 50326 . 50331) (CLASS 50320 . 50325) (punctuation 50318 . 50319) (symbol 50314 . 50318) (CLASS 50308 . 50313) (punctuation 50306 . 50307) (symbol 50302 . 50306) (CLASS 50296 . 50301) (punctuation 50294 . 50295) (symbol 50290 . 50294) (CLASS 50284 . 50289) (punctuation 50282 . 50283) (symbol 50278 . 50282) (CLASS 50272 . 50277) (punctuation 50260 . 50261) (symbol 50256 . 50260) (CLASS 50250 . 50255) (punctuation 50248 . 50249) (symbol 50244 . 50248) (CLASS 50238 . 50243) (punctuation 50236 . 50237) (symbol 50232 . 50236) (CLASS 50226 . 50231) (punctuation 50224 . 50225) (symbol 50220 . 50224) (CLASS 50214 . 50219) (punctuation 50212 . 50213) (symbol 50208 . 50212) (CLASS 50202 . 50207) (punctuation 50201 . 50202) (TEMPLATE 50192 . 50200) (semantic-list 49264 . 49318) (semantic-list 49259 . 49264) (punctuation 49245 . 49246) (punctuation 49243 . 49244) (symbol 49236 . 49240) (punctuation 49235 . 49236) (punctuation 49234 . 49235) (punctuation 49233 . 49234) (symbol 49223 . 49228) (CONST 49217 . 49222) (punctuation 49215 . 49216) (symbol 49211 . 49215) (CONST 49205 . 49210) (punctuation 49203 . 49204) (symbol 49199 . 49203) (CONST 49193 . 49198) (punctuation 49185 . 49186) (symbol 49181 . 49185) (CONST 49175 . 49180) (punctuation 49173 . 49174) (symbol 49169 . 49173) (CONST 49163 . 49168) (punctuation 49161 . 49162) (symbol 49157 . 49161) (CONST 49151 . 49156) (punctuation 49149 . 49150) (symbol 49145 . 49149) (CONST 49139 . 49144) (punctuation 49137 . 49138) (symbol 49133 . 49137) (CONST 49127 . 49132) (punctuation 49125 . 49126) (symbol 49121 . 49125) (CONST 49115 . 49120) (punctuation 49107 . 49108) (punctuation 49051 . 49052) (punctuation 49036 . 49037) (symbol 49019 . 49036) (punctuation 49018 . 49019) (punctuation 49017 . 49018) (symbol 49011 . 49017) (TYPENAME 49002 . 49010) (punctuation 48996 . 48997) (punctuation 48995 . 48996) (punctuation 48993 . 48994) (symbol 48987 . 48993) (punctuation 48985 . 48986) (number 48983 . 48985) (punctuation 48982 . 48983) (symbol 48967 . 48982) (punctuation 48965 . 48966) (number 48963 . 48965) (punctuation 48962 . 48963) (symbol 48956 . 48962) (punctuation 48950 . 48951) (symbol 48931 . 48950) (punctuation 48927 . 48928) (symbol 48913 . 48927) (CONST 48907 . 48912) (INLINE 48900 . 48906) (punctuation 48898 . 48899) (symbol 48893 . 48898) (CLASS 48887 . 48892) (punctuation 48885 . 48886) (symbol 48881 . 48885) (CLASS 48875 . 48880) (punctuation 48873 . 48874) (symbol 48869 . 48873) (CLASS 48863 . 48868) (punctuation 48861 . 48862) (symbol 48857 . 48861) (CLASS 48851 . 48856) (punctuation 48839 . 48840) (symbol 48835 . 48839) (CLASS 48829 . 48834) (punctuation 48827 . 48828) (symbol 48823 . 48827) (CLASS 48817 . 48822) (punctuation 48815 . 48816) (symbol 48811 . 48815) (CLASS 48805 . 48810) (punctuation 48803 . 48804) (symbol 48799 . 48803) (CLASS 48793 . 48798) (punctuation 48791 . 48792) (symbol 48787 . 48791) (CLASS 48781 . 48786) (punctuation 48769 . 48770) (symbol 48765 . 48769) (CLASS 48759 . 48764) (punctuation 48757 . 48758) (symbol 48753 . 48757) (CLASS 48747 . 48752) (punctuation 48745 . 48746) (symbol 48741 . 48745) (CLASS 48735 . 48740) (punctuation 48733 . 48734) (symbol 48729 . 48733) (CLASS 48723 . 48728) (punctuation 48721 . 48722) (symbol 48717 . 48721) (CLASS 48711 . 48716) (punctuation 48699 . 48700) (symbol 48695 . 48699) (CLASS 48689 . 48694) (punctuation 48687 . 48688) (symbol 48683 . 48687) (CLASS 48677 . 48682) (punctuation 48675 . 48676) (symbol 48671 . 48675) (CLASS 48665 . 48670) (punctuation 48663 . 48664) (symbol 48659 . 48663) (CLASS 48653 . 48658) (punctuation 48651 . 48652) (symbol 48645 . 48651) (CLASS 48639 . 48644) (punctuation 48638 . 48639) (TEMPLATE 48629 . 48637) (punctuation 44074 . 44075) (punctuation 44072 . 44073) (symbol 44065 . 44069) (punctuation 44064 . 44065) (punctuation 44063 . 44064) (punctuation 44062 . 44063) (symbol 44053 . 44057) (CONST 44047 . 44052) (punctuation 44045 . 44046) (symbol 44041 . 44045) (CONST 44035 . 44040) (punctuation 44033 . 44034) (symbol 44029 . 44033) (CONST 44023 . 44028) (punctuation 44015 . 44016) (symbol 44011 . 44015) (CONST 44005 . 44010) (punctuation 44003 . 44004) (symbol 43999 . 44003) (CONST 43993 . 43998) (punctuation 43991 . 43992) (symbol 43987 . 43991) (CONST 43981 . 43986) (punctuation 43979 . 43980) (symbol 43975 . 43979) (CONST 43969 . 43974) (punctuation 43967 . 43968) (symbol 43963 . 43967) (CONST 43957 . 43962) (punctuation 43955 . 43956) (symbol 43951 . 43955) (CONST 43945 . 43950) (punctuation 43937 . 43938) (symbol 43920 . 43937) (punctuation 43919 . 43920) (punctuation 43918 . 43919) (symbol 43912 . 43918) (TYPENAME 43903 . 43911) (punctuation 43897 . 43898) (punctuation 43896 . 43897) (punctuation 43894 . 43895) (symbol 43888 . 43894) (punctuation 43886 . 43887) (number 43885 . 43886) (punctuation 43884 . 43885) (symbol 43869 . 43884) (punctuation 43867 . 43868) (number 43866 . 43867) (punctuation 43865 . 43866) (symbol 43859 . 43865) (punctuation 43853 . 43854) (symbol 43834 . 43853) (punctuation 43830 . 43831) (symbol 43816 . 43830) (CONST 43810 . 43815) (INLINE 43803 . 43809) (punctuation 43801 . 43802) (symbol 43797 . 43801) (CLASS 43791 . 43796) (punctuation 43789 . 43790) (symbol 43785 . 43789) (CLASS 43779 . 43784) (punctuation 43777 . 43778) (symbol 43773 . 43777) (CLASS 43767 . 43772) (punctuation 43765 . 43766) (symbol 43761 . 43765) (CLASS 43755 . 43760) (punctuation 43753 . 43754) (symbol 43749 . 43753) (CLASS 43743 . 43748) (punctuation 43731 . 43732) (symbol 43727 . 43731) (CLASS 43721 . 43726) (punctuation 43719 . 43720) (symbol 43715 . 43719) (CLASS 43709 . 43714) (punctuation 43707 . 43708) (symbol 43703 . 43707) (CLASS 43697 . 43702) (punctuation 43695 . 43696) (symbol 43691 . 43695) (CLASS 43685 . 43690) (punctuation 43683 . 43684) (symbol 43677 . 43683) (CLASS 43671 . 43676) (punctuation 43670 . 43671) (TEMPLATE 43661 . 43669) (punctuation 43008 . 43009) (punctuation 43006 . 43007) (symbol 42999 . 43003) (punctuation 42998 . 42999) (punctuation 42997 . 42998) (punctuation 42996 . 42997) (symbol 42987 . 42991) (CONST 42981 . 42986) (punctuation 42979 . 42980) (symbol 42975 . 42979) (CONST 42969 . 42974) (punctuation 42967 . 42968) (symbol 42963 . 42967) (CONST 42957 . 42962) (punctuation 42949 . 42950) (symbol 42945 . 42949) (CONST 42939 . 42944) (punctuation 42937 . 42938) (symbol 42933 . 42937) (CONST 42927 . 42932) (punctuation 42925 . 42926) (symbol 42921 . 42925) (CONST 42915 . 42920) (punctuation 42913 . 42914) (symbol 42909 . 42913) (CONST 42903 . 42908) (punctuation 42901 . 42902) (symbol 42897 . 42901) (CONST 42891 . 42896) (punctuation 42889 . 42890) (symbol 42885 . 42889) (CONST 42879 . 42884) (punctuation 42871 . 42872) (symbol 42854 . 42871) (punctuation 42853 . 42854) (punctuation 42852 . 42853) (symbol 42846 . 42852) (TYPENAME 42837 . 42845) (punctuation 42831 . 42832) (punctuation 42830 . 42831) (punctuation 42828 . 42829) (number 42827 . 42828) (punctuation 42826 . 42827) (symbol 42811 . 42826) (punctuation 42809 . 42810) (number 42808 . 42809) (punctuation 42807 . 42808) (symbol 42801 . 42807) (punctuation 42795 . 42796) (symbol 42776 . 42795) (punctuation 42772 . 42773) (symbol 42758 . 42772) (CONST 42752 . 42757) (INLINE 42745 . 42751) (punctuation 42743 . 42744) (symbol 42739 . 42743) (CLASS 42733 . 42738) (punctuation 42731 . 42732) (symbol 42727 . 42731) (CLASS 42721 . 42726) (punctuation 42719 . 42720) (symbol 42715 . 42719) (CLASS 42709 . 42714) (punctuation 42707 . 42708) (symbol 42703 . 42707) (CLASS 42697 . 42702) (punctuation 42685 . 42686) (symbol 42681 . 42685) (CLASS 42675 . 42680) (punctuation 42673 . 42674) (symbol 42669 . 42673) (CLASS 42663 . 42668) (punctuation 42661 . 42662) (symbol 42657 . 42661) (CLASS 42651 . 42656) (punctuation 42649 . 42650) (symbol 42645 . 42649) (CLASS 42639 . 42644) (punctuation 42637 . 42638) (symbol 42633 . 42637) (CLASS 42627 . 42632) (punctuation 42626 . 42627) (TEMPLATE 42617 . 42625) (semantic-list 41763 . 41811) (semantic-list 41758 . 41763) (punctuation 41744 . 41745) (punctuation 41742 . 41743) (symbol 41735 . 41739) (punctuation 41734 . 41735) (punctuation 41733 . 41734) (punctuation 41732 . 41733) (symbol 41723 . 41727) (CONST 41717 . 41722) (punctuation 41709 . 41710) (symbol 41705 . 41709) (CONST 41699 . 41704) (punctuation 41697 . 41698) (symbol 41693 . 41697) (CONST 41687 . 41692) (punctuation 41685 . 41686) (symbol 41681 . 41685) (CONST 41675 . 41680) (punctuation 41673 . 41674) (symbol 41669 . 41673) (CONST 41663 . 41668) (punctuation 41661 . 41662) (symbol 41657 . 41661) (CONST 41651 . 41656) (punctuation 41649 . 41650) (symbol 41645 . 41649) (CONST 41639 . 41644) (punctuation 41631 . 41632) (symbol 41627 . 41631) (CONST 41621 . 41626) (punctuation 41619 . 41620) (punctuation 41569 . 41570) (punctuation 41554 . 41555) (symbol 41537 . 41554) (punctuation 41536 . 41537) (punctuation 41535 . 41536) (symbol 41529 . 41535) (TYPENAME 41520 . 41528) (punctuation 41514 . 41515) (punctuation 41513 . 41514) (punctuation 41511 . 41512) (symbol 41505 . 41511) (punctuation 41503 . 41504) (number 41502 . 41503) (punctuation 41501 . 41502) (symbol 41486 . 41501) (punctuation 41484 . 41485) (number 41483 . 41484) (punctuation 41482 . 41483) (symbol 41476 . 41482) (punctuation 41470 . 41471) (symbol 41451 . 41470) (punctuation 41447 . 41448) (symbol 41433 . 41447) (CONST 41427 . 41432) (INLINE 41420 . 41426) (punctuation 41418 . 41419) (symbol 41414 . 41418) (CLASS 41408 . 41413) (punctuation 41406 . 41407) (symbol 41402 . 41406) (CLASS 41396 . 41401) (punctuation 41384 . 41385) (symbol 41380 . 41384) (CLASS 41374 . 41379) (punctuation 41372 . 41373) (symbol 41368 . 41372) (CLASS 41362 . 41367) (punctuation 41360 . 41361) (symbol 41356 . 41360) (CLASS 41350 . 41355) (punctuation 41348 . 41349) (symbol 41344 . 41348) (CLASS 41338 . 41343) (punctuation 41336 . 41337) (symbol 41332 . 41336) (CLASS 41326 . 41331) (punctuation 41314 . 41315) (symbol 41310 . 41314) (CLASS 41304 . 41309) (punctuation 41302 . 41303) (symbol 41298 . 41302) (CLASS 41292 . 41297) (punctuation 41290 . 41291) (symbol 41286 . 41290) (CLASS 41280 . 41285) (punctuation 41278 . 41279) (symbol 41274 . 41278) (CLASS 41268 . 41273) (punctuation 41266 . 41267) (symbol 41262 . 41266) (CLASS 41256 . 41261) (punctuation 41244 . 41245) (symbol 41240 . 41244) (CLASS 41234 . 41239) (punctuation 41232 . 41233) (symbol 41228 . 41232) (CLASS 41222 . 41227) (punctuation 41220 . 41221) (symbol 41216 . 41220) (CLASS 41210 . 41215) (punctuation 41208 . 41209) (symbol 41204 . 41208) (CLASS 41198 . 41203) (punctuation 41196 . 41197) (symbol 41190 . 41196) (CLASS 41184 . 41189) (punctuation 41183 . 41184) (TEMPLATE 41174 . 41182) (punctuation 36983 . 36984) (punctuation 36981 . 36982) (symbol 36974 . 36978) (punctuation 36973 . 36974) (punctuation 36972 . 36973) (punctuation 36971 . 36972) (symbol 36962 . 36966) (CONST 36956 . 36961) (punctuation 36954 . 36955) (symbol 36950 . 36954) (CONST 36944 . 36949) (punctuation 36936 . 36937) (symbol 36932 . 36936) (CONST 36926 . 36931) (punctuation 36924 . 36925) (symbol 36920 . 36924) (CONST 36914 . 36919) (punctuation 36912 . 36913) (symbol 36908 . 36912) (CONST 36902 . 36907) (punctuation 36900 . 36901) (symbol 36896 . 36900) (CONST 36890 . 36895) (punctuation 36888 . 36889) (symbol 36884 . 36888) (CONST 36878 . 36883) (punctuation 36876 . 36877) (symbol 36872 . 36876) (CONST 36866 . 36871) (punctuation 36858 . 36859) (symbol 36841 . 36858) (punctuation 36840 . 36841) (punctuation 36839 . 36840) (symbol 36833 . 36839) (TYPENAME 36824 . 36832) (punctuation 36818 . 36819) (punctuation 36817 . 36818) (punctuation 36815 . 36816) (symbol 36809 . 36815) (punctuation 36807 . 36808) (number 36806 . 36807) (punctuation 36805 . 36806) (symbol 36790 . 36805) (punctuation 36788 . 36789) (number 36787 . 36788) (punctuation 36786 . 36787) (symbol 36780 . 36786) (punctuation 36774 . 36775) (symbol 36755 . 36774) (punctuation 36751 . 36752) (symbol 36737 . 36751) (CONST 36731 . 36736) (INLINE 36724 . 36730) (punctuation 36722 . 36723) (symbol 36718 . 36722) (CLASS 36712 . 36717) (punctuation 36710 . 36711) (symbol 36706 . 36710) (CLASS 36700 . 36705) (punctuation 36698 . 36699) (symbol 36694 . 36698) (CLASS 36688 . 36693) (punctuation 36686 . 36687) (symbol 36682 . 36686) (CLASS 36676 . 36681) (punctuation 36664 . 36665) (symbol 36660 . 36664) (CLASS 36654 . 36659) (punctuation 36652 . 36653) (symbol 36648 . 36652) (CLASS 36642 . 36647) (punctuation 36640 . 36641) (symbol 36636 . 36640) (CLASS 36630 . 36635) (punctuation 36628 . 36629) (symbol 36624 . 36628) (CLASS 36618 . 36623) (punctuation 36616 . 36617) (symbol 36610 . 36616) (CLASS 36604 . 36609) (punctuation 36603 . 36604) (TEMPLATE 36594 . 36602) (punctuation 35990 . 35991) (punctuation 35988 . 35989) (symbol 35981 . 35985) (punctuation 35980 . 35981) (punctuation 35979 . 35980) (punctuation 35978 . 35979) (symbol 35969 . 35973) (CONST 35963 . 35968) (punctuation 35961 . 35962) (symbol 35957 . 35961) (CONST 35951 . 35956) (punctuation 35943 . 35944) (symbol 35939 . 35943) (CONST 35933 . 35938) (punctuation 35931 . 35932) (symbol 35927 . 35931) (CONST 35921 . 35926) (punctuation 35919 . 35920) (symbol 35915 . 35919) (CONST 35909 . 35914) (punctuation 35907 . 35908) (symbol 35903 . 35907) (CONST 35897 . 35902) (punctuation 35895 . 35896) (symbol 35891 . 35895) (CONST 35885 . 35890) (punctuation 35883 . 35884) (symbol 35879 . 35883) (CONST 35873 . 35878) (punctuation 35865 . 35866) (symbol 35848 . 35865) (punctuation 35847 . 35848) (punctuation 35846 . 35847) (symbol 35840 . 35846) (TYPENAME 35831 . 35839) (punctuation 35825 . 35826) (punctuation 35824 . 35825) (punctuation 35822 . 35823) (number 35821 . 35822) (punctuation 35820 . 35821) (symbol 35805 . 35820) (punctuation 35803 . 35804) (number 35802 . 35803) (punctuation 35801 . 35802) (symbol 35795 . 35801) (punctuation 35789 . 35790) (symbol 35770 . 35789) (punctuation 35766 . 35767) (symbol 35752 . 35766) (CONST 35746 . 35751) (INLINE 35739 . 35745) (punctuation 35737 . 35738) (symbol 35733 . 35737) (CLASS 35727 . 35732) (punctuation 35725 . 35726) (symbol 35721 . 35725) (CLASS 35715 . 35720) (punctuation 35713 . 35714) (symbol 35709 . 35713) (CLASS 35703 . 35708) (punctuation 35691 . 35692) (symbol 35687 . 35691) (CLASS 35681 . 35686) (punctuation 35679 . 35680) (symbol 35675 . 35679) (CLASS 35669 . 35674) (punctuation 35667 . 35668) (symbol 35663 . 35667) (CLASS 35657 . 35662) (punctuation 35655 . 35656) (symbol 35651 . 35655) (CLASS 35645 . 35650) (punctuation 35643 . 35644) (symbol 35639 . 35643) (CLASS 35633 . 35638) (punctuation 35632 . 35633) (TEMPLATE 35623 . 35631) (semantic-list 34847 . 34889) (semantic-list 34842 . 34847) (punctuation 34828 . 34829) (punctuation 34826 . 34827) (symbol 34819 . 34823) (punctuation 34818 . 34819) (punctuation 34817 . 34818) (punctuation 34816 . 34817) (symbol 34807 . 34811) (CONST 34801 . 34806) (punctuation 34799 . 34800) (symbol 34795 . 34799) (CONST 34789 . 34794) (punctuation 34787 . 34788) (symbol 34783 . 34787) (CONST 34777 . 34782) (punctuation 34775 . 34776) (symbol 34771 . 34775) (CONST 34765 . 34770) (punctuation 34763 . 34764) (symbol 34759 . 34763) (CONST 34753 . 34758) (punctuation 34751 . 34752) (symbol 34747 . 34751) (CONST 34741 . 34746) (punctuation 34733 . 34734) (symbol 34729 . 34733) (CONST 34723 . 34728) (punctuation 34721 . 34722) (punctuation 34677 . 34678) (punctuation 34662 . 34663) (symbol 34645 . 34662) (punctuation 34644 . 34645) (punctuation 34643 . 34644) (symbol 34637 . 34643) (TYPENAME 34628 . 34636) (punctuation 34622 . 34623) (punctuation 34621 . 34622) (punctuation 34619 . 34620) (symbol 34613 . 34619) (punctuation 34611 . 34612) (number 34610 . 34611) (punctuation 34609 . 34610) (symbol 34594 . 34609) (punctuation 34592 . 34593) (number 34591 . 34592) (punctuation 34590 . 34591) (symbol 34584 . 34590) (punctuation 34578 . 34579) (symbol 34559 . 34578) (punctuation 34555 . 34556) (symbol 34541 . 34555) (CONST 34535 . 34540) (INLINE 34528 . 34534) (punctuation 34526 . 34527) (symbol 34522 . 34526) (CLASS 34516 . 34521) (punctuation 34514 . 34515) (symbol 34510 . 34514) (CLASS 34504 . 34509) (punctuation 34502 . 34503) (symbol 34498 . 34502) (CLASS 34492 . 34497) (punctuation 34490 . 34491) (symbol 34486 . 34490) (CLASS 34480 . 34485) (punctuation 34478 . 34479) (symbol 34474 . 34478) (CLASS 34468 . 34473) (punctuation 34456 . 34457) (symbol 34452 . 34456) (CLASS 34446 . 34451) (punctuation 34444 . 34445) (symbol 34440 . 34444) (CLASS 34434 . 34439) (punctuation 34432 . 34433) (symbol 34428 . 34432) (CLASS 34422 . 34427) (punctuation 34420 . 34421) (symbol 34416 . 34420) (CLASS 34410 . 34415) (punctuation 34408 . 34409) (symbol 34404 . 34408) (CLASS 34398 . 34403) (punctuation 34386 . 34387) (symbol 34382 . 34386) (CLASS 34376 . 34381) (punctuation 34374 . 34375) (symbol 34370 . 34374) (CLASS 34364 . 34369) (punctuation 34362 . 34363) (symbol 34358 . 34362) (CLASS 34352 . 34357) (punctuation 34350 . 34351) (symbol 34346 . 34350) (CLASS 34340 . 34345) (punctuation 34338 . 34339) (symbol 34332 . 34338) (CLASS 34326 . 34331) (punctuation 34325 . 34326) (TEMPLATE 34316 . 34324) (punctuation 30409 . 30410) (punctuation 30407 . 30408) (symbol 30400 . 30404) (punctuation 30399 . 30400) (punctuation 30398 . 30399) (punctuation 30397 . 30398) (symbol 30388 . 30392) (CONST 30382 . 30387) (punctuation 30374 . 30375) (symbol 30370 . 30374) (CONST 30364 . 30369) (punctuation 30362 . 30363) (symbol 30358 . 30362) (CONST 30352 . 30357) (punctuation 30350 . 30351) (symbol 30346 . 30350) (CONST 30340 . 30345) (punctuation 30338 . 30339) (symbol 30334 . 30338) (CONST 30328 . 30333) (punctuation 30326 . 30327) (symbol 30322 . 30326) (CONST 30316 . 30321) (punctuation 30314 . 30315) (symbol 30310 . 30314) (CONST 30304 . 30309) (punctuation 30296 . 30297) (symbol 30279 . 30296) (punctuation 30278 . 30279) (punctuation 30277 . 30278) (symbol 30271 . 30277) (TYPENAME 30262 . 30270) (punctuation 30256 . 30257) (punctuation 30255 . 30256) (punctuation 30253 . 30254) (symbol 30247 . 30253) (punctuation 30245 . 30246) (number 30244 . 30245) (punctuation 30243 . 30244) (symbol 30228 . 30243) (punctuation 30226 . 30227) (number 30225 . 30226) (punctuation 30224 . 30225) (symbol 30218 . 30224) (punctuation 30212 . 30213) (symbol 30193 . 30212) (punctuation 30189 . 30190) (symbol 30175 . 30189) (CONST 30169 . 30174) (INLINE 30162 . 30168) (punctuation 30160 . 30161) (symbol 30156 . 30160) (CLASS 30150 . 30155) (punctuation 30148 . 30149) (symbol 30144 . 30148) (CLASS 30138 . 30143) (punctuation 30136 . 30137) (symbol 30132 . 30136) (CLASS 30126 . 30131) (punctuation 30114 . 30115) (symbol 30110 . 30114) (CLASS 30104 . 30109) (punctuation 30102 . 30103) (symbol 30098 . 30102) (CLASS 30092 . 30097) (punctuation 30090 . 30091) (symbol 30086 . 30090) (CLASS 30080 . 30085) (punctuation 30078 . 30079) (symbol 30074 . 30078) (CLASS 30068 . 30073) (punctuation 30066 . 30067) (symbol 30060 . 30066) (CLASS 30054 . 30059) (punctuation 30053 . 30054) (TEMPLATE 30044 . 30052) (punctuation 29484 . 29485) (punctuation 29482 . 29483) (symbol 29475 . 29479) (punctuation 29474 . 29475) (punctuation 29473 . 29474) (punctuation 29472 . 29473) (symbol 29463 . 29467) (CONST 29457 . 29462) (punctuation 29449 . 29450) (symbol 29445 . 29449) (CONST 29439 . 29444) (punctuation 29437 . 29438) (symbol 29433 . 29437) (CONST 29427 . 29432) (punctuation 29425 . 29426) (symbol 29421 . 29425) (CONST 29415 . 29420) (punctuation 29413 . 29414) (symbol 29409 . 29413) (CONST 29403 . 29408) (punctuation 29401 . 29402) (symbol 29397 . 29401) (CONST 29391 . 29396) (punctuation 29389 . 29390) (symbol 29385 . 29389) (CONST 29379 . 29384) (punctuation 29371 . 29372) (symbol 29354 . 29371) (punctuation 29353 . 29354) (punctuation 29352 . 29353) (symbol 29346 . 29352) (TYPENAME 29337 . 29345) (punctuation 29331 . 29332) (punctuation 29330 . 29331) (punctuation 29328 . 29329) (number 29327 . 29328) (punctuation 29326 . 29327) (symbol 29311 . 29326) (punctuation 29309 . 29310) (number 29308 . 29309) (punctuation 29307 . 29308) (symbol 29301 . 29307) (punctuation 29295 . 29296) (symbol 29276 . 29295) (punctuation 29272 . 29273) (symbol 29258 . 29272) (CONST 29252 . 29257) (INLINE 29245 . 29251) (punctuation 29243 . 29244) (symbol 29239 . 29243) (CLASS 29233 . 29238) (punctuation 29231 . 29232) (symbol 29227 . 29231) (CLASS 29221 . 29226) (punctuation 29209 . 29210) (symbol 29205 . 29209) (CLASS 29199 . 29204) (punctuation 29197 . 29198) (symbol 29193 . 29197) (CLASS 29187 . 29192) (punctuation 29185 . 29186) (symbol 29181 . 29185) (CLASS 29175 . 29180) (punctuation 29173 . 29174) (symbol 29169 . 29173) (CLASS 29163 . 29168) (punctuation 29161 . 29162) (symbol 29157 . 29161) (CLASS 29151 . 29156) (punctuation 29150 . 29151) (TEMPLATE 29141 . 29149) (semantic-list 28427 . 28463) (semantic-list 28422 . 28427) (punctuation 28408 . 28409) (punctuation 28406 . 28407) (symbol 28399 . 28403) (punctuation 28398 . 28399) (punctuation 28397 . 28398) (punctuation 28396 . 28397) (symbol 28387 . 28391) (CONST 28381 . 28386) (punctuation 28379 . 28380) (symbol 28375 . 28379) (CONST 28369 . 28374) (punctuation 28367 . 28368) (symbol 28363 . 28367) (CONST 28357 . 28362) (punctuation 28355 . 28356) (symbol 28351 . 28355) (CONST 28345 . 28350) (punctuation 28337 . 28338) (symbol 28333 . 28337) (CONST 28327 . 28332) (punctuation 28325 . 28326) (symbol 28321 . 28325) (CONST 28315 . 28320) (punctuation 28313 . 28314) (punctuation 28275 . 28276) (punctuation 28260 . 28261) (symbol 28243 . 28260) (punctuation 28242 . 28243) (punctuation 28241 . 28242) (symbol 28235 . 28241) (TYPENAME 28226 . 28234) (punctuation 28220 . 28221) (punctuation 28219 . 28220) (punctuation 28217 . 28218) (symbol 28211 . 28217) (punctuation 28209 . 28210) (number 28208 . 28209) (punctuation 28207 . 28208) (symbol 28192 . 28207) (punctuation 28190 . 28191) (number 28189 . 28190) (punctuation 28188 . 28189) (symbol 28182 . 28188) (punctuation 28176 . 28177) (symbol 28157 . 28176) (punctuation 28153 . 28154) (symbol 28139 . 28153) (CONST 28133 . 28138) (INLINE 28126 . 28132) (punctuation 28124 . 28125) (symbol 28120 . 28124) (CLASS 28114 . 28119) (punctuation 28112 . 28113) (symbol 28108 . 28112) (CLASS 28102 . 28107) (punctuation 28100 . 28101) (symbol 28096 . 28100) (CLASS 28090 . 28095) (punctuation 28078 . 28079) (symbol 28074 . 28078) (CLASS 28068 . 28073) (punctuation 28066 . 28067) (symbol 28062 . 28066) (CLASS 28056 . 28061) (punctuation 28054 . 28055) (symbol 28050 . 28054) (CLASS 28044 . 28049) (punctuation 28042 . 28043) (symbol 28038 . 28042) (CLASS 28032 . 28037) (punctuation 28030 . 28031) (symbol 28026 . 28030) (CLASS 28020 . 28025) (punctuation 28008 . 28009) (symbol 28004 . 28008) (CLASS 27998 . 28003) (punctuation 27996 . 27997) (symbol 27992 . 27996) (CLASS 27986 . 27991) (punctuation 27984 . 27985) (symbol 27980 . 27984) (CLASS 27974 . 27979) (punctuation 27972 . 27973) (symbol 27968 . 27972) (CLASS 27962 . 27967) (punctuation 27960 . 27961) (symbol 27954 . 27960) (CLASS 27948 . 27953) (punctuation 27947 . 27948) (TEMPLATE 27938 . 27946) (punctuation 24336 . 24337) (punctuation 24334 . 24335) (symbol 24327 . 24331) (punctuation 24326 . 24327) (punctuation 24325 . 24326) (punctuation 24324 . 24325) (symbol 24315 . 24319) (CONST 24309 . 24314) (punctuation 24307 . 24308) (symbol 24303 . 24307) (CONST 24297 . 24302) (punctuation 24295 . 24296) (symbol 24291 . 24295) (CONST 24285 . 24290) (punctuation 24283 . 24284) (symbol 24279 . 24283) (CONST 24273 . 24278) (punctuation 24271 . 24272) (symbol 24267 . 24271) (CONST 24261 . 24266) (punctuation 24259 . 24260) (symbol 24255 . 24259) (CONST 24249 . 24254) (punctuation 24241 . 24242) (symbol 24224 . 24241) (punctuation 24223 . 24224) (punctuation 24222 . 24223) (symbol 24216 . 24222) (TYPENAME 24207 . 24215) (punctuation 24201 . 24202) (punctuation 24200 . 24201) (punctuation 24198 . 24199) (symbol 24192 . 24198) (punctuation 24190 . 24191) (number 24189 . 24190) (punctuation 24188 . 24189) (symbol 24173 . 24188) (punctuation 24171 . 24172) (number 24170 . 24171) (punctuation 24169 . 24170) (symbol 24163 . 24169) (punctuation 24157 . 24158) (symbol 24138 . 24157) (punctuation 24134 . 24135) (symbol 24120 . 24134) (CONST 24114 . 24119) (INLINE 24107 . 24113) (punctuation 24105 . 24106) (symbol 24101 . 24105) (CLASS 24095 . 24100) (punctuation 24093 . 24094) (symbol 24089 . 24093) (CLASS 24083 . 24088) (punctuation 24071 . 24072) (symbol 24067 . 24071) (CLASS 24061 . 24066) (punctuation 24059 . 24060) (symbol 24055 . 24059) (CLASS 24049 . 24054) (punctuation 24047 . 24048) (symbol 24043 . 24047) (CLASS 24037 . 24042) (punctuation 24035 . 24036) (symbol 24031 . 24035) (CLASS 24025 . 24030) (punctuation 24023 . 24024) (symbol 24017 . 24023) (CLASS 24011 . 24016) (punctuation 24010 . 24011) (TEMPLATE 24001 . 24009) (punctuation 23501 . 23502) (punctuation 23499 . 23500) (symbol 23492 . 23496) (punctuation 23491 . 23492) (punctuation 23490 . 23491) (punctuation 23489 . 23490) (symbol 23480 . 23484) (CONST 23474 . 23479) (punctuation 23472 . 23473) (symbol 23468 . 23472) (CONST 23462 . 23467) (punctuation 23460 . 23461) (symbol 23456 . 23460) (CONST 23450 . 23455) (punctuation 23448 . 23449) (symbol 23444 . 23448) (CONST 23438 . 23443) (punctuation 23436 . 23437) (symbol 23432 . 23436) (CONST 23426 . 23431) (punctuation 23424 . 23425) (symbol 23420 . 23424) (CONST 23414 . 23419) (punctuation 23406 . 23407) (symbol 23389 . 23406) (punctuation 23388 . 23389) (punctuation 23387 . 23388) (symbol 23381 . 23387) (TYPENAME 23372 . 23380) (punctuation 23366 . 23367) (punctuation 23365 . 23366) (punctuation 23363 . 23364) (number 23362 . 23363) (punctuation 23361 . 23362) (symbol 23346 . 23361) (punctuation 23344 . 23345) (number 23343 . 23344) (punctuation 23342 . 23343) (symbol 23336 . 23342) (punctuation 23330 . 23331) (symbol 23311 . 23330) (punctuation 23307 . 23308) (symbol 23293 . 23307) (CONST 23287 . 23292) (INLINE 23280 . 23286) (punctuation 23278 . 23279) (symbol 23274 . 23278) (CLASS 23268 . 23273) (punctuation 23256 . 23257) (symbol 23252 . 23256) (CLASS 23246 . 23251) (punctuation 23244 . 23245) (symbol 23240 . 23244) (CLASS 23234 . 23239) (punctuation 23232 . 23233) (symbol 23228 . 23232) (CLASS 23222 . 23227) (punctuation 23220 . 23221) (symbol 23216 . 23220) (CLASS 23210 . 23215) (punctuation 23208 . 23209) (symbol 23204 . 23208) (CLASS 23198 . 23203) (punctuation 23197 . 23198) (TEMPLATE 23188 . 23196) (semantic-list 22541 . 22571) (semantic-list 22536 . 22541) (punctuation 22522 . 22523) (punctuation 22520 . 22521) (symbol 22513 . 22517) (punctuation 22512 . 22513) (punctuation 22511 . 22512) (punctuation 22510 . 22511) (symbol 22501 . 22505) (CONST 22495 . 22500) (punctuation 22493 . 22494) (symbol 22489 . 22493) (CONST 22483 . 22488) (punctuation 22481 . 22482) (symbol 22477 . 22481) (CONST 22471 . 22476) (punctuation 22463 . 22464) (symbol 22459 . 22463) (CONST 22453 . 22458) (punctuation 22451 . 22452) (symbol 22447 . 22451) (CONST 22441 . 22446) (punctuation 22439 . 22440) (punctuation 22407 . 22408) (punctuation 22392 . 22393) (symbol 22375 . 22392) (punctuation 22374 . 22375) (punctuation 22373 . 22374) (symbol 22367 . 22373) (TYPENAME 22358 . 22366) (punctuation 22352 . 22353) (punctuation 22351 . 22352) (punctuation 22349 . 22350) (symbol 22343 . 22349) (punctuation 22341 . 22342) (number 22340 . 22341) (punctuation 22339 . 22340) (symbol 22324 . 22339) (punctuation 22322 . 22323) (number 22321 . 22322) (punctuation 22320 . 22321) (symbol 22314 . 22320) (punctuation 22308 . 22309) (symbol 22289 . 22308) (punctuation 22285 . 22286) (symbol 22271 . 22285) (CONST 22265 . 22270) (INLINE 22258 . 22264) (punctuation 22256 . 22257) (symbol 22252 . 22256) (CLASS 22246 . 22251) (punctuation 22234 . 22235) (symbol 22230 . 22234) (CLASS 22224 . 22229) (punctuation 22222 . 22223) (symbol 22218 . 22222) (CLASS 22212 . 22217) (punctuation 22210 . 22211) (symbol 22206 . 22210) (CLASS 22200 . 22205) (punctuation 22198 . 22199) (symbol 22194 . 22198) (CLASS 22188 . 22193) (punctuation 22186 . 22187) (symbol 22182 . 22186) (CLASS 22176 . 22181) (punctuation 22164 . 22165) (symbol 22160 . 22164) (CLASS 22154 . 22159) (punctuation 22152 . 22153) (symbol 22148 . 22152) (CLASS 22142 . 22147) (punctuation 22140 . 22141) (symbol 22136 . 22140) (CLASS 22130 . 22135) (punctuation 22128 . 22129) (symbol 22124 . 22128) (CLASS 22118 . 22123) (punctuation 22116 . 22117) (symbol 22110 . 22116) (CLASS 22104 . 22109) (punctuation 22103 . 22104) (TEMPLATE 22094 . 22102) (punctuation 18796 . 18797) (punctuation 18794 . 18795) (symbol 18787 . 18791) (punctuation 18786 . 18787) (punctuation 18785 . 18786) (punctuation 18784 . 18785) (symbol 18775 . 18779) (CONST 18769 . 18774) (punctuation 18767 . 18768) (symbol 18763 . 18767) (CONST 18757 . 18762) (punctuation 18755 . 18756) (symbol 18751 . 18755) (CONST 18745 . 18750) (punctuation 18743 . 18744) (symbol 18739 . 18743) (CONST 18733 . 18738) (punctuation 18731 . 18732) (symbol 18727 . 18731) (CONST 18721 . 18726) (punctuation 18713 . 18714) (symbol 18696 . 18713) (punctuation 18695 . 18696) (punctuation 18694 . 18695) (symbol 18688 . 18694) (TYPENAME 18679 . 18687) (punctuation 18673 . 18674) (punctuation 18672 . 18673) (punctuation 18670 . 18671) (symbol 18664 . 18670) (punctuation 18662 . 18663) (number 18661 . 18662) (punctuation 18660 . 18661) (symbol 18645 . 18660) (punctuation 18643 . 18644) (number 18642 . 18643) (punctuation 18641 . 18642) (symbol 18635 . 18641) (punctuation 18629 . 18630) (symbol 18610 . 18629) (punctuation 18606 . 18607) (symbol 18592 . 18606) (CONST 18586 . 18591) (INLINE 18579 . 18585) (punctuation 18577 . 18578) (symbol 18573 . 18577) (CLASS 18567 . 18572) (punctuation 18555 . 18556) (symbol 18551 . 18555) (CLASS 18545 . 18550) (punctuation 18543 . 18544) (symbol 18539 . 18543) (CLASS 18533 . 18538) (punctuation 18531 . 18532) (symbol 18527 . 18531) (CLASS 18521 . 18526) (punctuation 18519 . 18520) (symbol 18515 . 18519) (CLASS 18509 . 18514) (punctuation 18507 . 18508) (symbol 18501 . 18507) (CLASS 18495 . 18500) (punctuation 18494 . 18495) (TEMPLATE 18485 . 18493) (punctuation 18029 . 18030) (punctuation 18027 . 18028) (symbol 18020 . 18024) (punctuation 18019 . 18020) (punctuation 18018 . 18019) (punctuation 18017 . 18018) (symbol 18008 . 18012) (CONST 18002 . 18007) (punctuation 18000 . 18001) (symbol 17996 . 18000) (CONST 17990 . 17995) (punctuation 17988 . 17989) (symbol 17984 . 17988) (CONST 17978 . 17983) (punctuation 17976 . 17977) (symbol 17972 . 17976) (CONST 17966 . 17971) (punctuation 17964 . 17965) (symbol 17960 . 17964) (CONST 17954 . 17959) (punctuation 17946 . 17947) (symbol 17929 . 17946) (punctuation 17928 . 17929) (punctuation 17927 . 17928) (symbol 17921 . 17927) (TYPENAME 17912 . 17920) (punctuation 17906 . 17907) (punctuation 17905 . 17906) (punctuation 17903 . 17904) (number 17902 . 17903) (punctuation 17901 . 17902) (symbol 17886 . 17901) (punctuation 17884 . 17885) (number 17883 . 17884) (punctuation 17882 . 17883) (symbol 17876 . 17882) (punctuation 17870 . 17871) (symbol 17851 . 17870) (punctuation 17847 . 17848) (symbol 17833 . 17847) (CONST 17827 . 17832) (INLINE 17820 . 17826) (punctuation 17818 . 17819) (symbol 17814 . 17818) (CLASS 17808 . 17813) (punctuation 17806 . 17807) (symbol 17802 . 17806) (CLASS 17796 . 17801) (punctuation 17794 . 17795) (symbol 17790 . 17794) (CLASS 17784 . 17789) (punctuation 17782 . 17783) (symbol 17778 . 17782) (CLASS 17772 . 17777) (punctuation 17770 . 17771) (symbol 17766 . 17770) (CLASS 17760 . 17765) (punctuation 17759 . 17760) (TEMPLATE 17750 . 17758) (semantic-list 17165 . 17189) (semantic-list 17160 . 17165) (punctuation 17146 . 17147) (punctuation 17144 . 17145) (symbol 17137 . 17141) (punctuation 17136 . 17137) (punctuation 17135 . 17136) (punctuation 17134 . 17135) (symbol 17125 . 17129) (CONST 17119 . 17124) (punctuation 17111 . 17112) (symbol 17107 . 17111) (CONST 17101 . 17106) (punctuation 17099 . 17100) (symbol 17095 . 17099) (CONST 17089 . 17094) (punctuation 17087 . 17088) (symbol 17083 . 17087) (CONST 17077 . 17082) (punctuation 17075 . 17076) (punctuation 17049 . 17050) (punctuation 17034 . 17035) (symbol 17017 . 17034) (punctuation 17016 . 17017) (punctuation 17015 . 17016) (symbol 17009 . 17015) (TYPENAME 17000 . 17008) (punctuation 16994 . 16995) (punctuation 16993 . 16994) (punctuation 16991 . 16992) (symbol 16985 . 16991) (punctuation 16983 . 16984) (number 16982 . 16983) (punctuation 16981 . 16982) (symbol 16966 . 16981) (punctuation 16964 . 16965) (number 16963 . 16964) (punctuation 16962 . 16963) (symbol 16956 . 16962) (punctuation 16950 . 16951) (symbol 16931 . 16950) (punctuation 16927 . 16928) (symbol 16913 . 16927) (CONST 16907 . 16912) (INLINE 16900 . 16906) (punctuation 16898 . 16899) (symbol 16894 . 16898) (CLASS 16888 . 16893) (punctuation 16886 . 16887) (symbol 16882 . 16886) (CLASS 16876 . 16881) (punctuation 16874 . 16875) (symbol 16870 . 16874) (CLASS 16864 . 16869) (punctuation 16862 . 16863) (symbol 16858 . 16862) (CLASS 16852 . 16857) (punctuation 16840 . 16841) (symbol 16836 . 16840) (CLASS 16830 . 16835) (punctuation 16828 . 16829) (symbol 16824 . 16828) (CLASS 16818 . 16823) (punctuation 16816 . 16817) (symbol 16812 . 16816) (CLASS 16806 . 16811) (punctuation 16804 . 16805) (symbol 16800 . 16804) (CLASS 16794 . 16799) (punctuation 16792 . 16793) (symbol 16786 . 16792) (CLASS 16780 . 16785) (punctuation 16779 . 16780) (TEMPLATE 16770 . 16778) (punctuation 13803 . 13804) (punctuation 13801 . 13802) (symbol 13794 . 13798) (punctuation 13793 . 13794) (punctuation 13792 . 13793) (punctuation 13791 . 13792) (symbol 13782 . 13786) (CONST 13776 . 13781) (punctuation 13774 . 13775) (symbol 13770 . 13774) (CONST 13764 . 13769) (punctuation 13762 . 13763) (symbol 13758 . 13762) (CONST 13752 . 13757) (punctuation 13750 . 13751) (symbol 13746 . 13750) (CONST 13740 . 13745) (punctuation 13732 . 13733) (symbol 13715 . 13732) (punctuation 13714 . 13715) (punctuation 13713 . 13714) (symbol 13707 . 13713) (TYPENAME 13698 . 13706) (punctuation 13692 . 13693) (punctuation 13691 . 13692) (punctuation 13689 . 13690) (symbol 13683 . 13689) (punctuation 13681 . 13682) (number 13680 . 13681) (punctuation 13679 . 13680) (symbol 13664 . 13679) (punctuation 13662 . 13663) (number 13661 . 13662) (punctuation 13660 . 13661) (symbol 13654 . 13660) (punctuation 13648 . 13649) (symbol 13629 . 13648) (punctuation 13625 . 13626) (symbol 13611 . 13625) (CONST 13605 . 13610) (INLINE 13598 . 13604) (punctuation 13596 . 13597) (symbol 13592 . 13596) (CLASS 13586 . 13591) (punctuation 13584 . 13585) (symbol 13580 . 13584) (CLASS 13574 . 13579) (punctuation 13572 . 13573) (symbol 13568 . 13572) (CLASS 13562 . 13567) (punctuation 13560 . 13561) (symbol 13556 . 13560) (CLASS 13550 . 13555) (punctuation 13548 . 13549) (symbol 13542 . 13548) (CLASS 13536 . 13541) (punctuation 13535 . 13536) (TEMPLATE 13526 . 13534) (punctuation 13119 . 13120) (punctuation 13117 . 13118) (symbol 13110 . 13114) (punctuation 13109 . 13110) (punctuation 13108 . 13109) (punctuation 13107 . 13108) (symbol 13098 . 13102) (CONST 13092 . 13097) (punctuation 13090 . 13091) (symbol 13086 . 13090) (CONST 13080 . 13085) (punctuation 13078 . 13079) (symbol 13074 . 13078) (CONST 13068 . 13073) (punctuation 13066 . 13067) (symbol 13062 . 13066) (CONST 13056 . 13061) (punctuation 13048 . 13049) (symbol 13031 . 13048) (punctuation 13030 . 13031) (punctuation 13029 . 13030) (symbol 13023 . 13029) (TYPENAME 13014 . 13022) (punctuation 13008 . 13009) (punctuation 13007 . 13008) (punctuation 13005 . 13006) (number 13004 . 13005) (punctuation 13003 . 13004) (symbol 12988 . 13003) (punctuation 12986 . 12987) (number 12985 . 12986) (punctuation 12984 . 12985) (symbol 12978 . 12984) (punctuation 12972 . 12973) (symbol 12953 . 12972) (punctuation 12949 . 12950) (symbol 12935 . 12949) (CONST 12929 . 12934) (INLINE 12922 . 12928) (punctuation 12920 . 12921) (symbol 12916 . 12920) (CLASS 12910 . 12915) (punctuation 12908 . 12909) (symbol 12904 . 12908) (CLASS 12898 . 12903) (punctuation 12896 . 12897) (symbol 12892 . 12896) (CLASS 12886 . 12891) (punctuation 12884 . 12885) (symbol 12880 . 12884) (CLASS 12874 . 12879) (punctuation 12873 . 12874) (TEMPLATE 12864 . 12872) (semantic-list 12357 . 12375) (semantic-list 12352 . 12357) (punctuation 12338 . 12339) (punctuation 12336 . 12337) (symbol 12329 . 12333) (punctuation 12328 . 12329) (punctuation 12327 . 12328) (punctuation 12326 . 12327) (symbol 12317 . 12321) (CONST 12311 . 12316) (punctuation 12309 . 12310) (symbol 12305 . 12309) (CONST 12299 . 12304) (punctuation 12297 . 12298) (symbol 12293 . 12297) (CONST 12287 . 12292) (punctuation 12285 . 12286) (punctuation 12265 . 12266) (punctuation 12250 . 12251) (symbol 12233 . 12250) (punctuation 12232 . 12233) (punctuation 12231 . 12232) (symbol 12225 . 12231) (TYPENAME 12216 . 12224) (punctuation 12210 . 12211) (punctuation 12209 . 12210) (punctuation 12207 . 12208) (symbol 12201 . 12207) (punctuation 12199 . 12200) (number 12198 . 12199) (punctuation 12197 . 12198) (symbol 12182 . 12197) (punctuation 12180 . 12181) (number 12179 . 12180) (punctuation 12178 . 12179) (symbol 12172 . 12178) (punctuation 12166 . 12167) (symbol 12147 . 12166) (punctuation 12143 . 12144) (symbol 12129 . 12143) (CONST 12123 . 12128) (INLINE 12116 . 12122) (punctuation 12114 . 12115) (symbol 12110 . 12114) (CLASS 12104 . 12109) (punctuation 12102 . 12103) (symbol 12098 . 12102) (CLASS 12092 . 12097) (punctuation 12080 . 12081) (symbol 12076 . 12080) (CLASS 12070 . 12075) (punctuation 12068 . 12069) (symbol 12064 . 12068) (CLASS 12058 . 12063) (punctuation 12056 . 12057) (symbol 12052 . 12056) (CLASS 12046 . 12051) (punctuation 12044 . 12045) (symbol 12040 . 12044) (CLASS 12034 . 12039) (punctuation 12032 . 12033) (symbol 12026 . 12032) (CLASS 12020 . 12025) (punctuation 12019 . 12020) (TEMPLATE 12010 . 12018) (punctuation 9354 . 9355) (punctuation 9352 . 9353) (symbol 9345 . 9349) (punctuation 9344 . 9345) (punctuation 9343 . 9344) (punctuation 9342 . 9343) (symbol 9333 . 9337) (CONST 9327 . 9332) (punctuation 9325 . 9326) (symbol 9321 . 9325) (CONST 9315 . 9320) (punctuation 9313 . 9314) (symbol 9309 . 9313) (CONST 9303 . 9308) (punctuation 9295 . 9296) (symbol 9278 . 9295) (punctuation 9277 . 9278) (punctuation 9276 . 9277) (symbol 9270 . 9276) (TYPENAME 9261 . 9269) (punctuation 9255 . 9256) (punctuation 9254 . 9255) (punctuation 9252 . 9253) (symbol 9246 . 9252) (punctuation 9244 . 9245) (number 9243 . 9244) (punctuation 9242 . 9243) (symbol 9227 . 9242) (punctuation 9225 . 9226) (number 9224 . 9225) (punctuation 9223 . 9224) (symbol 9217 . 9223) (punctuation 9211 . 9212) (symbol 9192 . 9211) (punctuation 9188 . 9189) (symbol 9174 . 9188) (CONST 9168 . 9173) (INLINE 9161 . 9167) (punctuation 9159 . 9160) (symbol 9155 . 9159) (CLASS 9149 . 9154) (punctuation 9147 . 9148) (symbol 9143 . 9147) (CLASS 9137 . 9142) (punctuation 9135 . 9136) (symbol 9131 . 9135) (CLASS 9125 . 9130) (punctuation 9123 . 9124) (symbol 9117 . 9123) (CLASS 9111 . 9116) (punctuation 9110 . 9111) (TEMPLATE 9101 . 9109) (punctuation 8738 . 8739) (punctuation 8736 . 8737) (symbol 8729 . 8733) (punctuation 8728 . 8729) (punctuation 8727 . 8728) (punctuation 8726 . 8727) (symbol 8717 . 8721) (CONST 8711 . 8716) (punctuation 8709 . 8710) (symbol 8705 . 8709) (CONST 8699 . 8704) (punctuation 8697 . 8698) (symbol 8693 . 8697) (CONST 8687 . 8692) (punctuation 8679 . 8680) (symbol 8662 . 8679) (punctuation 8661 . 8662) (punctuation 8660 . 8661) (symbol 8654 . 8660) (TYPENAME 8645 . 8653) (punctuation 8639 . 8640) (punctuation 8638 . 8639) (punctuation 8636 . 8637) (number 8635 . 8636) (punctuation 8634 . 8635) (symbol 8619 . 8634) (punctuation 8617 . 8618) (number 8616 . 8617) (punctuation 8615 . 8616) (symbol 8609 . 8615) (punctuation 8603 . 8604) (symbol 8584 . 8603) (punctuation 8580 . 8581) (symbol 8566 . 8580) (CONST 8560 . 8565) (INLINE 8553 . 8559) (punctuation 8551 . 8552) (symbol 8547 . 8551) (CLASS 8541 . 8546) (punctuation 8539 . 8540) (symbol 8535 . 8539) (CLASS 8529 . 8534) (punctuation 8527 . 8528) (symbol 8523 . 8527) (CLASS 8517 . 8522) (punctuation 8516 . 8517) (TEMPLATE 8507 . 8515) (semantic-list 8067 . 8079) (semantic-list 8062 . 8067) (punctuation 8048 . 8049) (punctuation 8046 . 8047) (symbol 8039 . 8043) (punctuation 8038 . 8039) (punctuation 8037 . 8038) (punctuation 8036 . 8037) (symbol 8027 . 8031) (CONST 8021 . 8026) (punctuation 8019 . 8020) (symbol 8015 . 8019) (CONST 8009 . 8014) (punctuation 8007 . 8008) (punctuation 7993 . 7994) (punctuation 7978 . 7979) (symbol 7961 . 7978) (punctuation 7960 . 7961) (punctuation 7959 . 7960) (symbol 7953 . 7959) (TYPENAME 7944 . 7952) (punctuation 7938 . 7939) (punctuation 7937 . 7938) (punctuation 7935 . 7936) (symbol 7929 . 7935) (punctuation 7927 . 7928) (number 7926 . 7927) (punctuation 7925 . 7926) (symbol 7910 . 7925) (punctuation 7908 . 7909) (number 7907 . 7908) (punctuation 7906 . 7907) (symbol 7900 . 7906) (punctuation 7894 . 7895) (symbol 7875 . 7894) (punctuation 7871 . 7872) (symbol 7857 . 7871) (CONST 7851 . 7856) (INLINE 7844 . 7850) (punctuation 7842 . 7843) (symbol 7838 . 7842) (CLASS 7832 . 7837) (punctuation 7830 . 7831) (symbol 7826 . 7830) (CLASS 7820 . 7825) (punctuation 7818 . 7819) (symbol 7814 . 7818) (CLASS 7808 . 7813) (punctuation 7806 . 7807) (symbol 7802 . 7806) (CLASS 7796 . 7801) (punctuation 7794 . 7795) (symbol 7788 . 7794) (CLASS 7782 . 7787) (punctuation 7781 . 7782) (TEMPLATE 7772 . 7780) (punctuation 5508 . 5509) (punctuation 5506 . 5507) (symbol 5499 . 5503) (punctuation 5498 . 5499) (punctuation 5497 . 5498) (punctuation 5496 . 5497) (symbol 5492 . 5496) (CONST 5486 . 5491) (punctuation 5484 . 5485) (symbol 5480 . 5484) (CONST 5474 . 5479) (punctuation 5473 . 5474) (symbol 5456 . 5473) (punctuation 5455 . 5456) (punctuation 5454 . 5455) (symbol 5448 . 5454) (TYPENAME 5439 . 5447) (punctuation 5433 . 5434) (punctuation 5432 . 5433) (punctuation 5430 . 5431) (symbol 5424 . 5430) (punctuation 5422 . 5423) (number 5421 . 5422) (punctuation 5420 . 5421) (symbol 5405 . 5420) (punctuation 5403 . 5404) (number 5402 . 5403) (punctuation 5401 . 5402) (symbol 5395 . 5401) (punctuation 5389 . 5390) (symbol 5370 . 5389) (punctuation 5366 . 5367) (symbol 5352 . 5366) (CONST 5346 . 5351) (INLINE 5339 . 5345) (punctuation 5337 . 5338) (symbol 5333 . 5337) (CLASS 5327 . 5332) (punctuation 5325 . 5326) (symbol 5321 . 5325) (CLASS 5315 . 5320) (punctuation 5313 . 5314) (symbol 5307 . 5313) (CLASS 5301 . 5306) (punctuation 5300 . 5301) (TEMPLATE 5291 . 5299) (punctuation 5004 . 5005) (punctuation 5002 . 5003) (symbol 4995 . 4999) (punctuation 4994 . 4995) (punctuation 4993 . 4994) (punctuation 4992 . 4993) (symbol 4988 . 4992) (CONST 4982 . 4987) (punctuation 4980 . 4981) (symbol 4976 . 4980) (CONST 4970 . 4975) (punctuation 4969 . 4970) (symbol 4952 . 4969) (punctuation 4951 . 4952) (punctuation 4950 . 4951) (symbol 4944 . 4950) (TYPENAME 4935 . 4943) (punctuation 4929 . 4930) (punctuation 4928 . 4929) (punctuation 4926 . 4927) (number 4925 . 4926) (punctuation 4924 . 4925) (symbol 4909 . 4924) (punctuation 4907 . 4908) (number 4906 . 4907) (punctuation 4905 . 4906) (symbol 4899 . 4905) (punctuation 4893 . 4894) (symbol 4874 . 4893) (punctuation 4870 . 4871) (symbol 4856 . 4870) (CONST 4850 . 4855) (INLINE 4843 . 4849) (punctuation 4841 . 4842) (symbol 4837 . 4841) (CLASS 4831 . 4836) (punctuation 4829 . 4830) (symbol 4825 . 4829) (CLASS 4819 . 4824) (punctuation 4818 . 4819) (TEMPLATE 4809 . 4817) (semantic-list 4464 . 4470) (semantic-list 4459 . 4464) (punctuation 4445 . 4446) (punctuation 4443 . 4444) (symbol 4436 . 4440) (punctuation 4435 . 4436) (punctuation 4434 . 4435) (punctuation 4433 . 4434) (symbol 4429 . 4433) (CONST 4423 . 4428) (punctuation 4421 . 4422) (punctuation 4413 . 4414) (punctuation 4405 . 4406) (symbol 4388 . 4405) (punctuation 4387 . 4388) (punctuation 4386 . 4387) (symbol 4380 . 4386) (TYPENAME 4371 . 4379) (punctuation 4365 . 4366) (punctuation 4364 . 4365) (punctuation 4362 . 4363) (symbol 4356 . 4362) (punctuation 4354 . 4355) (number 4353 . 4354) (punctuation 4352 . 4353) (symbol 4337 . 4352) (punctuation 4335 . 4336) (number 4334 . 4335) (punctuation 4333 . 4334) (symbol 4327 . 4333) (punctuation 4321 . 4322) (symbol 4302 . 4321) (punctuation 4298 . 4299) (symbol 4284 . 4298) (CONST 4278 . 4283) (INLINE 4271 . 4277) (punctuation 4269 . 4270) (symbol 4265 . 4269) (CLASS 4259 . 4264) (punctuation 4257 . 4258) (symbol 4253 . 4257) (CLASS 4247 . 4252) (punctuation 4245 . 4246) (symbol 4239 . 4245) (CLASS 4233 . 4238) (punctuation 4232 . 4233) (TEMPLATE 4223 . 4231) (punctuation 2236 . 2237) (punctuation 2234 . 2235) (symbol 2227 . 2231) (punctuation 2226 . 2227) (punctuation 2225 . 2226) (punctuation 2224 . 2225) (symbol 2220 . 2224) (CONST 2214 . 2219) (punctuation 2213 . 2214) (symbol 2196 . 2213) (punctuation 2195 . 2196) (punctuation 2194 . 2195) (symbol 2188 . 2194) (TYPENAME 2179 . 2187) (punctuation 2173 . 2174) (punctuation 2172 . 2173) (punctuation 2170 . 2171) (symbol 2164 . 2170) (punctuation 2162 . 2163) (number 2161 . 2162) (punctuation 2160 . 2161) (symbol 2145 . 2160) (punctuation 2143 . 2144) (number 2142 . 2143) (punctuation 2141 . 2142) (symbol 2135 . 2141) (punctuation 2129 . 2130) (symbol 2110 . 2129) (punctuation 2106 . 2107) (symbol 2092 . 2106) (CONST 2086 . 2091) (INLINE 2079 . 2085) (punctuation 2077 . 2078) (symbol 2073 . 2077) (CLASS 2067 . 2072) (punctuation 2065 . 2066) (symbol 2059 . 2065) (CLASS 2053 . 2058) (punctuation 2052 . 2053) (TEMPLATE 2043 . 2051) (punctuation 1800 . 1801) (punctuation 1798 . 1799) (symbol 1791 . 1795) (punctuation 1790 . 1791) (punctuation 1789 . 1790) (punctuation 1788 . 1789) (symbol 1784 . 1788) (CONST 1778 . 1783) (punctuation 1777 . 1778) (symbol 1760 . 1777) (punctuation 1759 . 1760) (punctuation 1758 . 1759) (symbol 1752 . 1758) (TYPENAME 1743 . 1751) (punctuation 1737 . 1738) (punctuation 1736 . 1737) (punctuation 1734 . 1735) (number 1733 . 1734) (punctuation 1732 . 1733) (symbol 1717 . 1732) (punctuation 1715 . 1716) (number 1714 . 1715) (punctuation 1713 . 1714) (symbol 1707 . 1713) (punctuation 1701 . 1702) (symbol 1682 . 1701) (punctuation 1678 . 1679) (symbol 1664 . 1678) (CONST 1658 . 1663) (INLINE 1651 . 1657) (punctuation 1649 . 1650) (symbol 1645 . 1649) (CLASS 1639 . 1644) (punctuation 1638 . 1639) (TEMPLATE 1629 . 1637) (semantic-list 1339 . 1341) (semantic-list 1333 . 1339) (punctuation 1319 . 1320) (punctuation 1317 . 1318) (symbol 1310 . 1314) (punctuation 1309 . 1310) (punctuation 1308 . 1309) (punctuation 1307 . 1308) (punctuation 1303 . 1304) (punctuation 1295 . 1296) (symbol 1278 . 1295) (punctuation 1277 . 1278) (punctuation 1276 . 1277) (symbol 1270 . 1276) (TYPENAME 1261 . 1269) (punctuation 1255 . 1256) (punctuation 1254 . 1255) (punctuation 1252 . 1253) (symbol 1246 . 1252) (punctuation 1244 . 1245) (number 1243 . 1244) (punctuation 1242 . 1243) (symbol 1227 . 1242) (punctuation 1225 . 1226) (number 1224 . 1225) (punctuation 1223 . 1224) (symbol 1217 . 1223) (punctuation 1211 . 1212) (symbol 1192 . 1211) (punctuation 1188 . 1189) (symbol 1174 . 1188) (CONST 1168 . 1173) (INLINE 1161 . 1167) (punctuation 1159 . 1160) (symbol 1153 . 1159) (CLASS 1147 . 1152) (punctuation 1146 . 1147) (TEMPLATE 1137 . 1145))
    :lexical-table 
        '(("BOOST_LAMBDA_BIND_FUNCTIONS_HPP")
          )

    )
   (semanticdb-table "lambda_config.hpp"
    :major-mode 'c++-mode
    :tags 
        '( ("BOOST_LAMBDA_LAMBDA_CONFIG_HPP" variable (:constant-flag t) nil [464 494])
            ("BOOST_REF_TO_FUNC_CONFLICTS_WITH_REF_TO_T" variable (:constant-flag t) nil [618 659])
            ("BOOST_LAMBDA_INCORRECT_BIND_OVERLOADING" variable (:constant-flag t) nil [673 712])
            ("BOOST_NO_TEMPLATED_STREAMS" variable (:constant-flag t) nil [784 810])
            ("BOOST_LAMBDA_INCORRECT_BIND_OVERLOADING" variable (:constant-flag t) nil [824 863])
            ("BOOST_LAMBDA_FAILS_IN_TEMPLATE_KEYWORD_AFTER_SCOPE_OPER" variable (:constant-flag t) nil [935 990])
            ("BOOST_NO_FDECL_TEMPLATES_AS_TEMPLATE_TEMPLATE_PARAMS" variable (:constant-flag t) nil [1052 1104]))          
    :file "lambda_config.hpp"
    :pointmax 1138
    :fsize 1137
    :lastmodtime '(17765 48449)
    :unmatched-syntax 'nil
    :lexical-table 
        '(("BOOST_LAMBDA_INCORRECT_BIND_OVERLOADING")
          ("BOOST_LAMBDA_FAILS_IN_TEMPLATE_KEYWORD_AFTER_SCOPE_OPER")
          ("BOOST_NO_TEMPLATED_STREAMS")
          ("BOOST_NO_FDECL_TEMPLATES_AS_TEMPLATE_TEMPLATE_PARAMS")
          ("BOOST_LAMBDA_LAMBDA_CONFIG_HPP")
          ("BOOST_REF_TO_FUNC_CONFLICTS_WITH_REF_TO_T")
          )

    )
   (semanticdb-table "lambda_fwd.hpp"
    :major-mode 'c++-mode
    :tags 
        '( ("BOOST_LAMBDA_FWD_HPP" variable (:constant-flag t) nil [445 465])
            ("boost" type
               (:members 
                  ( ("lambda" type
                       (:members 
                          ( ("detail" type
                               (:members 
                                  ( ("generate_error" type
                                       (:template 
                                          ( ("T" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :prototype t)
                                        (reparse-symbol namespacesubparts) [527 567]))                                  
                                :type "namespace")
                                (reparse-symbol namespacesubparts) [507 570])
                            ("placeholder" type
                               (:template 
                                  ( ("int" type nil nil nil))                                  
                                :type "struct"
                                :prototype t)
                                (reparse-symbol namespacesubparts) [639 675])
                            ("function_adaptor" type
                               (:template 
                                  ( ("Func" type (:type "class") nil nil))                                  
                                :type "struct"
                                :prototype t)
                                (reparse-symbol namespacesubparts) [698 745])
                            ("action" type
                               (:template 
                                  ( ("int" type nil nil nil)
                                    ("Act" type (:type "class") nil nil))                                  
                                :type "class"
                                :prototype t)
                                (reparse-symbol namespacesubparts) [747 788])
                            ("lambda_functor" type
                               (:template 
                                  ( ("Base" type (:type "class") nil nil))                                  
                                :type "class"
                                :prototype t)
                                (reparse-symbol namespacesubparts) [790 834])
                            ("lambda_functor_base" type
                               (:template 
                                  ( ("Act" type (:type "class") nil nil)
                                    ("Args" type (:type "class") nil nil))                                  
                                :type "class"
                                :prototype t)
                                (reparse-symbol namespacesubparts) [836 896]))                          
                        :type "namespace")
                        (reparse-symbol namespacesubparts) [486 899]))                  
                :type "namespace")
                nil [467 921])
            ("CALL_TEMPLATE_ARGS" variable (:constant-flag t) nil [1197 1215])
            ("CALL_FORMAL_ARGS" variable (:constant-flag t) nil [1261 1277])
            ("CALL_ACTUAL_ARGS" variable (:constant-flag t) nil [1313 1329])
            ("CALL_ACTUAL_ARGS_NO_ENV" variable (:constant-flag t) nil [1351 1374])
            ("CALL_REFERENCE_TYPES" variable (:constant-flag t) nil [1391 1411])
            ("CALL_PLAIN_TYPES" variable (:constant-flag t) nil [1437 1453])
            ("boost" type
               (:members 
                  ( ("lambda" type
                       (:members 
                          ( ("detail" type
                               (:members 
                                  ( ("do_nothing" function
                                       (:template 
                                          ( ("A1" type (:type "class") nil nil)
                                            ("A2" type (:type "class") nil nil)
                                            ("A3" type (:type "class") nil nil)
                                            ("A4" type (:type "class") nil nil))                                          
                                        :type "void"
                                        :arguments 
                                          ( ("" variable
                                               (:reference 1
                                                :type ("A1" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [1590 1594])
                                            ("" variable
                                               (:reference 1
                                                :type ("A2" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [1595 1599])
                                            ("" variable
                                               (:reference 1
                                                :type ("A3" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [1600 1604])
                                            ("" variable
                                               (:reference 1
                                                :type ("A4" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [1605 1609]))                                          )
                                        (reparse-symbol namespacesubparts) [1525 1612]))                                  
                                :type "namespace")
                                (reparse-symbol namespacesubparts) [1505 1615]))                          
                        :type "namespace")
                        (reparse-symbol namespacesubparts) [1486 1627]))                  
                :type "namespace")
                nil [1468 1639])
            ("CALL_USE_ARGS" variable (:constant-flag t) nil [1704 1717]))          
    :file "lambda_fwd.hpp"
    :pointmax 1780
    :fsize 1779
    :lastmodtime '(17765 48449)
    :unmatched-syntax 'nil
    :lexical-table 
        '(("CALL_TEMPLATE_ARGS" . 
              ((CLASS "class" 1216 . 1221) (symbol "A" 1222 . 1223) (punctuation "," 1223 . 1224) (CLASS "class" 1225 . 1230) (symbol "B" 1231 . 1232) (punctuation "," 1232 . 1233) (CLASS "class" 1234 . 1239) (symbol "C" 1240 . 1241) (punctuation "," 1241 . 1242) (CLASS "class" 1243 . 1248) (symbol "Env" 1249 . 1252)))
          ("CALL_REFERENCE_TYPES" . 
              ((symbol "A" 1412 . 1413) (punctuation "&" 1413 . 1414) (punctuation "," 1414 . 1415) (symbol "B" 1416 . 1417) (punctuation "&" 1417 . 1418) (punctuation "," 1418 . 1419) (symbol "C" 1420 . 1421) (punctuation "&" 1421 . 1422) (punctuation "," 1422 . 1423) (symbol "Env" 1424 . 1427) (punctuation "&" 1427 . 1428)))
          ("CALL_FORMAL_ARGS" . 
              ((symbol "A" 1278 . 1279) (punctuation "&" 1279 . 1280) (symbol "a" 1281 . 1282) (punctuation "," 1282 . 1283) (symbol "B" 1284 . 1285) (punctuation "&" 1285 . 1286) (symbol "b" 1287 . 1288) (punctuation "," 1288 . 1289) (symbol "C" 1290 . 1291) (punctuation "&" 1291 . 1292) (symbol "c" 1293 . 1294) (punctuation "," 1294 . 1295) (symbol "Env" 1296 . 1299) (punctuation "&" 1299 . 1300) (symbol "env" 1301 . 1304)))
          ("CALL_PLAIN_TYPES" . 
              ((symbol "A" 1454 . 1455) (punctuation "," 1455 . 1456) (symbol "B" 1457 . 1458) (punctuation "," 1458 . 1459) (symbol "C" 1460 . 1461) (punctuation "," 1461 . 1462) (symbol "Env" 1463 . 1466)))
          ("CALL_USE_ARGS" . 
              ((punctuation ":" 1720 . 1721) (punctuation ":" 1721 . 1722) (symbol "boost" 1722 . 1727) (punctuation ":" 1727 . 1728) (punctuation ":" 1728 . 1729) (symbol "lambda" 1729 . 1735) (punctuation ":" 1735 . 1736) (punctuation ":" 1736 . 1737) (symbol "detail" 1737 . 1743) (punctuation ":" 1743 . 1744) (punctuation ":" 1744 . 1745) (symbol "do_nothing" 1745 . 1755) (semantic-list "(a, b, c, env)" 1755 . 1769)))
          ("BOOST_LAMBDA_FWD_HPP")
          ("CALL_ACTUAL_ARGS" . 
              ((symbol "a" 1330 . 1331) (punctuation "," 1331 . 1332) (symbol "b" 1333 . 1334) (punctuation "," 1334 . 1335) (symbol "c" 1336 . 1337) (punctuation "," 1337 . 1338) (symbol "env" 1339 . 1342)))
          ("CALL_ACTUAL_ARGS_NO_ENV" . 
              ((symbol "a" 1375 . 1376) (punctuation "," 1376 . 1377) (symbol "b" 1378 . 1379) (punctuation "," 1379 . 1380) (symbol "c" 1381 . 1382)))
          )

    )
   (semanticdb-table "arity_code.hpp"
    :major-mode 'c++-mode
    :tags 
        '( ("BOOST_LAMBDA_ARITY_CODE_HPP" variable (:constant-flag t) nil [450 477])
            ("boost/type_traits/cv_traits.hpp" include nil nil [479 521])
            ("boost/type_traits/transform_traits.hpp" include nil nil [522 571])
            ("boost" type
               (:members 
                  ( ("lambda" type
                       (:members 
                          ( ("" type
                               (:members 
                                  ( ("NONE" variable
                                       (:constant-flag t
                                        :default-value (1077 1081)
                                        :type "int")
                                        (reparse-symbol enumsubparts) [1058 1081])
                                    ("FIRST" variable
                                       (:constant-flag t
                                        :default-value (1152 1156)
                                        :type "int")
                                        (reparse-symbol enumsubparts) [1133 1156])
                                    ("SECOND" variable
                                       (:constant-flag t
                                        :default-value (1185 1189)
                                        :type "int")
                                        (reparse-symbol enumsubparts) [1166 1189])
                                    ("THIRD" variable
                                       (:constant-flag t
                                        :default-value (1218 1222)
                                        :type "int")
                                        (reparse-symbol enumsubparts) [1199 1222])
                                    ("EXCEPTION" variable
                                       (:constant-flag t
                                        :default-value (1251 1255)
                                        :type "int")
                                        (reparse-symbol enumsubparts) [1232 1255])
                                    ("RETHROW" variable
                                       (:constant-flag t
                                        :default-value (1284 1288)
                                        :type "int")
                                        (reparse-symbol enumsubparts) [1265 1288]))                                  
                                :type "enum")
                                (reparse-symbol namespacesubparts) [1051 1290])
                            ("get_tuple_arity" type
                               (:template 
                                  ( ("T" type (:type "class") nil nil))                                  
                                :type "struct"
                                :prototype t)
                                (reparse-symbol namespacesubparts) [1293 1334])
                            ("detail" type
                               (:members 
                                  ( ("get_arity_" type
                                       (:template 
                                          ( ("T" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :prototype t)
                                        (reparse-symbol namespacesubparts) [1356 1393]))                                  
                                :type "namespace")
                                (reparse-symbol namespacesubparts) [1336 1396])
                            ("get_arity" type
                               (:template 
                                  ( ("T" type (:type "class") nil nil))                                  
                                :type "struct"
                                :members 
                                  ( ("BOOST_STATIC_CONSTANT" function
                                       (:prototype-flag t
                                        :arguments 
                                          ( ("" variable (:type "int") (reparse-symbol arg-sub-list) [1476 1480])
                                            ("" variable (:type ("value" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1481 1488])
                                            ("" variable (:type ("detail::get_arity_" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1489 1508])
                                            ("" variable
                                               (:typemodifiers ("typename")
                                                :type ("boost::remove_cv" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [1508 1534])
                                            ("" variable
                                               (:typemodifiers ("typename")
                                                :type ("boost::remove_reference::type" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [1534 1576])
                                            ("" variable (:type ("type" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1578 1583])
                                            ("" variable (:type ("value" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1585 1591]))                                          
                                        :type "int")
                                        (reparse-symbol classsubparts) [1454 1592]))                                  )
                                (reparse-symbol namespacesubparts) [1413 1596])
                            ("detail" type
                               (:members 
                                  ( ("get_arity_" type
                                       (:template 
                                          ( ("T" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :members 
                                          ( ("BOOST_STATIC_CONSTANT" function
                                               (:prototype-flag t
                                                :arguments 
                                                  ( ("" variable (:type "int") (reparse-symbol arg-sub-list) [1680 1684])
                                                    ("" variable (:type ("value" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1685 1692]))                                                  
                                                :type "int")
                                                (reparse-symbol classsubparts) [1658 1696]))                                          )
                                        (reparse-symbol namespacesubparts) [1618 1699])
                                    ("get_arity_" type
                                       (:template 
                                          ( ("T" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :members 
                                          ( ("BOOST_STATIC_CONSTANT" function
                                               (:prototype-flag t
                                                :arguments 
                                                  ( ("" variable (:type "int") (reparse-symbol arg-sub-list) [1783 1787])
                                                    ("" variable (:type ("value" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1788 1795])
                                                    ("" variable (:type ("get_arity" type
                                                         (:template-specifier 
                                                            ( ("T" type nil nil nil))                                                            
                                                          :type "class")
                                                          nil nil)) (reparse-symbol arg-sub-list) [1796 1809])
                                                    ("" variable (:type ("value" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1810 1816]))                                                  
                                                :type "int")
                                                (reparse-symbol classsubparts) [1761 1817]))                                          
                                        :template-specifier 
                                          ( ("lambda_functor" type nil nil nil))                                          )
                                        (reparse-symbol namespacesubparts) [1701 1820])
                                    ("get_arity_" type
                                       (:template 
                                          ( ("Action" type (:type "class") nil nil)
                                            ("Args" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :members 
                                          ( ("BOOST_STATIC_CONSTANT" function
                                               (:prototype-flag t
                                                :arguments 
                                                  ( ("" variable (:type "int") (reparse-symbol arg-sub-list) [1937 1941])
                                                    ("" variable (:type ("value" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1942 1949])
                                                    ("" variable (:type ("get_tuple_arity" type
                                                         (:template-specifier 
                                                            ( ("Args" type nil nil nil))                                                            
                                                          :type "class")
                                                          nil nil)) (reparse-symbol arg-sub-list) [1950 1972])
                                                    ("" variable (:type ("value" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1973 1979]))                                                  
                                                :type "int")
                                                (reparse-symbol classsubparts) [1915 1980]))                                          
                                        :template-specifier 
                                          ( ("lambda_functor_base" type nil nil nil))                                          )
                                        (reparse-symbol namespacesubparts) [1822 1983])
                                    ("get_arity_" type
                                       (:template 
                                          ( ("int" type nil nil nil))                                          
                                        :type "struct"
                                        :members 
                                          ( ("BOOST_STATIC_CONSTANT" function
                                               (:prototype-flag t
                                                :arguments 
                                                  ( ("" variable (:type "int") (reparse-symbol arg-sub-list) [2062 2066])
                                                    ("" variable (:type ("value" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2067 2074])
                                                    ("" variable (:type ("I" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2075 2077]))                                                  
                                                :type "int")
                                                (reparse-symbol classsubparts) [2040 2078]))                                          
                                        :template-specifier 
                                          ( ("placeholder" type nil nil nil))                                          )
                                        (reparse-symbol namespacesubparts) [1985 2081]))                                  
                                :type "namespace")
                                (reparse-symbol namespacesubparts) [1598 2084])
                            ("get_tuple_arity" type
                               (:template 
                                  ( ("T" type (:type "class") nil nil))                                  
                                :type "struct"
                                :members 
                                  ( ("BOOST_STATIC_CONSTANT" function
                                       (:prototype-flag t
                                        :arguments 
                                          ( ("" variable (:type "int") (reparse-symbol arg-sub-list) [2164 2168])
                                            ("" variable (:type ("value" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2169 2176])
                                            ("" variable (:type ("get_arity" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2177 2187])
                                            ("" variable
                                               (:typemodifiers ("typename")
                                                :type ("T::head_type" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [2187 2209])
                                            ("" variable (:type ("value" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2211 2218])
                                            ("" variable (:type ("get_tuple_arity" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2219 2235])
                                            ("" variable
                                               (:typemodifiers ("typename")
                                                :type ("T::tail_type" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [2235 2257])
                                            ("" variable (:type ("value" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2259 2265]))                                          
                                        :type "int")
                                        (reparse-symbol classsubparts) [2142 2266]))                                  )
                                (reparse-symbol namespacesubparts) [2097 2269])
                            ("get_tuple_arity" type
                               (:type "struct"
                                :members 
                                  ( ("BOOST_STATIC_CONSTANT" function
                                       (:prototype-flag t
                                        :arguments 
                                          ( ("" variable (:type "int") (reparse-symbol arg-sub-list) [2343 2347])
                                            ("" variable (:type ("value" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2348 2355]))                                          
                                        :type "int")
                                        (reparse-symbol classsubparts) [2321 2359]))                                  
                                :template-specifier 
                                  ( ("null_type" type nil nil nil))                                  )
                                (reparse-symbol namespacesubparts) [2272 2362])
                            ("has_placeholder" type
                               (:template 
                                  ( ("T" type (:type "class") nil nil)
                                    ("int" type nil nil nil))                                  
                                :type "struct"
                                :members 
                                  ( ("BOOST_STATIC_CONSTANT" function
                                       (:prototype-flag t
                                        :arguments 
                                          ( ("" variable (:type "bool") (reparse-symbol arg-sub-list) [2495 2500])
                                            ("" variable (:type ("value" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2501 2508]))                                          
                                        :type "int")
                                        (reparse-symbol classsubparts) [2473 2541]))                                  )
                                (reparse-symbol namespacesubparts) [2421 2544])
                            ("includes_placeholder" type
                               (:template 
                                  ( ("int" type nil nil nil)
                                    ("int" type nil nil nil))                                  
                                :type "struct"
                                :members 
                                  ( ("BOOST_STATIC_CONSTANT" function
                                       (:prototype-flag t
                                        :arguments 
                                          ( ("" variable (:type "bool") (reparse-symbol arg-sub-list) [2624 2629])
                                            ("" variable (:type ("value" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2630 2637]))                                          
                                        :type "int")
                                        (reparse-symbol classsubparts) [2602 2652]))                                  )
                                (reparse-symbol namespacesubparts) [2547 2655])
                            ("lacks_placeholder" type
                               (:template 
                                  ( ("int" type nil nil nil)
                                    ("int" type nil nil nil))                                  
                                :type "struct"
                                :members 
                                  ( ("BOOST_STATIC_CONSTANT" function
                                       (:prototype-flag t
                                        :arguments 
                                          ( ("" variable (:type "bool") (reparse-symbol arg-sub-list) [2731 2736])
                                            ("" variable (:type ("value" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2737 2744]))                                          
                                        :type "int")
                                        (reparse-symbol classsubparts) [2709 2761]))                                  )
                                (reparse-symbol namespacesubparts) [2657 2764]))                          
                        :type "namespace")
                        (reparse-symbol namespacesubparts) [592 2768]))                  
                :type "namespace")
                nil [573 2790]))          
    :file "arity_code.hpp"
    :pointmax 2818
    :fsize 2817
    :lastmodtime '(17765 48449)
    :unmatched-syntax '((semantic-list 2745 . 2759) (punctuation 2743 . 2744) (number 2649 . 2650) (punctuation 2647 . 2648) (punctuation 2646 . 2647) (semantic-list 2638 . 2645) (punctuation 2636 . 2637) (number 2538 . 2539) (punctuation 2536 . 2537) (punctuation 2535 . 2536) (semantic-list 2509 . 2534) (punctuation 2507 . 2508) (number 2356 . 2357) (punctuation 2354 . 2355) (punctuation 2258 . 2259) (punctuation 2257 . 2258) (punctuation 2256 . 2257) (punctuation 2234 . 2235) (punctuation 2217 . 2218) (punctuation 2210 . 2211) (punctuation 2209 . 2210) (punctuation 2208 . 2209) (punctuation 2186 . 2187) (punctuation 2175 . 2176) (punctuation 2073 . 2074) (punctuation 1972 . 1973) (punctuation 1971 . 1972) (punctuation 1948 . 1949) (punctuation 1809 . 1810) (punctuation 1808 . 1809) (punctuation 1794 . 1795) (number 1693 . 1694) (punctuation 1691 . 1692) (punctuation 1584 . 1585) (punctuation 1583 . 1584) (punctuation 1582 . 1583) (punctuation 1577 . 1578) (punctuation 1576 . 1577) (punctuation 1575 . 1576) (punctuation 1533 . 1534) (punctuation 1507 . 1508) (punctuation 1487 . 1488))
    :lexical-table 
        '(("BOOST_LAMBDA_ARITY_CODE_HPP")
          )

    )
   (semanticdb-table "actions.hpp"
    :major-mode 'c++-mode
    :tags 
        '( ("BOOST_LAMBDA_ACTIONS_HPP" variable (:constant-flag t) nil [458 482])
            ("boost" type
               (:members 
                  ( ("lambda" type
                       (:members 
                          ( ("action" type
                               (:template 
                                  ( ("int" type nil nil nil)
                                    ("Act" type (:type "class") nil nil))                                  
                                :type "class"
                                :prototype t)
                                (reparse-symbol namespacesubparts) [525 569])
                            ("assignment_action" type (:type "class") (reparse-symbol namespacesubparts) [689 716])
                            ("subscript_action" type (:type "class") (reparse-symbol namespacesubparts) [717 743])
                            ("other_action" type
                               (:template 
                                  ( ("Action" type (:type "class") nil nil))                                  
                                :type "class"
                                :prototype t)
                                (reparse-symbol namespacesubparts) [745 788])
                            ("explicit_return_type_action" type
                               (:template 
                                  ( ("RET" type (:type "class") nil nil))                                  
                                :type "class")
                                (reparse-symbol namespacesubparts) [840 898])
                            ("protect_action" type (:type "struct") (reparse-symbol namespacesubparts) [962 987])
                            ("comma_action" type (:type "struct") (reparse-symbol namespacesubparts) [1040 1063])
                            ("is_protectable" type
                               (:template 
                                  ( ("Action" type (:type "class") nil nil))                                  
                                :type "struct"
                                :members 
                                  ( ("BOOST_STATIC_CONSTANT" function
                                       (:prototype-flag t
                                        :arguments 
                                          ( ("" variable (:type "bool") (reparse-symbol arg-sub-list) [1231 1236])
                                            ("" variable (:type ("value" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1237 1244])
                                            ("" variable (:type ("false" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1245 1251]))                                          
                                        :type "int")
                                        (reparse-symbol classsubparts) [1209 1252]))                                  )
                                (reparse-symbol namespacesubparts) [1159 1255])
                            ("is_protectable" type
                               (:type "struct"
                                :members 
                                  ( ("BOOST_STATIC_CONSTANT" function
                                       (:prototype-flag t
                                        :arguments 
                                          ( ("" variable (:type "bool") (reparse-symbol arg-sub-list) [1448 1453])
                                            ("" variable (:type ("value" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1454 1461])
                                            ("" variable (:type ("true" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1462 1467]))                                          
                                        :type "int")
                                        (reparse-symbol classsubparts) [1426 1468]))                                  
                                :template-specifier 
                                  ( ("other_action" type nil nil nil))                                  )
                                (reparse-symbol namespacesubparts) [1360 1471])
                            ("detail" type
                               (:members 
                                  ( ("unspecified" type (:type "class") (reparse-symbol namespacesubparts) [1698 1719]))                                  
                                :type "namespace")
                                (reparse-symbol namespacesubparts) [1474 1721])
                            ("function_action" type (:type "class") (reparse-symbol namespacesubparts) [2166 2191])
                            ("function_action" type
                               (:template 
                                  ( ("T" type (:type "class") nil nil))                                  
                                :type "class"
                                :members 
                                  ( ("public" label nil (reparse-symbol classsubparts) [2244 2251])
                                    ("apply" function
                                       (:template 
                                          ( ("RET" type (:type "class") nil nil)
                                            ("A1" type (:type "class") nil nil))                                          
                                        :type ("RET" type (:type "class") nil nil)
                                        :arguments 
                                          ( ("a1" variable
                                               (:reference 1
                                                :type ("A1" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [2303 2310]))                                          
                                        :typemodifiers ("static"))
                                        (reparse-symbol classsubparts) [2254 2414]))                                  
                                :template-specifier (("1") ("T" type nil nil nil)))
                                (reparse-symbol namespacesubparts) [2196 2417])
                            ("function_action" type
                               (:template 
                                  ( ("T" type (:type "class") nil nil))                                  
                                :type "class"
                                :members 
                                  ( ("public" label nil (reparse-symbol classsubparts) [2467 2474])
                                    ("apply" function
                                       (:template 
                                          ( ("RET" type (:type "class") nil nil)
                                            ("A1" type (:type "class") nil nil)
                                            ("A2" type (:type "class") nil nil))                                          
                                        :type ("RET" type (:type "class") nil nil)
                                        :arguments 
                                          ( ("a1" variable
                                               (:reference 1
                                                :type ("A1" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [2536 2543])
                                            ("a2" variable
                                               (:reference 1
                                                :type ("A2" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [2544 2551]))                                          
                                        :typemodifiers ("static"))
                                        (reparse-symbol classsubparts) [2477 2659]))                                  
                                :template-specifier (("2") ("T" type nil nil nil)))
                                (reparse-symbol namespacesubparts) [2419 2662])
                            ("function_action" type
                               (:template 
                                  ( ("T" type (:type "class") nil nil))                                  
                                :type "class"
                                :members 
                                  ( ("public" label nil (reparse-symbol classsubparts) [2712 2719])
                                    ("apply" function
                                       (:template 
                                          ( ("RET" type (:type "class") nil nil)
                                            ("A1" type (:type "class") nil nil)
                                            ("A2" type (:type "class") nil nil)
                                            ("A3" type (:type "class") nil nil))                                          
                                        :type ("RET" type (:type "class") nil nil)
                                        :arguments 
                                          ( ("a1" variable
                                               (:reference 1
                                                :type ("A1" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [2791 2798])
                                            ("a2" variable
                                               (:reference 1
                                                :type ("A2" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [2799 2806])
                                            ("a3" variable
                                               (:reference 1
                                                :type ("A3" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [2807 2814]))                                          
                                        :typemodifiers ("static"))
                                        (reparse-symbol classsubparts) [2722 2926]))                                  
                                :template-specifier (("3") ("T" type nil nil nil)))
                                (reparse-symbol namespacesubparts) [2664 2929])
                            ("function_action" type
                               (:template 
                                  ( ("T" type (:type "class") nil nil))                                  
                                :type "class"
                                :members 
                                  ( ("public" label nil (reparse-symbol classsubparts) [2979 2986])
                                    ("apply" function
                                       (:template 
                                          ( ("RET" type (:type "class") nil nil)
                                            ("A1" type (:type "class") nil nil)
                                            ("A2" type (:type "class") nil nil)
                                            ("A3" type (:type "class") nil nil)
                                            ("A4" type (:type "class") nil nil))                                          
                                        :type ("RET" type (:type "class") nil nil)
                                        :arguments 
                                          ( ("a1" variable
                                               (:reference 1
                                                :type ("A1" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [3068 3075])
                                            ("a2" variable
                                               (:reference 1
                                                :type ("A2" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [3076 3083])
                                            ("a3" variable
                                               (:reference 1
                                                :type ("A3" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [3084 3091])
                                            ("a4" variable
                                               (:reference 1
                                                :type ("A4" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [3092 3099]))                                          
                                        :typemodifiers ("static"))
                                        (reparse-symbol classsubparts) [2989 3215]))                                  
                                :template-specifier (("4") ("T" type nil nil nil)))
                                (reparse-symbol namespacesubparts) [2931 3218])
                            ("function_action" type
                               (:template 
                                  ( ("T" type (:type "class") nil nil))                                  
                                :type "class"
                                :members 
                                  ( ("public" label nil (reparse-symbol classsubparts) [3268 3275])
                                    ("apply" function
                                       (:template 
                                          ( ("RET" type (:type "class") nil nil)
                                            ("A1" type (:type "class") nil nil)
                                            ("A2" type (:type "class") nil nil)
                                            ("A3" type (:type "class") nil nil)
                                            ("A4" type (:type "class") nil nil)
                                            ("A5" type (:type "class") nil nil))                                          
                                        :type ("RET" type (:type "class") nil nil)
                                        :arguments 
                                          ( ("a1" variable
                                               (:reference 1
                                                :type ("A1" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [3367 3374])
                                            ("a2" variable
                                               (:reference 1
                                                :type ("A2" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [3375 3382])
                                            ("a3" variable
                                               (:reference 1
                                                :type ("A3" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [3383 3390])
                                            ("a4" variable
                                               (:reference 1
                                                :type ("A4" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [3391 3398])
                                            ("a5" variable
                                               (:reference 1
                                                :type ("A5" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [3399 3406]))                                          
                                        :typemodifiers ("static"))
                                        (reparse-symbol classsubparts) [3278 3526]))                                  
                                :template-specifier (("5") ("T" type nil nil nil)))
                                (reparse-symbol namespacesubparts) [3220 3529])
                            ("function_action" type
                               (:template 
                                  ( ("T" type (:type "class") nil nil))                                  
                                :type "class"
                                :members 
                                  ( ("public" label nil (reparse-symbol classsubparts) [3579 3586])
                                    ("apply" function
                                       (:template 
                                          ( ("RET" type (:type "class") nil nil)
                                            ("A1" type (:type "class") nil nil)
                                            ("A2" type (:type "class") nil nil)
                                            ("A3" type (:type "class") nil nil)
                                            ("A4" type (:type "class") nil nil)
                                            ("A5" type (:type "class") nil nil)
                                            ("A6" type (:type "class") nil nil))                                          
                                        :type ("RET" type (:type "class") nil nil)
                                        :arguments 
                                          ( ("a1" variable
                                               (:reference 1
                                                :type ("A1" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [3700 3707])
                                            ("a2" variable
                                               (:reference 1
                                                :type ("A2" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [3708 3715])
                                            ("a3" variable
                                               (:reference 1
                                                :type ("A3" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [3716 3723])
                                            ("a4" variable
                                               (:reference 1
                                                :type ("A4" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [3724 3731])
                                            ("a5" variable
                                               (:reference 1
                                                :type ("A5" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [3732 3739])
                                            ("a6" variable
                                               (:reference 1
                                                :type ("A6" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [3740 3747]))                                          
                                        :typemodifiers ("static"))
                                        (reparse-symbol classsubparts) [3589 3871]))                                  
                                :template-specifier (("6") ("T" type nil nil nil)))
                                (reparse-symbol namespacesubparts) [3531 3874])
                            ("function_action" type
                               (:template 
                                  ( ("T" type (:type "class") nil nil))                                  
                                :type "class"
                                :members 
                                  ( ("public" label nil (reparse-symbol classsubparts) [3924 3931])
                                    ("apply" function
                                       (:template 
                                          ( ("RET" type (:type "class") nil nil)
                                            ("A1" type (:type "class") nil nil)
                                            ("A2" type (:type "class") nil nil)
                                            ("A3" type (:type "class") nil nil)
                                            ("A4" type (:type "class") nil nil)
                                            ("A5" type (:type "class") nil nil)
                                            ("A6" type (:type "class") nil nil)
                                            ("A7" type (:type "class") nil nil))                                          
                                        :type ("RET" type (:type "class") nil nil)
                                        :arguments 
                                          ( ("a1" variable
                                               (:reference 1
                                                :type ("A1" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [4056 4063])
                                            ("a2" variable
                                               (:reference 1
                                                :type ("A2" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [4064 4071])
                                            ("a3" variable
                                               (:reference 1
                                                :type ("A3" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [4072 4079])
                                            ("a4" variable
                                               (:reference 1
                                                :type ("A4" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [4080 4087])
                                            ("a5" variable
                                               (:reference 1
                                                :type ("A5" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [4088 4095])
                                            ("a6" variable
                                               (:reference 1
                                                :type ("A6" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [4096 4103])
                                            ("a7" variable
                                               (:reference 1
                                                :type ("A7" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [4104 4111]))                                          
                                        :typemodifiers ("static"))
                                        (reparse-symbol classsubparts) [3934 4239]))                                  
                                :template-specifier (("7") ("T" type nil nil nil)))
                                (reparse-symbol namespacesubparts) [3876 4242])
                            ("function_action" type
                               (:template 
                                  ( ("T" type (:type "class") nil nil))                                  
                                :type "class"
                                :members 
                                  ( ("public" label nil (reparse-symbol classsubparts) [4292 4299])
                                    ("apply" function
                                       (:template 
                                          ( ("RET" type (:type "class") nil nil)
                                            ("A1" type (:type "class") nil nil)
                                            ("A2" type (:type "class") nil nil)
                                            ("A3" type (:type "class") nil nil)
                                            ("A4" type (:type "class") nil nil)
                                            ("A5" type (:type "class") nil nil)
                                            ("A6" type (:type "class") nil nil)
                                            ("A7" type (:type "class") nil nil)
                                            ("A8" type (:type "class") nil nil))                                          
                                        :type ("RET" type (:type "class") nil nil)
                                        :arguments 
                                          ( ("a1" variable
                                               (:reference 1
                                                :type ("A1" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [4433 4440])
                                            ("a2" variable
                                               (:reference 1
                                                :type ("A2" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [4441 4448])
                                            ("a3" variable
                                               (:reference 1
                                                :type ("A3" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [4449 4456])
                                            ("a4" variable
                                               (:reference 1
                                                :type ("A4" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [4457 4464])
                                            ("a5" variable
                                               (:reference 1
                                                :type ("A5" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [4465 4472])
                                            ("a6" variable
                                               (:reference 1
                                                :type ("A6" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [4473 4480])
                                            ("a7" variable
                                               (:reference 1
                                                :type ("A7" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [4481 4488])
                                            ("a8" variable
                                               (:reference 1
                                                :type ("A8" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [4509 4516]))                                          
                                        :typemodifiers ("static"))
                                        (reparse-symbol classsubparts) [4302 4648]))                                  
                                :template-specifier (("8") ("T" type nil nil nil)))
                                (reparse-symbol namespacesubparts) [4244 4651])
                            ("function_action" type
                               (:template 
                                  ( ("T" type (:type "class") nil nil))                                  
                                :type "class"
                                :members 
                                  ( ("public" label nil (reparse-symbol classsubparts) [4701 4708])
                                    ("apply" function
                                       (:template 
                                          ( ("RET" type (:type "class") nil nil)
                                            ("A1" type (:type "class") nil nil)
                                            ("A2" type (:type "class") nil nil)
                                            ("A3" type (:type "class") nil nil)
                                            ("A4" type (:type "class") nil nil)
                                            ("A5" type (:type "class") nil nil)
                                            ("A6" type (:type "class") nil nil)
                                            ("A7" type (:type "class") nil nil)
                                            ("A8" type (:type "class") nil nil)
                                            ("A9" type (:type "class") nil nil))                                          
                                        :type ("RET" type (:type "class") nil nil)
                                        :arguments 
                                          ( ("a1" variable
                                               (:reference 1
                                                :type ("A1" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [4852 4859])
                                            ("a2" variable
                                               (:reference 1
                                                :type ("A2" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [4860 4867])
                                            ("a3" variable
                                               (:reference 1
                                                :type ("A3" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [4868 4875])
                                            ("a4" variable
                                               (:reference 1
                                                :type ("A4" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [4876 4883])
                                            ("a5" variable
                                               (:reference 1
                                                :type ("A5" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [4884 4891])
                                            ("a6" variable
                                               (:reference 1
                                                :type ("A6" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [4892 4899])
                                            ("a7" variable
                                               (:reference 1
                                                :type ("A7" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [4900 4907])
                                            ("a8" variable
                                               (:reference 1
                                                :type ("A8" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [4928 4935])
                                            ("a9" variable
                                               (:reference 1
                                                :type ("A9" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [4936 4943]))                                          
                                        :typemodifiers ("static"))
                                        (reparse-symbol classsubparts) [4711 5079]))                                  
                                :template-specifier (("9") ("T" type nil nil nil)))
                                (reparse-symbol namespacesubparts) [4653 5082])
                            ("function_action" type
                               (:template 
                                  ( ("T" type (:type "class") nil nil))                                  
                                :type "class"
                                :members 
                                  ( ("public" label nil (reparse-symbol classsubparts) [5133 5140])
                                    ("apply" function
                                       (:template 
                                          ( ("RET" type (:type "class") nil nil)
                                            ("A1" type (:type "class") nil nil)
                                            ("A2" type (:type "class") nil nil)
                                            ("A3" type (:type "class") nil nil)
                                            ("A4" type (:type "class") nil nil)
                                            ("A5" type (:type "class") nil nil)
                                            ("A6" type (:type "class") nil nil)
                                            ("A7" type (:type "class") nil nil)
                                            ("A8" type (:type "class") nil nil)
                                            ("A9" type (:type "class") nil nil)
                                            ("A10" type (:type "class") nil nil))                                          
                                        :type ("RET" type (:type "class") nil nil)
                                        :arguments 
                                          ( ("a1" variable
                                               (:reference 1
                                                :type ("A1" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [5295 5302])
                                            ("a2" variable
                                               (:reference 1
                                                :type ("A2" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [5303 5310])
                                            ("a3" variable
                                               (:reference 1
                                                :type ("A3" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [5311 5318])
                                            ("a4" variable
                                               (:reference 1
                                                :type ("A4" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [5319 5326])
                                            ("a5" variable
                                               (:reference 1
                                                :type ("A5" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [5327 5334])
                                            ("a6" variable
                                               (:reference 1
                                                :type ("A6" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [5335 5342])
                                            ("a7" variable
                                               (:reference 1
                                                :type ("A7" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [5343 5350])
                                            ("a8" variable
                                               (:reference 1
                                                :type ("A8" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [5371 5378])
                                            ("a9" variable
                                               (:reference 1
                                                :type ("A9" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [5379 5386])
                                            ("a10" variable
                                               (:reference 1
                                                :type ("A10" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [5387 5396]))                                          
                                        :typemodifiers ("static"))
                                        (reparse-symbol classsubparts) [5143 5537]))                                  
                                :template-specifier (("10") ("T" type nil nil nil)))
                                (reparse-symbol namespacesubparts) [5084 5540]))                          
                        :type "namespace")
                        (reparse-symbol namespacesubparts) [503 5543]))                  
                :type "namespace")
                nil [484 5565]))          
    :file "actions.hpp"
    :pointmax 5593
    :fsize 5592
    :lastmodtime '(17765 48449)
    :unmatched-syntax '((punctuation 2163 . 2164) (symbol 2152 . 2163) (punctuation 2151 . 2152) (punctuation 2150 . 2151) (symbol 2144 . 2150) (punctuation 2142 . 2143) (symbol 2130 . 2141) (CLASS 2124 . 2129) (punctuation 2122 . 2123) (symbol 2121 . 2122) (INT 2117 . 2120) (punctuation 2116 . 2117) (TEMPLATE 2107 . 2115) (punctuation 1460 . 1461) (punctuation 1243 . 1244))
    :lexical-table 
        '(("BOOST_LAMBDA_ACTIONS_HPP")
          )

    )
   (semanticdb-table "lambda_traits.hpp"
    :major-mode 'c++-mode
    :tags 
        '( ("BOOST_LAMBDA_LAMBDA_TRAITS_HPP" variable (:constant-flag t) nil [477 507])
            ("boost/type_traits/transform_traits.hpp" include nil nil [509 558])
            ("boost/type_traits/cv_traits.hpp" include nil nil [559 601])
            ("boost/type_traits/function_traits.hpp" include nil nil [602 650])
            ("boost/type_traits/object_traits.hpp" include nil nil [651 697])
            ("boost" type
               (:members 
                  ( ("lambda" type
                       (:members 
                          ( ("detail" type
                               (:members 
                                  ( ("IF" type
                                       (:template 
                                          ( ("bool" type nil nil nil)
                                            ("Then" type (:type "class") nil nil)
                                            ("Else" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :members 
                                          ( ("RET" type
                                               (:typedef ("Then" type (:type "class") nil nil)
                                                :superclasses "Then"
                                                :type "typedef")
                                                (reparse-symbol classsubparts) [938 955]))                                          )
                                        (reparse-symbol namespacesubparts) [883 958])
                                    ("IF" type
                                       (:template 
                                          ( ("Then" type (:type "class") nil nil)
                                            ("Else" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :members 
                                          ( ("RET" type
                                               (:typedef ("Else" type (:type "class") nil nil)
                                                :superclasses "Else"
                                                :type "typedef")
                                                (reparse-symbol classsubparts) [1027 1044]))                                          
                                        :template-specifier 
                                          ( ("false" type nil nil nil)
                                            ("Then" type nil nil nil)
                                            ("Else" type nil nil nil))                                          )
                                        (reparse-symbol namespacesubparts) [960 1047])
                                    ("IF_type_" type
                                       (:template 
                                          ( ("T" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :members 
                                          ( ("type" type
                                               (:typedef ("T::type" type (:type "class") nil nil)
                                                :superclasses "T::type"
                                                :type "typedef")
                                                (reparse-symbol classsubparts) [1389 1419]))                                          )
                                        (reparse-symbol namespacesubparts) [1351 1422])
                                    ("IF_type" type
                                       (:template 
                                          ( ("bool" type nil nil nil)
                                            ("T" type (:type "class") nil nil)
                                            ("E" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :members 
                                          ( ("type" variable (:type ("type" type (:type "class") nil nil)) (reparse-symbol classsubparts) [1538 1548]))                                          )
                                        (reparse-symbol namespacesubparts) [1425 1551])
                                    ("identity_mapping" type
                                       (:template 
                                          ( ("T" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :members 
                                          ( ("type" type
                                               (:typedef ("T" type (:type "class") nil nil)
                                                :superclasses "T"
                                                :type "typedef")
                                                (reparse-symbol classsubparts) [1656 1671]))                                          )
                                        (reparse-symbol namespacesubparts) [1611 1674])
                                    ("IF_value_" type
                                       (:template 
                                          ( ("T" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :members 
                                          ( ("BOOST_STATIC_CONSTANT" function
                                               (:prototype-flag t
                                                :arguments 
                                                  ( ("" variable (:type "int") (reparse-symbol arg-sub-list) [1961 1965])
                                                    ("" variable (:type ("value" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1966 1973])
                                                    ("" variable (:type ("T::value" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1974 1983]))                                                  
                                                :type "int")
                                                (reparse-symbol classsubparts) [1939 1984]))                                          )
                                        (reparse-symbol namespacesubparts) [1900 1987])
                                    ("IF_value" type
                                       (:template 
                                          ( ("bool" type nil nil nil)
                                            ("T" type (:type "class") nil nil)
                                            ("E" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :members 
                                          ( ("BOOST_STATIC_CONSTANT" function
                                               (:prototype-flag t
                                                :arguments 
                                                  ( ("" variable (:type "int") (reparse-symbol arg-sub-list) [2067 2071])
                                                    ("" variable (:type ("value" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2072 2079]))                                                  
                                                :type "int")
                                                (reparse-symbol classsubparts) [2045 2127]))                                          )
                                        (reparse-symbol namespacesubparts) [1990 2130])
                                    ("remove_reference_if_valid" type
                                       (:template 
                                          ( ("T" type (:type "class") nil nil))                                          
                                        :type "class"
                                        :members 
                                          ( ("plainT" type
                                               (:typedef ("boost::remove_reference::type" type (:type "class") nil nil)
                                                :superclasses "boost::remove_reference::type"
                                                :type "typedef")
                                                (reparse-symbol classsubparts) [2308 2365])
                                            ("public" label nil (reparse-symbol classsubparts) [2366 2373])
                                            ("type" variable (:type ("RET" type (:type "class") nil nil)) (reparse-symbol classsubparts) [2459 2468]))                                          )
                                        (reparse-symbol namespacesubparts) [2253 2472])
                                    ("remove_reference_and_cv" type
                                       (:template 
                                          ( ("T" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :members 
                                          ( ("type" variable (:type ("type" type (:type "class") nil nil)) (reparse-symbol classsubparts) [2617 2627]))                                          )
                                        (reparse-symbol namespacesubparts) [2475 2630])
                                    ("tuple_element_as_reference" type
                                       (:template 
                                          ( ("int" type nil nil nil)
                                            ("T" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :members 
                                          ( ("type" variable (:type ("non_const_type" type (:type "class") nil nil)) (reparse-symbol classsubparts) [2863 2883]))                                          )
                                        (reparse-symbol namespacesubparts) [2686 2886])
                                    ("tuple_element_stripped" type
                                       (:template 
                                          ( ("int" type nil nil nil)
                                            ("T" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :members 
                                          ( ("type" variable (:type ("type" type (:type "class") nil nil)) (reparse-symbol classsubparts) [3121 3131]))                                          )
                                        (reparse-symbol namespacesubparts) [2953 3134])
                                    ("is_lambda_functor_" type
                                       (:template 
                                          ( ("T" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :members 
                                          ( ("BOOST_STATIC_CONSTANT" function
                                               (:prototype-flag t
                                                :arguments 
                                                  ( ("" variable (:type "bool") (reparse-symbol arg-sub-list) [3282 3287])
                                                    ("" variable (:type ("value" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3288 3295])
                                                    ("" variable (:type ("false" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3296 3302]))                                                  
                                                :type "int")
                                                (reparse-symbol classsubparts) [3260 3303]))                                          )
                                        (reparse-symbol namespacesubparts) [3211 3306])
                                    ("is_lambda_functor_" type
                                       (:template 
                                          ( ("Arg" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :members 
                                          ( ("BOOST_STATIC_CONSTANT" function
                                               (:prototype-flag t
                                                :arguments 
                                                  ( ("" variable (:type "bool") (reparse-symbol arg-sub-list) [3406 3411])
                                                    ("" variable (:type ("value" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3412 3419])
                                                    ("" variable (:type ("true" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3420 3425]))                                                  
                                                :type "int")
                                                (reparse-symbol classsubparts) [3384 3426]))                                          
                                        :template-specifier 
                                          ( ("lambda_functor" type nil nil nil))                                          )
                                        (reparse-symbol namespacesubparts) [3311 3429]))                                  
                                :type "namespace")
                                (reparse-symbol namespacesubparts) [863 3435])
                            ("is_lambda_functor" type
                               (:template 
                                  ( ("T" type (:type "class") nil nil))                                  
                                :type "struct"
                                :members 
                                  ( ("BOOST_STATIC_CONSTANT" function
                                       (:prototype-flag t
                                        :arguments 
                                          ( ("" variable (:type "bool") (reparse-symbol arg-sub-list) [3525 3530])
                                            ("" variable (:type ("value" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3537 3544])
                                            ("" variable (:type ("detail::is_lambda_functor_" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3553 3580])
                                            ("" variable
                                               (:typemodifiers ("typename")
                                                :type ("detail::remove_reference_and_cv::type" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [3590 3648])
                                            ("" variable (:type ("value" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3650 3656]))                                          
                                        :type "int")
                                        (reparse-symbol classsubparts) [3503 3657]))                                  )
                                (reparse-symbol namespacesubparts) [3455 3660])
                            ("detail" type
                               (:members 
                                  ( ("parameter_traits_" type
                                       (:template 
                                          ( ("T1" type (:type "class") nil nil)
                                            ("T2" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :members 
                                          ( ("type" type
                                               (:typedef ("T2" type (:type "class") nil nil)
                                                :superclasses "T2"
                                                :type "typedef")
                                                (reparse-symbol classsubparts) [4191 4207]))                                          )
                                        (reparse-symbol namespacesubparts) [4132 4210])
                                    ("parameter_traits_" type
                                       (:template 
                                          ( ("T" type (:type "class") nil nil)
                                            ("Any" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :members 
                                          ( ("type" variable (:type ("parameter_traits_class_instantiated_with_reference_type" type (:type "class") nil nil)) (reparse-symbol classsubparts) [4371 4432]))                                          
                                        :template-specifier 
                                          ( ("T" type (:reference 1) nil nil)
                                            ("Any" type nil nil nil))                                          )
                                        (reparse-symbol namespacesubparts) [4255 4435])
                                    ("parameter_traits_" type
                                       (:template 
                                          ( ("T" type (:type "class") nil nil)
                                            ("Any" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :members 
                                          ( ("type" variable (:type ("T" type (:type "class") nil nil)) (reparse-symbol classsubparts) [5082 5090]))                                          
                                        :template-specifier 
                                          ( ("boost::reference_wrapper" type nil nil nil)
                                            ("Any" type nil nil nil))                                          )
                                        (reparse-symbol namespacesubparts) [4981 5093])
                                    ("parameter_traits_" type
                                       (:template 
                                          ( ("T" type (:type "class") nil nil)
                                            ("Any" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :members 
                                          ( ("type" variable (:type ("T" type (:type "class") nil nil)) (reparse-symbol classsubparts) [5202 5210]))                                          
                                        :template-specifier 
                                          ( ("boost::reference_wrapper" type (:constant-flag t) nil nil)
                                            ("Any" type nil nil nil))                                          )
                                        (reparse-symbol namespacesubparts) [5095 5213])
                                    ("parameter_traits_" type
                                       (:template 
                                          ( ("T" type (:type "class") nil nil)
                                            ("Any" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :members 
                                          ( ("type" variable (:type ("T" type (:type "class") nil nil)) (reparse-symbol classsubparts) [5325 5333]))                                          
                                        :template-specifier 
                                          ( ("boost::reference_wrapper" type (:typemodifiers ("volatile")) nil nil)
                                            ("Any" type nil nil nil))                                          )
                                        (reparse-symbol namespacesubparts) [5215 5336])
                                    ("parameter_traits_" type
                                       (:template 
                                          ( ("T" type (:type "class") nil nil)
                                            ("Any" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :members 
                                          ( ("type" variable (:type ("T" type (:type "class") nil nil)) (reparse-symbol classsubparts) [5454 5462]))                                          
                                        :template-specifier 
                                          ( ("boost::reference_wrapper" type
                                               (:typemodifiers ("volatile")
                                                :constant-flag t)
                                                nil nil)
                                            ("Any" type nil nil nil))                                          )
                                        (reparse-symbol namespacesubparts) [5338 5465])
                                    ("parameter_traits_" type
                                       (:template 
                                          ( ("Any" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :members 
                                          ( ("type" type
                                               (:typedef ("void")
                                                :superclasses "void"
                                                :type "typedef")
                                                (reparse-symbol classsubparts) [5527 5545]))                                          
                                        :template-specifier 
                                          ( ("void" type nil nil nil)
                                            ("Any" type nil nil nil))                                          )
                                        (reparse-symbol namespacesubparts) [5467 5548])
                                    ("parameter_traits_" type
                                       (:template 
                                          ( ("Arg" type (:type "class") nil nil)
                                            ("Any" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :members 
                                          ( ("type" type
                                               (:typedef ("lambda_functor" type
                                                     (:template-specifier 
                                                        ( ("Arg" type nil nil nil))                                                        
                                                      :type "class")
                                                      nil nil)
                                                :superclasses "lambda_functor"
                                                :type "typedef")
                                                (reparse-symbol classsubparts) [5637 5670]))                                          
                                        :template-specifier 
                                          ( ("lambda_functor" type nil nil nil)
                                            ("Any" type nil nil nil))                                          )
                                        (reparse-symbol namespacesubparts) [5550 5673])
                                    ("parameter_traits_" type
                                       (:template 
                                          ( ("Arg" type (:type "class") nil nil)
                                            ("Any" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :members 
                                          ( ("type" type
                                               (:typedef ("lambda_functor" type
                                                     (:template-specifier 
                                                        ( ("Arg" type nil nil nil))                                                        
                                                      :type "class")
                                                      nil nil)
                                                :superclasses "lambda_functor"
                                                :type "typedef")
                                                (reparse-symbol classsubparts) [5768 5801]))                                          
                                        :template-specifier 
                                          ( ("lambda_functor" type (:constant-flag t) nil nil)
                                            ("Any" type nil nil nil))                                          )
                                        (reparse-symbol namespacesubparts) [5675 5804])
                                    ("parameter_traits_" type
                                       (:template 
                                          ( ("Arg" type (:type "class") nil nil)
                                            ("Any" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :members 
                                          ( ("type" type
                                               (:typedef ("lambda_functor" type
                                                     (:template-specifier 
                                                        ( ("Arg" type nil nil nil))                                                        
                                                      :type "class")
                                                      nil nil)
                                                :superclasses "lambda_functor"
                                                :type "typedef")
                                                (reparse-symbol classsubparts) [5939 5972]))                                          
                                        :template-specifier 
                                          ( ("lambda_functor" type (:typemodifiers ("volatile")) nil nil)
                                            ("Any" type nil nil nil))                                          )
                                        (reparse-symbol namespacesubparts) [5843 5975])
                                    ("parameter_traits_" type
                                       (:template 
                                          ( ("Arg" type (:type "class") nil nil)
                                            ("Any" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :members 
                                          ( ("type" type
                                               (:typedef ("lambda_functor" type
                                                     (:template-specifier 
                                                        ( ("Arg" type nil nil nil))                                                        
                                                      :type "class")
                                                      nil nil)
                                                :superclasses "lambda_functor"
                                                :type "typedef")
                                                (reparse-symbol classsubparts) [6079 6112]))                                          
                                        :template-specifier 
                                          ( ("lambda_functor" type
                                               (:typemodifiers ("volatile")
                                                :constant-flag t)
                                                nil nil)
                                            ("Any" type nil nil nil))                                          )
                                        (reparse-symbol namespacesubparts) [5977 6115]))                                  
                                :type "namespace")
                                (reparse-symbol namespacesubparts) [3666 6118])
                            ("const_copy_argument" type
                               (:template 
                                  ( ("T" type (:type "class") nil nil))                                  
                                :type "struct"
                                :members 
                                  ( ("type" variable (:type ("type" type (:type "class") nil nil)) (reparse-symbol classsubparts) [6733 6743]))                                  )
                                (reparse-symbol namespacesubparts) [6545 6746])
                            ("const_copy_argument" type
                               (:template 
                                  ( ("T" type (:type "class") nil nil))                                  
                                :type "struct"
                                :template-specifier 
                                  ( ("T" type (:reference 1) nil nil))                                  )
                                (reparse-symbol namespacesubparts) [7276 7328])
                            ("const_copy_argument" type
                               (:type "struct"
                                :members 
                                  ( ("type" type
                                       (:typedef ("void")
                                        :superclasses "void"
                                        :type "typedef")
                                        (reparse-symbol classsubparts) [7497 7515]))                                  
                                :template-specifier 
                                  ( ("void" type nil nil nil))                                  )
                                (reparse-symbol namespacesubparts) [7449 7518])
                            ("bound_argument_conversion" type
                               (:template 
                                  ( ("T" type (:type "class") nil nil))                                  
                                :type "struct"
                                :members 
                                  ( ("type" variable (:type ("type" type (:type "class") nil nil)) (reparse-symbol classsubparts) [7696 7706]))                                  )
                                (reparse-symbol namespacesubparts) [7600 7710])
                            ("bound_argument_conversion" type
                               (:template 
                                  ( ("T" type (:type "class") nil nil))                                  
                                :type "struct"
                                :members 
                                  ( ("type" variable (:type ("T" type (:type "class") nil nil)) (reparse-symbol classsubparts) [7779 7787]))                                  
                                :template-specifier 
                                  ( ("T" type (:reference 1) nil nil))                                  )
                                (reparse-symbol namespacesubparts) [7712 7791])
                            ("reference_argument" type
                               (:template 
                                  ( ("T" type (:type "class") nil nil))                                  
                                :type "struct"
                                :members 
                                  ( ("type" type
                                       (:typedef ("detail::parameter_traits_::type" type (:type "class") nil nil)
                                        :superclasses "detail::parameter_traits_::type"
                                        :type "typedef")
                                        (reparse-symbol classsubparts) [8012 8073]))                                  )
                                (reparse-symbol namespacesubparts) [7964 8077])
                            ("reference_argument" type
                               (:template 
                                  ( ("T" type (:type "class") nil nil))                                  
                                :type "struct"
                                :members 
                                  ( ("type" type
                                       (:typedef ("detail::generate_error::references_not_allowed" type (:type "class") nil nil)
                                        :superclasses "detail::generate_error::references_not_allowed"
                                        :type "typedef")
                                        (reparse-symbol classsubparts) [8131 8204]))                                  
                                :template-specifier 
                                  ( ("T" type (:reference 1) nil nil))                                  )
                                (reparse-symbol namespacesubparts) [8079 8208])
                            ("reference_argument" type
                               (:template 
                                  ( ("Arg" type (:type "class") nil nil))                                  
                                :type "struct"
                                :members 
                                  ( ("type" type
                                       (:typedef ("lambda_functor" type
                                             (:template-specifier 
                                                ( ("Arg" type nil nil nil))                                                
                                              :type "class")
                                              nil nil)
                                        :superclasses "lambda_functor"
                                        :type "typedef")
                                        (reparse-symbol classsubparts) [8282 8315]))                                  
                                :template-specifier 
                                  ( ("lambda_functor" type nil nil nil))                                  )
                                (reparse-symbol namespacesubparts) [8210 8318])
                            ("reference_argument" type
                               (:template 
                                  ( ("Arg" type (:type "class") nil nil))                                  
                                :type "struct"
                                :members 
                                  ( ("type" type
                                       (:typedef ("lambda_functor" type
                                             (:template-specifier 
                                                ( ("Arg" type nil nil nil))                                                
                                              :type "class")
                                              nil nil)
                                        :superclasses "lambda_functor"
                                        :type "typedef")
                                        (reparse-symbol classsubparts) [8398 8431]))                                  
                                :template-specifier 
                                  ( ("lambda_functor" type (:constant-flag t) nil nil))                                  )
                                (reparse-symbol namespacesubparts) [8320 8434])
                            ("reference_argument" type
                               (:template 
                                  ( ("Arg" type (:type "class") nil nil))                                  
                                :type "struct"
                                :members 
                                  ( ("type" type
                                       (:typedef ("lambda_functor" type
                                             (:template-specifier 
                                                ( ("Arg" type nil nil nil))                                                
                                              :type "class")
                                              nil nil)
                                        :superclasses "lambda_functor"
                                        :type "typedef")
                                        (reparse-symbol classsubparts) [8554 8587]))                                  
                                :template-specifier 
                                  ( ("lambda_functor" type (:typemodifiers ("volatile")) nil nil))                                  )
                                (reparse-symbol namespacesubparts) [8473 8590])
                            ("reference_argument" type
                               (:template 
                                  ( ("Arg" type (:type "class") nil nil))                                  
                                :type "struct"
                                :members 
                                  ( ("type" type
                                       (:typedef ("lambda_functor" type
                                             (:template-specifier 
                                                ( ("Arg" type nil nil nil))                                                
                                              :type "class")
                                              nil nil)
                                        :superclasses "lambda_functor"
                                        :type "typedef")
                                        (reparse-symbol classsubparts) [8679 8712]))                                  
                                :template-specifier 
                                  ( ("lambda_functor" type
                                       (:typemodifiers ("volatile")
                                        :constant-flag t)
                                        nil nil))                                  )
                                (reparse-symbol namespacesubparts) [8592 8715])
                            ("reference_argument" type
                               (:type "struct"
                                :members 
                                  ( ("type" type
                                       (:typedef ("void")
                                        :superclasses "void"
                                        :type "typedef")
                                        (reparse-symbol classsubparts) [8764 8782]))                                  
                                :template-specifier 
                                  ( ("void" type nil nil nil))                                  )
                                (reparse-symbol namespacesubparts) [8717 8785])
                            ("detail" type
                               (:members 
                                  ( ("array_to_pointer" type
                                       (:template 
                                          ( ("T" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :members 
                                          ( ("type" type
                                               (:typedef ("T" type (:type "class") nil nil)
                                                :superclasses "T"
                                                :type "typedef")
                                                (reparse-symbol classsubparts) [8889 8904]))                                          )
                                        (reparse-symbol namespacesubparts) [8841 8907])
                                    ("T" function
                                       (:constant-flag t
                                        :type "int")
                                        (reparse-symbol namespacesubparts) [9137 9152])
                                    ("T" function (:type "int") (reparse-symbol namespacesubparts) [9236 9245])
                                    ("bind_traits" type
                                       (:template 
                                          ( ("T" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :members 
                                          ( ("type" type
                                               (:typedef ("T" type (:type "class") nil nil)
                                                :superclasses "T"
                                                :type "typedef")
                                                (reparse-symbol classsubparts) [10120 10141]))                                          )
                                        (reparse-symbol namespacesubparts) [10079 10145])
                                    ("bind_traits" type
                                       (:template 
                                          ( ("T" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :members 
                                          ( ("type" variable (:type ("T" type (:type "class") nil nil)) (reparse-symbol classsubparts) [10200 10208]))                                          
                                        :template-specifier 
                                          ( ("T" type (:reference 1) nil nil))                                          )
                                        (reparse-symbol namespacesubparts) [10147 10212])
                                    ("bind_traits" type
                                       (:type "struct"
                                        :members 
                                          ( ("type" type
                                               (:typedef ("null_type" type (:type "class") nil nil)
                                                :superclasses "null_type"
                                                :type "typedef")
                                                (reparse-symbol classsubparts) [10410 10433]))                                          
                                        :template-specifier 
                                          ( ("null_type" type nil nil nil))                                          )
                                        (reparse-symbol namespacesubparts) [10365 10436])
                                    ("bind_traits" type
                                       (:type "struct"
                                        :members 
                                          ( ("type" type
                                               (:typedef ("null_type" type (:type "class") nil nil)
                                                :superclasses "null_type"
                                                :type "typedef")
                                                (reparse-symbol classsubparts) [10573 10596]))                                          
                                        :template-specifier 
                                          ( ("null_type" type (:constant-flag t) nil nil))                                          )
                                        (reparse-symbol namespacesubparts) [10522 10599])
                                    ("bind_traits" type
                                       (:template 
                                          ( ("T" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :members 
                                          ( ("type" variable (:type ("T" type (:type "class") nil nil)) (reparse-symbol classsubparts) [11321 11329]))                                          
                                        :template-specifier 
                                          ( ("reference_wrapper" type nil nil nil))                                          )
                                        (reparse-symbol namespacesubparts) [11249 11332])
                                    ("bind_traits" type
                                       (:template 
                                          ( ("T" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :members 
                                          ( ("type" variable (:type ("T" type (:type "class") nil nil)) (reparse-symbol classsubparts) [11412 11420]))                                          
                                        :template-specifier 
                                          ( ("reference_wrapper" type (:constant-flag t) nil nil))                                          )
                                        (reparse-symbol namespacesubparts) [11334 11423])
                                    ("bind_traits" type
                                       (:type "struct"
                                        :members 
                                          ( ("type" type
                                               (:typedef ("void")
                                                :superclasses "void"
                                                :type "typedef")
                                                (reparse-symbol classsubparts) [11465 11483]))                                          
                                        :template-specifier 
                                          ( ("void" type nil nil nil))                                          )
                                        (reparse-symbol namespacesubparts) [11425 11486])
                                    ("bind_tuple_mapper" type
                                       (:template 
                                          ( ("T0" type (:type "class") nil nil)
                                            ("T1" type (:type "class") nil nil)
                                            ("T2" type (:type "class") nil nil)
                                            ("T3" type (:type "class") nil nil)
                                            ("T4" type (:type "class") nil nil)
                                            ("T5" type (:type "class") nil nil)
                                            ("T6" type (:type "class") nil nil)
                                            ("T7" type (:type "class") nil nil)
                                            ("T8" type (:type "class") nil nil)
                                            ("T9" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :members 
                                          ( ("type" variable (:type "int") (reparse-symbol classsubparts) [12197 12202]))                                          )
                                        (reparse-symbol namespacesubparts) [11490 12205])
                                    ("remove_const_reference" type
                                       (:template 
                                          ( ("T" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :members 
                                          ( ("type" variable (:type ("type" type (:type "class") nil nil)) (reparse-symbol classsubparts) [12486 12496]))                                          )
                                        (reparse-symbol namespacesubparts) [12398 12501])
                                    ("remove_const_reference" type
                                       (:template 
                                          ( ("T" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :members 
                                          ( ("type" type
                                               (:typedef ("T" type (:type "class") nil nil)
                                                :superclasses "T"
                                                :type "typedef")
                                                (reparse-symbol classsubparts) [12570 12591]))                                          
                                        :template-specifier 
                                          ( ("T" type
                                               (:reference 1
                                                :constant-flag t)
                                                nil nil))                                          )
                                        (reparse-symbol namespacesubparts) [12505 12596])
                                    ("bind_type_generator" type
                                       (:template 
                                          ( ("T0" type (:type "class") nil nil)
                                            ("T1" type (:type "class") nil nil)
                                            ("T2" type (:type "class") nil nil)
                                            ("T3" type (:type "class") nil nil)
                                            ("T4" type (:type "class") nil nil)
                                            ("T5" type (:type "class") nil nil)
                                            ("T6" type (:type "class") nil nil)
                                            ("T7" type (:type "class") nil nil)
                                            ("T8" type (:type "class") nil nil)
                                            ("T9" type (:type "class") nil nil))                                          
                                        :type "class"
                                        :members 
                                          ( ("args_t" type
                                               (:typedef ("detail::bind_tuple_mapper::type" type (:type "class") nil nil)
                                                :superclasses "detail::bind_tuple_mapper::type"
                                                :type "typedef")
                                                (reparse-symbol classsubparts) [12942 13048])
                                            ("BOOST_STATIC_CONSTANT" function
                                               (:prototype-flag t
                                                :arguments 
                                                  ( ("" variable (:type "int") (reparse-symbol arg-sub-list) [13074 13078])
                                                    ("" variable (:type ("nof_elems" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [13079 13090])
                                                    ("" variable (:type ("boost::tuples::length::value" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [13091 13128]))                                                  
                                                :type "int")
                                                (reparse-symbol classsubparts) [13052 13129])
                                            ("action_type" type
                                               (:typedef ("action" type
                                                     (:template-specifier 
                                                        ( ("nof_elems" type nil nil nil)
                                                          ("function_action" type nil nil nil))                                                        
                                                      :type "class")
                                                      nil nil)
                                                :superclasses "action"
                                                :type "typedef")
                                                (reparse-symbol classsubparts) [13133 13223])
                                            ("public" label nil (reparse-symbol classsubparts) [13225 13232])
                                            ("type" type
                                               (:typedef ("lambda_functor" type
                                                     (:template-specifier 
                                                        ( ("lambda_functor_base" type nil nil nil))                                                        
                                                      :type "class")
                                                      nil nil)
                                                :superclasses "lambda_functor"
                                                :type "typedef")
                                                (reparse-symbol classsubparts) [13235 13346]))                                          )
                                        (reparse-symbol namespacesubparts) [12668 13355]))                                  
                                :type "namespace")
                                (reparse-symbol namespacesubparts) [8787 13363])
                            ("make_const" function
                               (:template 
                                  ( ("T" type (:type "class") nil nil))                                  
                                :type ("T" type (:type "class") nil nil)
                                :arguments 
                                  ( ("t" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("T" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [13425 13436]))                                  
                                :constant-flag t
                                :typemodifiers ("inline"))
                                (reparse-symbol namespacesubparts) [13378 13450]))                          
                        :type "namespace")
                        (reparse-symbol namespacesubparts) [717 13454]))                  
                :type "namespace")
                nil [699 13483]))          
    :file "lambda_traits.hpp"
    :pointmax 13550
    :fsize 13549
    :lastmodtime '(17765 48449)
    :unmatched-syntax '((punctuation 13089 . 13090) (punctuation 12485 . 12486) (punctuation 12484 . 12485) (punctuation 12483 . 12484) (symbol 12482 . 12483) (punctuation 12481 . 12482) (symbol 12470 . 12481) (TYPENAME 12461 . 12469) (TYPEDEF 12453 . 12460) (punctuation 12195 . 12196) (symbol 12191 . 12195) (punctuation 12190 . 12191) (punctuation 12189 . 12190) (punctuation 12188 . 12189) (symbol 12186 . 12188) (punctuation 12185 . 12186) (symbol 12174 . 12185) (TYPENAME 12165 . 12173) (punctuation 12153 . 12154) (symbol 12149 . 12153) (punctuation 12148 . 12149) (punctuation 12147 . 12148) (punctuation 12146 . 12147) (symbol 12144 . 12146) (punctuation 12143 . 12144) (symbol 12132 . 12143) (TYPENAME 12123 . 12131) (punctuation 12111 . 12112) (symbol 12107 . 12111) (punctuation 12106 . 12107) (punctuation 12105 . 12106) (punctuation 12104 . 12105) (symbol 12102 . 12104) (punctuation 12101 . 12102) (symbol 12090 . 12101) (TYPENAME 12081 . 12089) (punctuation 12068 . 12069) (symbol 12064 . 12068) (punctuation 12063 . 12064) (punctuation 12062 . 12063) (punctuation 12061 . 12062) (symbol 12059 . 12061) (punctuation 12058 . 12059) (symbol 12047 . 12058) (TYPENAME 12038 . 12046) (punctuation 12025 . 12026) (symbol 12021 . 12025) (punctuation 12020 . 12021) (punctuation 12019 . 12020) (punctuation 12018 . 12019) (symbol 12016 . 12018) (punctuation 12015 . 12016) (symbol 12004 . 12015) (TYPENAME 11995 . 12003) (punctuation 11982 . 11983) (symbol 11978 . 11982) (punctuation 11977 . 11978) (punctuation 11976 . 11977) (punctuation 11975 . 11976) (symbol 11973 . 11975) (punctuation 11972 . 11973) (symbol 11961 . 11972) (TYPENAME 11952 . 11960) (punctuation 11939 . 11940) (symbol 11935 . 11939) (punctuation 11934 . 11935) (punctuation 11933 . 11934) (punctuation 11932 . 11933) (symbol 11930 . 11932) (punctuation 11929 . 11930) (symbol 11918 . 11929) (TYPENAME 11909 . 11917) (punctuation 11896 . 11897) (symbol 11892 . 11896) (punctuation 11891 . 11892) (punctuation 11890 . 11891) (punctuation 11889 . 11890) (symbol 11887 . 11889) (punctuation 11886 . 11887) (symbol 11875 . 11886) (TYPENAME 11866 . 11874) (punctuation 11853 . 11854) (symbol 11849 . 11853) (punctuation 11848 . 11849) (punctuation 11847 . 11848) (punctuation 11846 . 11847) (symbol 11844 . 11846) (punctuation 11843 . 11844) (symbol 11832 . 11843) (TYPENAME 11823 . 11831) (punctuation 11810 . 11811) (symbol 11806 . 11810) (punctuation 11805 . 11806) (punctuation 11804 . 11805) (punctuation 11803 . 11804) (symbol 11801 . 11803) (punctuation 11800 . 11801) (symbol 11789 . 11800) (TYPENAME 11780 . 11788) (punctuation 11779 . 11780) (symbol 11774 . 11779) (TYPEDEF 11762 . 11769) (TYPEDEF 11404 . 11411) (TYPEDEF 11313 . 11320) (punctuation 11246 . 11247) (semantic-list 11204 . 11246) (punctuation 11202 . 11203) (semantic-list 11199 . 11202) (symbol 11198 . 11199) (VOLATILE 11189 . 11197) (CONST 11183 . 11188) (punctuation 11182 . 11183) (symbol 11171 . 11182) (STRUCT 11164 . 11170) (punctuation 11161 . 11162) (symbol 11160 . 11161) (INT 11156 . 11159) (punctuation 11154 . 11155) (symbol 11153 . 11154) (CLASS 11147 . 11152) (punctuation 11146 . 11147) (TEMPLATE 11138 . 11146) (punctuation 11135 . 11136) (semantic-list 11093 . 11135) (punctuation 11091 . 11092) (semantic-list 11088 . 11091) (symbol 11087 . 11088) (VOLATILE 11078 . 11086) (punctuation 11077 . 11078) (symbol 11066 . 11077) (STRUCT 11059 . 11065) (punctuation 11056 . 11057) (symbol 11055 . 11056) (INT 11051 . 11054) (punctuation 11049 . 11050) (symbol 11048 . 11049) (CLASS 11042 . 11047) (punctuation 11041 . 11042) (TEMPLATE 11033 . 11041) (punctuation 11030 . 11031) (semantic-list 10997 . 11030) (punctuation 10995 . 10996) (semantic-list 10992 . 10995) (symbol 10991 . 10992) (CONST 10985 . 10990) (punctuation 10984 . 10985) (symbol 10973 . 10984) (STRUCT 10966 . 10972) (punctuation 10963 . 10964) (symbol 10962 . 10963) (INT 10958 . 10961) (punctuation 10956 . 10957) (symbol 10955 . 10956) (CLASS 10949 . 10954) (punctuation 10948 . 10949) (TEMPLATE 10940 . 10948) (punctuation 10937 . 10938) (semantic-list 10904 . 10937) (punctuation 10902 . 10903) (semantic-list 10899 . 10902) (symbol 10898 . 10899) (punctuation 10897 . 10898) (symbol 10885 . 10896) (STRUCT 10878 . 10884) (punctuation 10875 . 10876) (symbol 10874 . 10875) (INT 10870 . 10873) (punctuation 10868 . 10869) (symbol 10867 . 10868) (CLASS 10861 . 10866) (punctuation 10860 . 10861) (TEMPLATE 10852 . 10860) (TYPEDEF 10192 . 10199) (punctuation 9270 . 9271) (semantic-list 9247 . 9270) (punctuation 9245 . 9246) (punctuation 9239 . 9240) (punctuation 9235 . 9236) (symbol 9218 . 9234) (STRUCT 9211 . 9217) (punctuation 9209 . 9210) (symbol 9208 . 9209) (INT 9204 . 9207) (punctuation 9202 . 9203) (symbol 9201 . 9202) (CLASS 9195 . 9200) (punctuation 9194 . 9195) (TEMPLATE 9185 . 9193) (punctuation 9183 . 9184) (semantic-list 9154 . 9183) (punctuation 9152 . 9153) (punctuation 9146 . 9147) (punctuation 9136 . 9137) (symbol 9119 . 9135) (STRUCT 9112 . 9118) (punctuation 9110 . 9111) (symbol 9109 . 9110) (INT 9105 . 9108) (punctuation 9103 . 9104) (symbol 9102 . 9103) (CLASS 9096 . 9101) (punctuation 9095 . 9096) (TEMPLATE 9086 . 9094) (punctuation 9083 . 9084) (semantic-list 9060 . 9083) (punctuation 9058 . 9059) (semantic-list 9055 . 9058) (symbol 9054 . 9055) (punctuation 9053 . 9054) (symbol 9036 . 9052) (STRUCT 9029 . 9035) (punctuation 9027 . 9028) (symbol 9026 . 9027) (INT 9022 . 9025) (punctuation 9020 . 9021) (symbol 9019 . 9020) (CLASS 9013 . 9018) (punctuation 9012 . 9013) (TEMPLATE 9003 . 9011) (punctuation 9001 . 9002) (semantic-list 8972 . 9001) (punctuation 8970 . 8971) (semantic-list 8967 . 8970) (symbol 8966 . 8967) (CONST 8960 . 8965) (punctuation 8959 . 8960) (symbol 8942 . 8958) (STRUCT 8935 . 8941) (punctuation 8933 . 8934) (symbol 8932 . 8933) (INT 8928 . 8931) (punctuation 8926 . 8927) (symbol 8925 . 8926) (CLASS 8919 . 8924) (punctuation 8918 . 8919) (TEMPLATE 8909 . 8917) (TYPEDEF 7771 . 7778) (punctuation 7695 . 7696) (punctuation 7694 . 7695) (punctuation 7693 . 7694) (symbol 7692 . 7693) (punctuation 7691 . 7692) (symbol 7672 . 7691) (TYPENAME 7663 . 7671) (TYPEDEF 7655 . 7662) (punctuation 7270 . 7271) (semantic-list 7225 . 7270) (punctuation 7223 . 7224) (semantic-list 7220 . 7223) (symbol 7219 . 7220) (VOLATILE 7210 . 7218) (punctuation 7209 . 7210) (symbol 7189 . 7208) (STRUCT 7182 . 7188) (punctuation 7179 . 7180) (symbol 7178 . 7179) (INT 7174 . 7177) (punctuation 7172 . 7173) (symbol 7171 . 7172) (CLASS 7165 . 7170) (punctuation 7164 . 7165) (TEMPLATE 7156 . 7164) (punctuation 7154 . 7155) (semantic-list 7121 . 7154) (punctuation 7119 . 7120) (semantic-list 7116 . 7119) (symbol 7115 . 7116) (punctuation 7114 . 7115) (symbol 7094 . 7113) (STRUCT 7087 . 7093) (punctuation 7084 . 7085) (symbol 7083 . 7084) (INT 7079 . 7082) (punctuation 7077 . 7078) (symbol 7076 . 7077) (CLASS 7070 . 7075) (punctuation 7069 . 7070) (TEMPLATE 7061 . 7069) (punctuation 6732 . 6733) (punctuation 6731 . 6732) (punctuation 6730 . 6731) (symbol 6722 . 6725) (punctuation 6721 . 6722) (punctuation 6720 . 6721) (punctuation 6719 . 6720) (symbol 6718 . 6719) (CONST 6712 . 6717) (punctuation 6710 . 6711) (punctuation 6709 . 6710) (symbol 6708 . 6709) (punctuation 6706 . 6707) (symbol 6701 . 6706) (punctuation 6700 . 6701) (punctuation 6699 . 6700) (punctuation 6698 . 6699) (symbol 6697 . 6698) (punctuation 6696 . 6697) (symbol 6685 . 6696) (punctuation 6684 . 6685) (punctuation 6683 . 6684) (symbol 6678 . 6683) (punctuation 6677 . 6678) (symbol 6675 . 6677) (punctuation 6674 . 6675) (punctuation 6673 . 6674) (symbol 6667 . 6673) (TYPENAME 6658 . 6666) (punctuation 6650 . 6651) (symbol 6649 . 6650) (punctuation 6641 . 6642) (symbol 6624 . 6641) (punctuation 6623 . 6624) (punctuation 6622 . 6623) (symbol 6616 . 6622) (TYPENAME 6602 . 6610) (TYPEDEF 6594 . 6601) (TYPEDEF 5446 . 5453) (TYPEDEF 5317 . 5324) (TYPEDEF 5194 . 5201) (TYPEDEF 5074 . 5081) (punctuation 4977 . 4978) (semantic-list 4935 . 4977) (punctuation 4933 . 4934) (symbol 4930 . 4933) (punctuation 4928 . 4929) (semantic-list 4925 . 4928) (symbol 4924 . 4925) (VOLATILE 4915 . 4923) (CONST 4909 . 4914) (punctuation 4908 . 4909) (symbol 4891 . 4908) (STRUCT 4884 . 4890) (punctuation 4881 . 4882) (symbol 4878 . 4881) (CLASS 4872 . 4877) (punctuation 4870 . 4871) (symbol 4869 . 4870) (INT 4865 . 4868) (punctuation 4863 . 4864) (symbol 4862 . 4863) (CLASS 4856 . 4861) (punctuation 4855 . 4856) (TEMPLATE 4847 . 4855) (punctuation 4845 . 4846) (semantic-list 4808 . 4845) (punctuation 4806 . 4807) (symbol 4803 . 4806) (punctuation 4801 . 4802) (semantic-list 4798 . 4801) (symbol 4797 . 4798) (VOLATILE 4788 . 4796) (punctuation 4787 . 4788) (symbol 4770 . 4787) (STRUCT 4763 . 4769) (punctuation 4760 . 4761) (symbol 4757 . 4760) (CLASS 4751 . 4756) (punctuation 4749 . 4750) (symbol 4748 . 4749) (INT 4744 . 4747) (punctuation 4742 . 4743) (symbol 4741 . 4742) (CLASS 4735 . 4740) (punctuation 4734 . 4735) (TEMPLATE 4726 . 4734) (punctuation 4723 . 4724) (semantic-list 4690 . 4723) (punctuation 4688 . 4689) (symbol 4685 . 4688) (punctuation 4683 . 4684) (semantic-list 4680 . 4683) (symbol 4679 . 4680) (CONST 4673 . 4678) (punctuation 4672 . 4673) (symbol 4655 . 4672) (STRUCT 4648 . 4654) (punctuation 4645 . 4646) (symbol 4642 . 4645) (CLASS 4636 . 4641) (punctuation 4634 . 4635) (symbol 4633 . 4634) (INT 4629 . 4632) (punctuation 4627 . 4628) (symbol 4626 . 4627) (CLASS 4620 . 4625) (punctuation 4619 . 4620) (TEMPLATE 4611 . 4619) (punctuation 4605 . 4606) (semantic-list 4578 . 4605) (punctuation 4576 . 4577) (symbol 4573 . 4576) (punctuation 4571 . 4572) (semantic-list 4568 . 4571) (symbol 4567 . 4568) (punctuation 4566 . 4567) (symbol 4549 . 4566) (STRUCT 4542 . 4548) (punctuation 4540 . 4541) (symbol 4537 . 4540) (CLASS 4531 . 4536) (punctuation 4529 . 4530) (symbol 4528 . 4529) (INT 4524 . 4527) (punctuation 4522 . 4523) (symbol 4521 . 4522) (CLASS 4515 . 4520) (punctuation 4514 . 4515) (TEMPLATE 4506 . 4514) (punctuation 4363 . 4364) (punctuation 4362 . 4363) (punctuation 4361 . 4362) (punctuation 4360 . 4361) (symbol 4359 . 4360) (punctuation 4358 . 4359) (symbol 4344 . 4358) (TYPENAME 4330 . 4338) (TYPEDEF 4322 . 4329) (punctuation 3649 . 3650) (punctuation 3648 . 3649) (punctuation 3647 . 3648) (punctuation 3579 . 3580) (punctuation 3543 . 3544) (punctuation 3418 . 3419) (punctuation 3294 . 3295) (punctuation 3120 . 3121) (punctuation 3119 . 3120) (punctuation 3118 . 3119) (symbol 3108 . 3112) (punctuation 3107 . 3108) (punctuation 3106 . 3107) (punctuation 3105 . 3106) (symbol 3104 . 3105) (punctuation 3102 . 3103) (symbol 3101 . 3102) (punctuation 3100 . 3101) (symbol 3093 . 3100) (punctuation 3092 . 3093) (punctuation 3091 . 3092) (symbol 3085 . 3091) (punctuation 3084 . 3085) (punctuation 3083 . 3084) (symbol 3078 . 3083) (TYPENAME 3069 . 3077) (punctuation 3060 . 3061) (symbol 3037 . 3060) (TYPENAME 3023 . 3031) (TYPEDEF 3015 . 3022) (punctuation 2862 . 2863) (punctuation 2861 . 2862) (punctuation 2860 . 2861) (symbol 2850 . 2854) (punctuation 2849 . 2850) (punctuation 2848 . 2849) (punctuation 2847 . 2848) (symbol 2846 . 2847) (punctuation 2844 . 2845) (symbol 2843 . 2844) (punctuation 2842 . 2843) (symbol 2835 . 2842) (punctuation 2834 . 2835) (punctuation 2833 . 2834) (symbol 2827 . 2833) (punctuation 2826 . 2827) (punctuation 2825 . 2826) (symbol 2820 . 2825) (TYPENAME 2811 . 2819) (punctuation 2802 . 2803) (symbol 2789 . 2802) (punctuation 2788 . 2789) (punctuation 2787 . 2788) (symbol 2781 . 2787) (punctuation 2780 . 2781) (punctuation 2779 . 2780) (symbol 2774 . 2779) (TYPENAME 2760 . 2768) (TYPEDEF 2752 . 2759) (punctuation 2616 . 2617) (punctuation 2615 . 2616) (punctuation 2614 . 2615) (symbol 2606 . 2610) (punctuation 2605 . 2606) (punctuation 2604 . 2605) (punctuation 2603 . 2604) (symbol 2602 . 2603) (punctuation 2601 . 2602) (symbol 2585 . 2601) (punctuation 2584 . 2585) (punctuation 2583 . 2584) (symbol 2578 . 2583) (TYPENAME 2569 . 2577) (punctuation 2562 . 2563) (symbol 2553 . 2562) (punctuation 2552 . 2553) (punctuation 2551 . 2552) (symbol 2546 . 2551) (TYPENAME 2537 . 2545) (TYPEDEF 2529 . 2536) (punctuation 2458 . 2459) (punctuation 2457 . 2458) (punctuation 2456 . 2457) (symbol 2447 . 2453) (punctuation 2441 . 2442) (symbol 2440 . 2441) (punctuation 2434 . 2435) (symbol 2429 . 2434) (punctuation 2428 . 2429) (punctuation 2427 . 2428) (punctuation 2426 . 2427) (symbol 2420 . 2426) (punctuation 2419 . 2420) (symbol 2408 . 2419) (punctuation 2407 . 2408) (punctuation 2406 . 2407) (symbol 2401 . 2406) (punctuation 2395 . 2396) (symbol 2393 . 2395) (TYPENAME 2384 . 2392) (TYPEDEF 2376 . 2383) (semantic-list 2080 . 2125) (punctuation 2078 . 2079) (punctuation 1972 . 1973) (punctuation 1537 . 1538) (punctuation 1536 . 1537) (punctuation 1535 . 1536) (symbol 1531 . 1534) (punctuation 1530 . 1531) (punctuation 1529 . 1530) (punctuation 1528 . 1529) (symbol 1527 . 1528) (punctuation 1525 . 1526) (symbol 1524 . 1525) (punctuation 1522 . 1523) (symbol 1521 . 1522) (punctuation 1520 . 1521) (symbol 1518 . 1520) (TYPENAME 1509 . 1517) (punctuation 1508 . 1509) (symbol 1500 . 1508) (TYPENAME 1487 . 1495) (TYPEDEF 1479 . 1486))
    :lexical-table 
        '(("BOOST_LAMBDA_LAMBDA_TRAITS_HPP")
          )

    )
   (semanticdb-table "function_adaptors.hpp"
    :major-mode 'c++-mode
    :tags 
        '( ("BOOST_LAMBDA_FUNCTION_ADAPTORS_HPP" variable (:constant-flag t) nil [405 439])
            ("boost/type_traits/same_traits.hpp" include nil nil [441 485])
            ("boost" type
               (:members 
                  ( ("lambda" type
                       (:members 
                          ( ("function_adaptor" type
                               (:template 
                                  ( ("Func" type (:type "class") nil nil))                                  
                                :type "struct"
                                :members 
                                  ( ("sig" type
                                       (:template 
                                          ( ("Args" type (:type "class") nil nil))                                          
                                        :type "class"
                                        :members 
                                          ( ("F" type
                                               (:typedef ("Args::head_type" type (:type "class") nil nil)
                                                :superclasses "Args::head_type"
                                                :type "typedef")
                                                (reparse-symbol classsubparts) [687 722])
                                            ("plainF" type
                                               (:typedef ("detail::remove_reference_and_cv::type" type (:type "class") nil nil)
                                                :superclasses "detail::remove_reference_and_cv::type"
                                                :type "typedef")
                                                (reparse-symbol classsubparts) [728 796])
                                            ("public" label nil (reparse-symbol classsubparts) [799 806])
                                            ("type" variable (:type ("type" type (:type "class") nil nil)) (reparse-symbol classsubparts) [1132 1142]))                                          )
                                        (reparse-symbol classsubparts) [648 1147])
                                    ("apply" function
                                       (:template 
                                          ( ("RET" type (:type "class") nil nil)
                                            ("A1" type (:type "class") nil nil))                                          
                                        :type ("RET" type (:type "class") nil nil)
                                        :arguments 
                                          ( ("a1" variable
                                               (:reference 1
                                                :type ("A1" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [1200 1207]))                                          
                                        :typemodifiers ("static"))
                                        (reparse-symbol classsubparts) [1151 1230])
                                    ("apply" function
                                       (:template 
                                          ( ("RET" type (:type "class") nil nil)
                                            ("A1" type (:type "class") nil nil)
                                            ("A2" type (:type "class") nil nil))                                          
                                        :type ("RET" type (:type "class") nil nil)
                                        :arguments 
                                          ( ("a1" variable
                                               (:reference 1
                                                :type ("A1" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [1292 1299])
                                            ("a2" variable
                                               (:reference 1
                                                :type ("A2" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [1300 1307]))                                          
                                        :typemodifiers ("static"))
                                        (reparse-symbol classsubparts) [1233 1332])
                                    ("apply" function
                                       (:template 
                                          ( ("RET" type (:type "class") nil nil)
                                            ("A1" type (:type "class") nil nil)
                                            ("A2" type (:type "class") nil nil)
                                            ("A3" type (:type "class") nil nil))                                          
                                        :type ("RET" type (:type "class") nil nil)
                                        :arguments 
                                          ( ("a1" variable
                                               (:reference 1
                                                :type ("A1" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [1404 1411])
                                            ("a2" variable
                                               (:reference 1
                                                :type ("A2" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [1412 1419])
                                            ("a3" variable
                                               (:reference 1
                                                :type ("A3" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [1420 1427]))                                          
                                        :typemodifiers ("static"))
                                        (reparse-symbol classsubparts) [1335 1456])
                                    ("apply" function
                                       (:template 
                                          ( ("RET" type (:type "class") nil nil)
                                            ("A1" type (:type "class") nil nil)
                                            ("A2" type (:type "class") nil nil)
                                            ("A3" type (:type "class") nil nil)
                                            ("A4" type (:type "class") nil nil))                                          
                                        :type ("RET" type (:type "class") nil nil)
                                        :arguments 
                                          ( ("a1" variable
                                               (:reference 1
                                                :type ("A1" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [1538 1545])
                                            ("a2" variable
                                               (:reference 1
                                                :type ("A2" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [1546 1553])
                                            ("a3" variable
                                               (:reference 1
                                                :type ("A3" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [1554 1561])
                                            ("a4" variable
                                               (:reference 1
                                                :type ("A4" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [1562 1569]))                                          
                                        :typemodifiers ("static"))
                                        (reparse-symbol classsubparts) [1459 1602])
                                    ("apply" function
                                       (:template 
                                          ( ("RET" type (:type "class") nil nil)
                                            ("A1" type (:type "class") nil nil)
                                            ("A2" type (:type "class") nil nil)
                                            ("A3" type (:type "class") nil nil)
                                            ("A4" type (:type "class") nil nil)
                                            ("A5" type (:type "class") nil nil))                                          
                                        :type ("RET" type (:type "class") nil nil)
                                        :arguments 
                                          ( ("a1" variable
                                               (:reference 1
                                                :type ("A1" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [1694 1701])
                                            ("a2" variable
                                               (:reference 1
                                                :type ("A2" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [1702 1709])
                                            ("a3" variable
                                               (:reference 1
                                                :type ("A3" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [1710 1717])
                                            ("a4" variable
                                               (:reference 1
                                                :type ("A4" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [1718 1725])
                                            ("a5" variable
                                               (:reference 1
                                                :type ("A5" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [1726 1733]))                                          
                                        :typemodifiers ("static"))
                                        (reparse-symbol classsubparts) [1605 1770])
                                    ("apply" function
                                       (:template 
                                          ( ("RET" type (:type "class") nil nil)
                                            ("A1" type (:type "class") nil nil)
                                            ("A2" type (:type "class") nil nil)
                                            ("A3" type (:type "class") nil nil)
                                            ("A4" type (:type "class") nil nil)
                                            ("A5" type (:type "class") nil nil)
                                            ("A6" type (:type "class") nil nil))                                          
                                        :type ("RET" type (:type "class") nil nil)
                                        :arguments 
                                          ( ("a1" variable
                                               (:reference 1
                                                :type ("A1" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [1872 1879])
                                            ("a2" variable
                                               (:reference 1
                                                :type ("A2" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [1880 1887])
                                            ("a3" variable
                                               (:reference 1
                                                :type ("A3" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [1888 1895])
                                            ("a4" variable
                                               (:reference 1
                                                :type ("A4" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [1896 1903])
                                            ("a5" variable
                                               (:reference 1
                                                :type ("A5" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [1904 1911])
                                            ("a6" variable
                                               (:reference 1
                                                :type ("A6" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [1912 1919]))                                          
                                        :typemodifiers ("static"))
                                        (reparse-symbol classsubparts) [1773 1960])
                                    ("apply" function
                                       (:template 
                                          ( ("RET" type (:type "class") nil nil)
                                            ("A1" type (:type "class") nil nil)
                                            ("A2" type (:type "class") nil nil)
                                            ("A3" type (:type "class") nil nil)
                                            ("A4" type (:type "class") nil nil)
                                            ("A5" type (:type "class") nil nil)
                                            ("A6" type (:type "class") nil nil)
                                            ("A7" type (:type "class") nil nil))                                          
                                        :type ("RET" type (:type "class") nil nil)
                                        :arguments 
                                          ( ("a1" variable
                                               (:reference 1
                                                :type ("A1" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [2084 2091])
                                            ("a2" variable
                                               (:reference 1
                                                :type ("A2" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [2092 2099])
                                            ("a3" variable
                                               (:reference 1
                                                :type ("A3" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [2100 2107])
                                            ("a4" variable
                                               (:reference 1
                                                :type ("A4" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [2108 2115])
                                            ("a5" variable
                                               (:reference 1
                                                :type ("A5" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [2116 2123])
                                            ("a6" variable
                                               (:reference 1
                                                :type ("A6" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [2124 2131])
                                            ("a7" variable
                                               (:reference 1
                                                :type ("A7" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [2160 2167]))                                          
                                        :typemodifiers ("static"))
                                        (reparse-symbol classsubparts) [1963 2212])
                                    ("apply" function
                                       (:template 
                                          ( ("RET" type (:type "class") nil nil)
                                            ("A1" type (:type "class") nil nil)
                                            ("A2" type (:type "class") nil nil)
                                            ("A3" type (:type "class") nil nil)
                                            ("A4" type (:type "class") nil nil)
                                            ("A5" type (:type "class") nil nil)
                                            ("A6" type (:type "class") nil nil)
                                            ("A7" type (:type "class") nil nil)
                                            ("A8" type (:type "class") nil nil))                                          
                                        :type ("RET" type (:type "class") nil nil)
                                        :arguments 
                                          ( ("a1" variable
                                               (:reference 1
                                                :type ("A1" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [2346 2353])
                                            ("a2" variable
                                               (:reference 1
                                                :type ("A2" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [2354 2361])
                                            ("a3" variable
                                               (:reference 1
                                                :type ("A3" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [2362 2369])
                                            ("a4" variable
                                               (:reference 1
                                                :type ("A4" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [2370 2377])
                                            ("a5" variable
                                               (:reference 1
                                                :type ("A5" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [2378 2385])
                                            ("a6" variable
                                               (:reference 1
                                                :type ("A6" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [2386 2393])
                                            ("a7" variable
                                               (:reference 1
                                                :type ("A7" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [2422 2429])
                                            ("a8" variable
                                               (:reference 1
                                                :type ("A8" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [2430 2437]))                                          
                                        :typemodifiers ("static"))
                                        (reparse-symbol classsubparts) [2215 2486])
                                    ("apply" function
                                       (:template 
                                          ( ("RET" type (:type "class") nil nil)
                                            ("A1" type (:type "class") nil nil)
                                            ("A2" type (:type "class") nil nil)
                                            ("A3" type (:type "class") nil nil)
                                            ("A4" type (:type "class") nil nil)
                                            ("A5" type (:type "class") nil nil)
                                            ("A6" type (:type "class") nil nil)
                                            ("A7" type (:type "class") nil nil)
                                            ("A8" type (:type "class") nil nil)
                                            ("A9" type (:type "class") nil nil))                                          
                                        :type ("RET" type (:type "class") nil nil)
                                        :arguments 
                                          ( ("a1" variable
                                               (:reference 1
                                                :type ("A1" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [2630 2637])
                                            ("a2" variable
                                               (:reference 1
                                                :type ("A2" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [2638 2645])
                                            ("a3" variable
                                               (:reference 1
                                                :type ("A3" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [2646 2653])
                                            ("a4" variable
                                               (:reference 1
                                                :type ("A4" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [2654 2661])
                                            ("a5" variable
                                               (:reference 1
                                                :type ("A5" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [2662 2669])
                                            ("a6" variable
                                               (:reference 1
                                                :type ("A6" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [2670 2677])
                                            ("a7" variable
                                               (:reference 1
                                                :type ("A7" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [2706 2713])
                                            ("a8" variable
                                               (:reference 1
                                                :type ("A8" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [2714 2721])
                                            ("a9" variable
                                               (:reference 1
                                                :type ("A9" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [2722 2729]))                                          
                                        :typemodifiers ("static"))
                                        (reparse-symbol classsubparts) [2489 2782])
                                    ("apply" function
                                       (:template 
                                          ( ("RET" type (:type "class") nil nil)
                                            ("A1" type (:type "class") nil nil)
                                            ("A2" type (:type "class") nil nil)
                                            ("A3" type (:type "class") nil nil)
                                            ("A4" type (:type "class") nil nil)
                                            ("A5" type (:type "class") nil nil)
                                            ("A6" type (:type "class") nil nil)
                                            ("A7" type (:type "class") nil nil)
                                            ("A8" type (:type "class") nil nil)
                                            ("A9" type (:type "class") nil nil)
                                            ("A10" type (:type "class") nil nil))                                          
                                        :type ("RET" type (:type "class") nil nil)
                                        :arguments 
                                          ( ("a1" variable
                                               (:reference 1
                                                :type ("A1" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [2937 2944])
                                            ("a2" variable
                                               (:reference 1
                                                :type ("A2" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [2945 2952])
                                            ("a3" variable
                                               (:reference 1
                                                :type ("A3" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [2953 2960])
                                            ("a4" variable
                                               (:reference 1
                                                :type ("A4" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [2961 2968])
                                            ("a5" variable
                                               (:reference 1
                                                :type ("A5" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [2969 2976])
                                            ("a6" variable
                                               (:reference 1
                                                :type ("A6" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [2977 2984])
                                            ("a7" variable
                                               (:reference 1
                                                :type ("A7" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [3013 3020])
                                            ("a8" variable
                                               (:reference 1
                                                :type ("A8" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [3021 3028])
                                            ("a9" variable
                                               (:reference 1
                                                :type ("A9" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [3029 3036])
                                            ("a10" variable
                                               (:reference 1
                                                :type ("A10" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [3037 3046]))                                          
                                        :typemodifiers ("static"))
                                        (reparse-symbol classsubparts) [2785 3104]))                                  )
                                (reparse-symbol namespacesubparts) [526 3107])
                            ("function_adaptor" type
                               (:template 
                                  ( ("Func" type (:type "class") nil nil))                                  
                                :type "struct"
                                :template-specifier 
                                  ( ("Func" type (:constant-flag t) nil nil))                                  
                                :prototype t)
                                (reparse-symbol namespacesubparts) [3109 3167])
                            ("Result" function (:type "int") (reparse-symbol namespacesubparts) [5323 5339])
                            ("Result" function
                               (:arguments 
                                  ( ("" variable (:type ("Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5610 5617]))                                  
                                :type "int")
                                (reparse-symbol namespacesubparts) [5602 5622])
                            ("Result" function
                               (:arguments 
                                  ( ("" variable (:type ("Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [6015 6022]))                                  
                                :type "int")
                                (reparse-symbol namespacesubparts) [6007 6027])
                            ("Result" function (:type "int") (reparse-symbol namespacesubparts) [6631 6647])
                            ("Result" function
                               (:arguments 
                                  ( ("" variable (:type ("Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [6954 6961]))                                  
                                :type "int")
                                (reparse-symbol namespacesubparts) [6946 6970])
                            ("Result" function
                               (:arguments 
                                  ( ("" variable (:type ("Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7433 7440]))                                  
                                :type "int")
                                (reparse-symbol namespacesubparts) [7425 7449])
                            ("Result" function (:type "int") (reparse-symbol namespacesubparts) [8159 8181])
                            ("Result" function
                               (:arguments 
                                  ( ("" variable (:type ("Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [8528 8535]))                                  
                                :type "int")
                                (reparse-symbol namespacesubparts) [8520 8550])
                            ("Result" function
                               (:arguments 
                                  ( ("" variable (:type ("Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [9071 9078]))                                  
                                :type "int")
                                (reparse-symbol namespacesubparts) [9063 9093])
                            ("Result" function (:type "int") (reparse-symbol namespacesubparts) [9917 9945])
                            ("Result" function
                               (:arguments 
                                  ( ("" variable (:type ("Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [10332 10339]))                                  
                                :type "int")
                                (reparse-symbol namespacesubparts) [10324 10360])
                            ("Result" function
                               (:arguments 
                                  ( ("" variable (:type ("Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [10949 10956]))                                  
                                :type "int")
                                (reparse-symbol namespacesubparts) [10941 10977])
                            ("Result" function (:type "int") (reparse-symbol namespacesubparts) [11915 11949])
                            ("Result" function
                               (:arguments 
                                  ( ("" variable (:type ("Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [12376 12383]))                                  
                                :type "int")
                                (reparse-symbol namespacesubparts) [12368 12410])
                            ("Result" function
                               (:arguments 
                                  ( ("" variable (:type ("Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [13067 13074]))                                  
                                :type "int")
                                (reparse-symbol namespacesubparts) [13059 13101])
                            ("Result" function (:type "int") (reparse-symbol namespacesubparts) [14153 14193])
                            ("Result" function
                               (:arguments 
                                  ( ("" variable (:type ("Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [14660 14667]))                                  
                                :type "int")
                                (reparse-symbol namespacesubparts) [14652 14700])
                            ("Result" function
                               (:arguments 
                                  ( ("" variable (:type ("Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [15425 15432]))                                  
                                :type "int")
                                (reparse-symbol namespacesubparts) [15417 15465])
                            ("Result" function (:type "int") (reparse-symbol namespacesubparts) [16631 16677])
                            ("Result" function
                               (:arguments 
                                  ( ("" variable (:type ("Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [17184 17191]))                                  
                                :type "int")
                                (reparse-symbol namespacesubparts) [17176 17230])
                            ("Result" function
                               (:arguments 
                                  ( ("" variable (:type ("Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [18023 18030]))                                  
                                :type "int")
                                (reparse-symbol namespacesubparts) [18015 18069])
                            ("Result" function (:type "int") (reparse-symbol namespacesubparts) [19349 19401])
                            ("Result" function
                               (:arguments 
                                  ( ("" variable (:type ("Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [19948 19955]))                                  
                                :type "int")
                                (reparse-symbol namespacesubparts) [19940 20000])
                            ("Result" function
                               (:arguments 
                                  ( ("" variable (:type ("Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [20861 20868]))                                  
                                :type "int")
                                (reparse-symbol namespacesubparts) [20853 20913])
                            ("Result" function (:type "int") (reparse-symbol namespacesubparts) [22307 22365])
                            ("Result" function
                               (:arguments 
                                  ( ("" variable (:type ("Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [22953 22960]))                                  
                                :type "int")
                                (reparse-symbol namespacesubparts) [22945 23011])
                            ("Result" function
                               (:arguments 
                                  ( ("" variable (:type ("Object" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [23940 23947]))                                  
                                :type "int")
                                (reparse-symbol namespacesubparts) [23932 23998])
                            ("Result" function (:type "int") (reparse-symbol namespacesubparts) [25506 25570]))                          
                        :type "namespace")
                        (reparse-symbol namespacesubparts) [506 25973]))                  
                :type "namespace")
                nil [487 25995]))          
    :file "function_adaptors.hpp"
    :pointmax 26036
    :fsize 26035
    :lastmodtime '(17765 48449)
    :unmatched-syntax '((punctuation 25969 . 25970) (semantic-list 25572 . 25969) (punctuation 25570 . 25571) (punctuation 25514 . 25515) (punctuation 25505 . 25506) (symbol 25489 . 25505) (STRUCT 25482 . 25488) (punctuation 25480 . 25481) (symbol 25474 . 25480) (CLASS 25468 . 25473) (punctuation 25466 . 25467) (symbol 25462 . 25466) (CLASS 25456 . 25461) (punctuation 25454 . 25455) (symbol 25450 . 25454) (CLASS 25444 . 25449) (punctuation 25442 . 25443) (symbol 25438 . 25442) (CLASS 25432 . 25437) (punctuation 25430 . 25431) (symbol 25426 . 25430) (CLASS 25420 . 25425) (punctuation 25418 . 25419) (symbol 25414 . 25418) (CLASS 25408 . 25413) (punctuation 25406 . 25407) (symbol 25402 . 25406) (CLASS 25396 . 25401) (punctuation 25394 . 25395) (symbol 25390 . 25394) (CLASS 25384 . 25389) (punctuation 25382 . 25383) (symbol 25378 . 25382) (CLASS 25372 . 25377) (punctuation 25370 . 25371) (symbol 25366 . 25370) (CLASS 25360 . 25365) (punctuation 25359 . 25360) (TEMPLATE 25350 . 25358) (punctuation 25347 . 25348) (semantic-list 24950 . 25347) (punctuation 24948 . 24949) (semantic-list 24894 . 24948) (symbol 24887 . 24893) (punctuation 24886 . 24887) (symbol 24870 . 24886) (STRUCT 24863 . 24869) (punctuation 24861 . 24862) (symbol 24855 . 24861) (CLASS 24849 . 24854) (punctuation 24847 . 24848) (symbol 24843 . 24847) (CLASS 24837 . 24842) (punctuation 24835 . 24836) (symbol 24831 . 24835) (CLASS 24825 . 24830) (punctuation 24823 . 24824) (symbol 24819 . 24823) (CLASS 24813 . 24818) (punctuation 24811 . 24812) (symbol 24807 . 24811) (CLASS 24801 . 24806) (punctuation 24799 . 24800) (symbol 24795 . 24799) (CLASS 24789 . 24794) (punctuation 24787 . 24788) (symbol 24783 . 24787) (CLASS 24777 . 24782) (punctuation 24775 . 24776) (symbol 24771 . 24775) (CLASS 24765 . 24770) (punctuation 24763 . 24764) (symbol 24759 . 24763) (CLASS 24753 . 24758) (punctuation 24751 . 24752) (symbol 24747 . 24751) (CLASS 24741 . 24746) (punctuation 24740 . 24741) (TEMPLATE 24731 . 24739) (punctuation 24728 . 24729) (semantic-list 24000 . 24728) (punctuation 23998 . 23999) (punctuation 23948 . 23949) (punctuation 23947 . 23948) (punctuation 23946 . 23947) (punctuation 23931 . 23932) (symbol 23915 . 23931) (STRUCT 23908 . 23914) (punctuation 23906 . 23907) (symbol 23900 . 23906) (CLASS 23894 . 23899) (punctuation 23892 . 23893) (symbol 23888 . 23892) (CLASS 23882 . 23887) (punctuation 23880 . 23881) (symbol 23876 . 23880) (CLASS 23870 . 23875) (punctuation 23868 . 23869) (symbol 23864 . 23868) (CLASS 23858 . 23863) (punctuation 23856 . 23857) (symbol 23852 . 23856) (CLASS 23846 . 23851) (punctuation 23844 . 23845) (symbol 23840 . 23844) (CLASS 23834 . 23839) (punctuation 23832 . 23833) (symbol 23828 . 23832) (CLASS 23822 . 23827) (punctuation 23820 . 23821) (symbol 23816 . 23820) (CLASS 23810 . 23815) (punctuation 23808 . 23809) (symbol 23804 . 23808) (CLASS 23798 . 23803) (punctuation 23796 . 23797) (symbol 23790 . 23796) (CLASS 23784 . 23789) (punctuation 23783 . 23784) (TEMPLATE 23774 . 23782) (punctuation 23771 . 23772) (semantic-list 23019 . 23771) (punctuation 23017 . 23018) (CONST 23012 . 23017) (punctuation 22961 . 22962) (punctuation 22960 . 22961) (punctuation 22959 . 22960) (punctuation 22944 . 22945) (symbol 22928 . 22944) (STRUCT 22921 . 22927) (punctuation 22919 . 22920) (symbol 22913 . 22919) (CLASS 22907 . 22912) (punctuation 22905 . 22906) (symbol 22901 . 22905) (CLASS 22895 . 22900) (punctuation 22893 . 22894) (symbol 22889 . 22893) (CLASS 22883 . 22888) (punctuation 22881 . 22882) (symbol 22877 . 22881) (CLASS 22871 . 22876) (punctuation 22869 . 22870) (symbol 22865 . 22869) (CLASS 22859 . 22864) (punctuation 22857 . 22858) (symbol 22853 . 22857) (CLASS 22847 . 22852) (punctuation 22845 . 22846) (symbol 22841 . 22845) (CLASS 22835 . 22840) (punctuation 22833 . 22834) (symbol 22829 . 22833) (CLASS 22823 . 22828) (punctuation 22821 . 22822) (symbol 22817 . 22821) (CLASS 22811 . 22816) (punctuation 22809 . 22810) (symbol 22803 . 22809) (CLASS 22797 . 22802) (punctuation 22796 . 22797) (TEMPLATE 22787 . 22795) (punctuation 22736 . 22737) (semantic-list 22367 . 22736) (punctuation 22365 . 22366) (punctuation 22315 . 22316) (punctuation 22306 . 22307) (symbol 22290 . 22306) (STRUCT 22283 . 22289) (punctuation 22281 . 22282) (symbol 22275 . 22281) (CLASS 22269 . 22274) (punctuation 22267 . 22268) (symbol 22263 . 22267) (CLASS 22257 . 22262) (punctuation 22255 . 22256) (symbol 22251 . 22255) (CLASS 22245 . 22250) (punctuation 22243 . 22244) (symbol 22239 . 22243) (CLASS 22233 . 22238) (punctuation 22231 . 22232) (symbol 22227 . 22231) (CLASS 22221 . 22226) (punctuation 22219 . 22220) (symbol 22215 . 22219) (CLASS 22209 . 22214) (punctuation 22207 . 22208) (symbol 22203 . 22207) (CLASS 22197 . 22202) (punctuation 22195 . 22196) (symbol 22191 . 22195) (CLASS 22185 . 22190) (punctuation 22183 . 22184) (symbol 22179 . 22183) (CLASS 22173 . 22178) (punctuation 22172 . 22173) (TEMPLATE 22163 . 22171) (punctuation 22160 . 22161) (semantic-list 21791 . 22160) (punctuation 21789 . 21790) (semantic-list 21741 . 21789) (symbol 21734 . 21740) (punctuation 21733 . 21734) (symbol 21717 . 21733) (STRUCT 21710 . 21716) (punctuation 21708 . 21709) (symbol 21702 . 21708) (CLASS 21696 . 21701) (punctuation 21694 . 21695) (symbol 21690 . 21694) (CLASS 21684 . 21689) (punctuation 21682 . 21683) (symbol 21678 . 21682) (CLASS 21672 . 21677) (punctuation 21670 . 21671) (symbol 21666 . 21670) (CLASS 21660 . 21665) (punctuation 21658 . 21659) (symbol 21654 . 21658) (CLASS 21648 . 21653) (punctuation 21646 . 21647) (symbol 21642 . 21646) (CLASS 21636 . 21641) (punctuation 21634 . 21635) (symbol 21630 . 21634) (CLASS 21624 . 21629) (punctuation 21622 . 21623) (symbol 21618 . 21622) (CLASS 21612 . 21617) (punctuation 21610 . 21611) (symbol 21606 . 21610) (CLASS 21600 . 21605) (punctuation 21599 . 21600) (TEMPLATE 21590 . 21598) (punctuation 21587 . 21588) (semantic-list 20915 . 21587) (punctuation 20913 . 20914) (punctuation 20869 . 20870) (punctuation 20868 . 20869) (punctuation 20867 . 20868) (punctuation 20852 . 20853) (symbol 20836 . 20852) (STRUCT 20829 . 20835) (punctuation 20827 . 20828) (symbol 20821 . 20827) (CLASS 20815 . 20820) (punctuation 20813 . 20814) (symbol 20809 . 20813) (CLASS 20803 . 20808) (punctuation 20801 . 20802) (symbol 20797 . 20801) (CLASS 20791 . 20796) (punctuation 20789 . 20790) (symbol 20785 . 20789) (CLASS 20779 . 20784) (punctuation 20777 . 20778) (symbol 20773 . 20777) (CLASS 20767 . 20772) (punctuation 20765 . 20766) (symbol 20761 . 20765) (CLASS 20755 . 20760) (punctuation 20753 . 20754) (symbol 20749 . 20753) (CLASS 20743 . 20748) (punctuation 20741 . 20742) (symbol 20737 . 20741) (CLASS 20731 . 20736) (punctuation 20729 . 20730) (symbol 20723 . 20729) (CLASS 20717 . 20722) (punctuation 20716 . 20717) (TEMPLATE 20707 . 20715) (punctuation 20704 . 20705) (semantic-list 20008 . 20704) (punctuation 20006 . 20007) (CONST 20001 . 20006) (punctuation 19956 . 19957) (punctuation 19955 . 19956) (punctuation 19954 . 19955) (punctuation 19939 . 19940) (symbol 19923 . 19939) (STRUCT 19916 . 19922) (punctuation 19914 . 19915) (symbol 19908 . 19914) (CLASS 19902 . 19907) (punctuation 19900 . 19901) (symbol 19896 . 19900) (CLASS 19890 . 19895) (punctuation 19888 . 19889) (symbol 19884 . 19888) (CLASS 19878 . 19883) (punctuation 19876 . 19877) (symbol 19872 . 19876) (CLASS 19866 . 19871) (punctuation 19864 . 19865) (symbol 19860 . 19864) (CLASS 19854 . 19859) (punctuation 19852 . 19853) (symbol 19848 . 19852) (CLASS 19842 . 19847) (punctuation 19840 . 19841) (symbol 19836 . 19840) (CLASS 19830 . 19835) (punctuation 19828 . 19829) (symbol 19824 . 19828) (CLASS 19818 . 19823) (punctuation 19816 . 19817) (symbol 19810 . 19816) (CLASS 19804 . 19809) (punctuation 19803 . 19804) (TEMPLATE 19794 . 19802) (punctuation 19744 . 19745) (semantic-list 19403 . 19744) (punctuation 19401 . 19402) (punctuation 19357 . 19358) (punctuation 19348 . 19349) (symbol 19332 . 19348) (STRUCT 19325 . 19331) (punctuation 19323 . 19324) (symbol 19317 . 19323) (CLASS 19311 . 19316) (punctuation 19309 . 19310) (symbol 19305 . 19309) (CLASS 19299 . 19304) (punctuation 19297 . 19298) (symbol 19293 . 19297) (CLASS 19287 . 19292) (punctuation 19285 . 19286) (symbol 19281 . 19285) (CLASS 19275 . 19280) (punctuation 19273 . 19274) (symbol 19269 . 19273) (CLASS 19263 . 19268) (punctuation 19261 . 19262) (symbol 19257 . 19261) (CLASS 19251 . 19256) (punctuation 19249 . 19250) (symbol 19245 . 19249) (CLASS 19239 . 19244) (punctuation 19237 . 19238) (symbol 19233 . 19237) (CLASS 19227 . 19232) (punctuation 19226 . 19227) (TEMPLATE 19217 . 19225) (punctuation 19214 . 19215) (semantic-list 18873 . 19214) (punctuation 18871 . 18872) (semantic-list 18829 . 18871) (symbol 18822 . 18828) (punctuation 18821 . 18822) (symbol 18805 . 18821) (STRUCT 18798 . 18804) (punctuation 18796 . 18797) (symbol 18790 . 18796) (CLASS 18784 . 18789) (punctuation 18782 . 18783) (symbol 18778 . 18782) (CLASS 18772 . 18777) (punctuation 18770 . 18771) (symbol 18766 . 18770) (CLASS 18760 . 18765) (punctuation 18758 . 18759) (symbol 18754 . 18758) (CLASS 18748 . 18753) (punctuation 18746 . 18747) (symbol 18742 . 18746) (CLASS 18736 . 18741) (punctuation 18734 . 18735) (symbol 18730 . 18734) (CLASS 18724 . 18729) (punctuation 18722 . 18723) (symbol 18718 . 18722) (CLASS 18712 . 18717) (punctuation 18710 . 18711) (symbol 18706 . 18710) (CLASS 18700 . 18705) (punctuation 18699 . 18700) (TEMPLATE 18690 . 18698) (punctuation 18687 . 18688) (semantic-list 18071 . 18687) (punctuation 18069 . 18070) (punctuation 18031 . 18032) (punctuation 18030 . 18031) (punctuation 18029 . 18030) (punctuation 18014 . 18015) (symbol 17998 . 18014) (STRUCT 17991 . 17997) (punctuation 17989 . 17990) (symbol 17983 . 17989) (CLASS 17977 . 17982) (punctuation 17975 . 17976) (symbol 17971 . 17975) (CLASS 17965 . 17970) (punctuation 17963 . 17964) (symbol 17959 . 17963) (CLASS 17953 . 17958) (punctuation 17951 . 17952) (symbol 17947 . 17951) (CLASS 17941 . 17946) (punctuation 17939 . 17940) (symbol 17935 . 17939) (CLASS 17929 . 17934) (punctuation 17927 . 17928) (symbol 17923 . 17927) (CLASS 17917 . 17922) (punctuation 17915 . 17916) (symbol 17911 . 17915) (CLASS 17905 . 17910) (punctuation 17903 . 17904) (symbol 17897 . 17903) (CLASS 17891 . 17896) (punctuation 17890 . 17891) (TEMPLATE 17881 . 17889) (punctuation 17878 . 17879) (semantic-list 17238 . 17878) (punctuation 17236 . 17237) (CONST 17231 . 17236) (punctuation 17192 . 17193) (punctuation 17191 . 17192) (punctuation 17190 . 17191) (punctuation 17175 . 17176) (symbol 17159 . 17175) (STRUCT 17152 . 17158) (punctuation 17150 . 17151) (symbol 17144 . 17150) (CLASS 17138 . 17143) (punctuation 17136 . 17137) (symbol 17132 . 17136) (CLASS 17126 . 17131) (punctuation 17124 . 17125) (symbol 17120 . 17124) (CLASS 17114 . 17119) (punctuation 17112 . 17113) (symbol 17108 . 17112) (CLASS 17102 . 17107) (punctuation 17100 . 17101) (symbol 17096 . 17100) (CLASS 17090 . 17095) (punctuation 17088 . 17089) (symbol 17084 . 17088) (CLASS 17078 . 17083) (punctuation 17076 . 17077) (symbol 17072 . 17076) (CLASS 17066 . 17071) (punctuation 17064 . 17065) (symbol 17058 . 17064) (CLASS 17052 . 17057) (punctuation 17051 . 17052) (TEMPLATE 17042 . 17050) (punctuation 16992 . 16993) (semantic-list 16679 . 16992) (punctuation 16677 . 16678) (punctuation 16639 . 16640) (punctuation 16630 . 16631) (symbol 16614 . 16630) (STRUCT 16607 . 16613) (punctuation 16605 . 16606) (symbol 16599 . 16605) (CLASS 16593 . 16598) (punctuation 16591 . 16592) (symbol 16587 . 16591) (CLASS 16581 . 16586) (punctuation 16579 . 16580) (symbol 16575 . 16579) (CLASS 16569 . 16574) (punctuation 16567 . 16568) (symbol 16563 . 16567) (CLASS 16557 . 16562) (punctuation 16555 . 16556) (symbol 16551 . 16555) (CLASS 16545 . 16550) (punctuation 16543 . 16544) (symbol 16539 . 16543) (CLASS 16533 . 16538) (punctuation 16531 . 16532) (symbol 16527 . 16531) (CLASS 16521 . 16526) (punctuation 16520 . 16521) (TEMPLATE 16511 . 16519) (punctuation 16508 . 16509) (semantic-list 16195 . 16508) (punctuation 16193 . 16194) (semantic-list 16157 . 16193) (symbol 16150 . 16156) (punctuation 16149 . 16150) (symbol 16133 . 16149) (STRUCT 16126 . 16132) (punctuation 16124 . 16125) (symbol 16118 . 16124) (CLASS 16112 . 16117) (punctuation 16110 . 16111) (symbol 16106 . 16110) (CLASS 16100 . 16105) (punctuation 16098 . 16099) (symbol 16094 . 16098) (CLASS 16088 . 16093) (punctuation 16086 . 16087) (symbol 16082 . 16086) (CLASS 16076 . 16081) (punctuation 16074 . 16075) (symbol 16070 . 16074) (CLASS 16064 . 16069) (punctuation 16062 . 16063) (symbol 16058 . 16062) (CLASS 16052 . 16057) (punctuation 16050 . 16051) (symbol 16046 . 16050) (CLASS 16040 . 16045) (punctuation 16039 . 16040) (TEMPLATE 16030 . 16038) (punctuation 16027 . 16028) (semantic-list 15467 . 16027) (punctuation 15465 . 15466) (punctuation 15433 . 15434) (punctuation 15432 . 15433) (punctuation 15431 . 15432) (punctuation 15416 . 15417) (symbol 15400 . 15416) (STRUCT 15393 . 15399) (punctuation 15391 . 15392) (symbol 15385 . 15391) (CLASS 15379 . 15384) (punctuation 15377 . 15378) (symbol 15373 . 15377) (CLASS 15367 . 15372) (punctuation 15365 . 15366) (symbol 15361 . 15365) (CLASS 15355 . 15360) (punctuation 15353 . 15354) (symbol 15349 . 15353) (CLASS 15343 . 15348) (punctuation 15341 . 15342) (symbol 15337 . 15341) (CLASS 15331 . 15336) (punctuation 15329 . 15330) (symbol 15325 . 15329) (CLASS 15319 . 15324) (punctuation 15317 . 15318) (symbol 15311 . 15317) (CLASS 15305 . 15310) (punctuation 15304 . 15305) (TEMPLATE 15295 . 15303) (punctuation 15292 . 15293) (semantic-list 14708 . 15292) (punctuation 14706 . 14707) (CONST 14701 . 14706) (punctuation 14668 . 14669) (punctuation 14667 . 14668) (punctuation 14666 . 14667) (punctuation 14651 . 14652) (symbol 14635 . 14651) (STRUCT 14628 . 14634) (punctuation 14626 . 14627) (symbol 14620 . 14626) (CLASS 14614 . 14619) (punctuation 14612 . 14613) (symbol 14608 . 14612) (CLASS 14602 . 14607) (punctuation 14600 . 14601) (symbol 14596 . 14600) (CLASS 14590 . 14595) (punctuation 14588 . 14589) (symbol 14584 . 14588) (CLASS 14578 . 14583) (punctuation 14576 . 14577) (symbol 14572 . 14576) (CLASS 14566 . 14571) (punctuation 14564 . 14565) (symbol 14560 . 14564) (CLASS 14554 . 14559) (punctuation 14552 . 14553) (symbol 14546 . 14552) (CLASS 14540 . 14545) (punctuation 14539 . 14540) (TEMPLATE 14530 . 14538) (punctuation 14480 . 14481) (semantic-list 14195 . 14480) (punctuation 14193 . 14194) (punctuation 14161 . 14162) (punctuation 14152 . 14153) (symbol 14136 . 14152) (STRUCT 14129 . 14135) (punctuation 14127 . 14128) (symbol 14121 . 14127) (CLASS 14115 . 14120) (punctuation 14113 . 14114) (symbol 14109 . 14113) (CLASS 14103 . 14108) (punctuation 14101 . 14102) (symbol 14097 . 14101) (CLASS 14091 . 14096) (punctuation 14089 . 14090) (symbol 14085 . 14089) (CLASS 14079 . 14084) (punctuation 14077 . 14078) (symbol 14073 . 14077) (CLASS 14067 . 14072) (punctuation 14065 . 14066) (symbol 14061 . 14065) (CLASS 14055 . 14060) (punctuation 14054 . 14055) (TEMPLATE 14045 . 14053) (punctuation 14042 . 14043) (semantic-list 13757 . 14042) (punctuation 13755 . 13756) (semantic-list 13725 . 13755) (symbol 13718 . 13724) (punctuation 13717 . 13718) (symbol 13701 . 13717) (STRUCT 13694 . 13700) (punctuation 13692 . 13693) (symbol 13686 . 13692) (CLASS 13680 . 13685) (punctuation 13678 . 13679) (symbol 13674 . 13678) (CLASS 13668 . 13673) (punctuation 13666 . 13667) (symbol 13662 . 13666) (CLASS 13656 . 13661) (punctuation 13654 . 13655) (symbol 13650 . 13654) (CLASS 13644 . 13649) (punctuation 13642 . 13643) (symbol 13638 . 13642) (CLASS 13632 . 13637) (punctuation 13630 . 13631) (symbol 13626 . 13630) (CLASS 13620 . 13625) (punctuation 13619 . 13620) (TEMPLATE 13610 . 13618) (punctuation 13607 . 13608) (semantic-list 13103 . 13607) (punctuation 13101 . 13102) (punctuation 13075 . 13076) (punctuation 13074 . 13075) (punctuation 13073 . 13074) (punctuation 13058 . 13059) (symbol 13042 . 13058) (STRUCT 13035 . 13041) (punctuation 13033 . 13034) (symbol 13027 . 13033) (CLASS 13021 . 13026) (punctuation 13019 . 13020) (symbol 13015 . 13019) (CLASS 13009 . 13014) (punctuation 13007 . 13008) (symbol 13003 . 13007) (CLASS 12997 . 13002) (punctuation 12995 . 12996) (symbol 12991 . 12995) (CLASS 12985 . 12990) (punctuation 12983 . 12984) (symbol 12979 . 12983) (CLASS 12973 . 12978) (punctuation 12971 . 12972) (symbol 12965 . 12971) (CLASS 12959 . 12964) (punctuation 12958 . 12959) (TEMPLATE 12949 . 12957) (punctuation 12946 . 12947) (semantic-list 12418 . 12946) (punctuation 12416 . 12417) (CONST 12411 . 12416) (punctuation 12384 . 12385) (punctuation 12383 . 12384) (punctuation 12382 . 12383) (punctuation 12367 . 12368) (symbol 12351 . 12367) (STRUCT 12344 . 12350) (punctuation 12342 . 12343) (symbol 12336 . 12342) (CLASS 12330 . 12335) (punctuation 12328 . 12329) (symbol 12324 . 12328) (CLASS 12318 . 12323) (punctuation 12316 . 12317) (symbol 12312 . 12316) (CLASS 12306 . 12311) (punctuation 12304 . 12305) (symbol 12300 . 12304) (CLASS 12294 . 12299) (punctuation 12292 . 12293) (symbol 12288 . 12292) (CLASS 12282 . 12287) (punctuation 12280 . 12281) (symbol 12274 . 12280) (CLASS 12268 . 12273) (punctuation 12267 . 12268) (TEMPLATE 12258 . 12266) (punctuation 12208 . 12209) (semantic-list 11951 . 12208) (punctuation 11949 . 11950) (punctuation 11923 . 11924) (punctuation 11914 . 11915) (symbol 11898 . 11914) (STRUCT 11891 . 11897) (punctuation 11889 . 11890) (symbol 11883 . 11889) (CLASS 11877 . 11882) (punctuation 11875 . 11876) (symbol 11871 . 11875) (CLASS 11865 . 11870) (punctuation 11863 . 11864) (symbol 11859 . 11863) (CLASS 11853 . 11858) (punctuation 11851 . 11852) (symbol 11847 . 11851) (CLASS 11841 . 11846) (punctuation 11839 . 11840) (symbol 11835 . 11839) (CLASS 11829 . 11834) (punctuation 11828 . 11829) (TEMPLATE 11819 . 11827) (punctuation 11816 . 11817) (semantic-list 11559 . 11816) (punctuation 11557 . 11558) (semantic-list 11533 . 11557) (symbol 11526 . 11532) (punctuation 11525 . 11526) (symbol 11509 . 11525) (STRUCT 11502 . 11508) (punctuation 11500 . 11501) (symbol 11494 . 11500) (CLASS 11488 . 11493) (punctuation 11486 . 11487) (symbol 11482 . 11486) (CLASS 11476 . 11481) (punctuation 11474 . 11475) (symbol 11470 . 11474) (CLASS 11464 . 11469) (punctuation 11462 . 11463) (symbol 11458 . 11462) (CLASS 11452 . 11457) (punctuation 11450 . 11451) (symbol 11446 . 11450) (CLASS 11440 . 11445) (punctuation 11439 . 11440) (TEMPLATE 11430 . 11438) (punctuation 11427 . 11428) (semantic-list 10979 . 11427) (punctuation 10977 . 10978) (punctuation 10957 . 10958) (punctuation 10956 . 10957) (punctuation 10955 . 10956) (punctuation 10940 . 10941) (symbol 10924 . 10940) (STRUCT 10917 . 10923) (punctuation 10915 . 10916) (symbol 10909 . 10915) (CLASS 10903 . 10908) (punctuation 10901 . 10902) (symbol 10897 . 10901) (CLASS 10891 . 10896) (punctuation 10889 . 10890) (symbol 10885 . 10889) (CLASS 10879 . 10884) (punctuation 10877 . 10878) (symbol 10873 . 10877) (CLASS 10867 . 10872) (punctuation 10865 . 10866) (symbol 10859 . 10865) (CLASS 10853 . 10858) (punctuation 10852 . 10853) (TEMPLATE 10843 . 10851) (punctuation 10840 . 10841) (semantic-list 10368 . 10840) (punctuation 10366 . 10367) (CONST 10361 . 10366) (punctuation 10340 . 10341) (punctuation 10339 . 10340) (punctuation 10338 . 10339) (punctuation 10323 . 10324) (symbol 10307 . 10323) (STRUCT 10300 . 10306) (punctuation 10298 . 10299) (symbol 10292 . 10298) (CLASS 10286 . 10291) (punctuation 10284 . 10285) (symbol 10280 . 10284) (CLASS 10274 . 10279) (punctuation 10272 . 10273) (symbol 10268 . 10272) (CLASS 10262 . 10267) (punctuation 10260 . 10261) (symbol 10256 . 10260) (CLASS 10250 . 10255) (punctuation 10248 . 10249) (symbol 10242 . 10248) (CLASS 10236 . 10241) (punctuation 10235 . 10236) (TEMPLATE 10226 . 10234) (punctuation 10176 . 10177) (semantic-list 9947 . 10176) (punctuation 9945 . 9946) (punctuation 9925 . 9926) (punctuation 9916 . 9917) (symbol 9900 . 9916) (STRUCT 9893 . 9899) (punctuation 9891 . 9892) (symbol 9885 . 9891) (CLASS 9879 . 9884) (punctuation 9877 . 9878) (symbol 9873 . 9877) (CLASS 9867 . 9872) (punctuation 9865 . 9866) (symbol 9861 . 9865) (CLASS 9855 . 9860) (punctuation 9853 . 9854) (symbol 9849 . 9853) (CLASS 9843 . 9848) (punctuation 9842 . 9843) (TEMPLATE 9833 . 9841) (punctuation 9830 . 9831) (semantic-list 9601 . 9830) (punctuation 9599 . 9600) (semantic-list 9581 . 9599) (symbol 9574 . 9580) (punctuation 9573 . 9574) (symbol 9557 . 9573) (STRUCT 9550 . 9556) (punctuation 9548 . 9549) (symbol 9542 . 9548) (CLASS 9536 . 9541) (punctuation 9534 . 9535) (symbol 9530 . 9534) (CLASS 9524 . 9529) (punctuation 9522 . 9523) (symbol 9518 . 9522) (CLASS 9512 . 9517) (punctuation 9510 . 9511) (symbol 9506 . 9510) (CLASS 9500 . 9505) (punctuation 9499 . 9500) (TEMPLATE 9490 . 9498) (punctuation 9487 . 9488) (semantic-list 9095 . 9487) (punctuation 9093 . 9094) (punctuation 9079 . 9080) (punctuation 9078 . 9079) (punctuation 9077 . 9078) (punctuation 9062 . 9063) (symbol 9046 . 9062) (STRUCT 9039 . 9045) (punctuation 9037 . 9038) (symbol 9031 . 9037) (CLASS 9025 . 9030) (punctuation 9023 . 9024) (symbol 9019 . 9023) (CLASS 9013 . 9018) (punctuation 9011 . 9012) (symbol 9007 . 9011) (CLASS 9001 . 9006) (punctuation 8999 . 9000) (symbol 8993 . 8999) (CLASS 8987 . 8992) (punctuation 8986 . 8987) (TEMPLATE 8977 . 8985) (punctuation 8974 . 8975) (semantic-list 8558 . 8974) (punctuation 8556 . 8557) (CONST 8551 . 8556) (punctuation 8536 . 8537) (punctuation 8535 . 8536) (punctuation 8534 . 8535) (punctuation 8519 . 8520) (symbol 8503 . 8519) (STRUCT 8496 . 8502) (punctuation 8494 . 8495) (symbol 8488 . 8494) (CLASS 8482 . 8487) (punctuation 8480 . 8481) (symbol 8476 . 8480) (CLASS 8470 . 8475) (punctuation 8468 . 8469) (symbol 8464 . 8468) (CLASS 8458 . 8463) (punctuation 8456 . 8457) (symbol 8450 . 8456) (CLASS 8444 . 8449) (punctuation 8443 . 8444) (TEMPLATE 8434 . 8442) (punctuation 8384 . 8385) (semantic-list 8183 . 8384) (punctuation 8181 . 8182) (punctuation 8167 . 8168) (punctuation 8158 . 8159) (symbol 8142 . 8158) (STRUCT 8135 . 8141) (punctuation 8133 . 8134) (symbol 8127 . 8133) (CLASS 8121 . 8126) (punctuation 8119 . 8120) (symbol 8115 . 8119) (CLASS 8109 . 8114) (punctuation 8107 . 8108) (symbol 8103 . 8107) (CLASS 8097 . 8102) (punctuation 8096 . 8097) (TEMPLATE 8087 . 8095) (punctuation 8084 . 8085) (semantic-list 7883 . 8084) (punctuation 7881 . 7882) (semantic-list 7869 . 7881) (symbol 7862 . 7868) (punctuation 7861 . 7862) (symbol 7845 . 7861) (STRUCT 7838 . 7844) (punctuation 7836 . 7837) (symbol 7830 . 7836) (CLASS 7824 . 7829) (punctuation 7822 . 7823) (symbol 7818 . 7822) (CLASS 7812 . 7817) (punctuation 7810 . 7811) (symbol 7806 . 7810) (CLASS 7800 . 7805) (punctuation 7799 . 7800) (TEMPLATE 7790 . 7798) (punctuation 7787 . 7788) (semantic-list 7451 . 7787) (punctuation 7449 . 7450) (punctuation 7441 . 7442) (punctuation 7440 . 7441) (punctuation 7439 . 7440) (punctuation 7424 . 7425) (symbol 7408 . 7424) (STRUCT 7401 . 7407) (punctuation 7399 . 7400) (symbol 7393 . 7399) (CLASS 7387 . 7392) (punctuation 7385 . 7386) (symbol 7381 . 7385) (CLASS 7375 . 7380) (punctuation 7373 . 7374) (symbol 7367 . 7373) (CLASS 7361 . 7366) (punctuation 7360 . 7361) (TEMPLATE 7351 . 7359) (punctuation 7348 . 7349) (semantic-list 6978 . 7348) (punctuation 6976 . 6977) (CONST 6971 . 6976) (punctuation 6962 . 6963) (punctuation 6961 . 6962) (punctuation 6960 . 6961) (punctuation 6945 . 6946) (symbol 6929 . 6945) (STRUCT 6922 . 6928) (punctuation 6920 . 6921) (symbol 6914 . 6920) (CLASS 6908 . 6913) (punctuation 6906 . 6907) (symbol 6902 . 6906) (CLASS 6896 . 6901) (punctuation 6894 . 6895) (symbol 6888 . 6894) (CLASS 6882 . 6887) (punctuation 6881 . 6882) (TEMPLATE 6872 . 6880) (punctuation 6822 . 6823) (semantic-list 6649 . 6822) (punctuation 6647 . 6648) (punctuation 6639 . 6640) (punctuation 6630 . 6631) (symbol 6614 . 6630) (STRUCT 6607 . 6613) (punctuation 6605 . 6606) (symbol 6599 . 6605) (CLASS 6593 . 6598) (punctuation 6591 . 6592) (symbol 6587 . 6591) (CLASS 6581 . 6586) (punctuation 6580 . 6581) (TEMPLATE 6571 . 6579) (punctuation 6568 . 6569) (semantic-list 6395 . 6568) (punctuation 6393 . 6394) (semantic-list 6387 . 6393) (symbol 6380 . 6386) (punctuation 6379 . 6380) (symbol 6363 . 6379) (STRUCT 6356 . 6362) (punctuation 6354 . 6355) (symbol 6348 . 6354) (CLASS 6342 . 6347) (punctuation 6340 . 6341) (symbol 6336 . 6340) (CLASS 6330 . 6335) (punctuation 6329 . 6330) (TEMPLATE 6320 . 6328) (punctuation 6317 . 6318) (semantic-list 6029 . 6317) (punctuation 6027 . 6028) (punctuation 6023 . 6024) (punctuation 6022 . 6023) (punctuation 6021 . 6022) (punctuation 6006 . 6007) (symbol 5990 . 6006) (STRUCT 5983 . 5989) (punctuation 5981 . 5982) (symbol 5975 . 5981) (CLASS 5969 . 5974) (punctuation 5967 . 5968) (symbol 5961 . 5967) (CLASS 5955 . 5960) (punctuation 5954 . 5955) (TEMPLATE 5945 . 5953) (punctuation 5942 . 5943) (semantic-list 5630 . 5942) (punctuation 5628 . 5629) (CONST 5623 . 5628) (punctuation 5618 . 5619) (punctuation 5617 . 5618) (punctuation 5616 . 5617) (punctuation 5601 . 5602) (symbol 5585 . 5601) (STRUCT 5578 . 5584) (punctuation 5576 . 5577) (symbol 5570 . 5576) (CLASS 5564 . 5569) (punctuation 5562 . 5563) (symbol 5556 . 5562) (CLASS 5550 . 5555) (punctuation 5549 . 5550) (TEMPLATE 5540 . 5548) (punctuation 5490 . 5491) (semantic-list 5341 . 5490) (punctuation 5339 . 5340) (punctuation 5331 . 5332) (punctuation 5322 . 5323) (symbol 5306 . 5322) (STRUCT 5299 . 5305) (punctuation 5297 . 5298) (symbol 5291 . 5297) (CLASS 5285 . 5290) (punctuation 5284 . 5285) (TEMPLATE 5275 . 5283) (punctuation 5272 . 5273) (semantic-list 5121 . 5272) (punctuation 5119 . 5120) (semantic-list 5113 . 5119) (symbol 5106 . 5112) (punctuation 5105 . 5106) (symbol 5089 . 5105) (STRUCT 5082 . 5088) (punctuation 5080 . 5081) (symbol 5074 . 5080) (CLASS 5068 . 5073) (punctuation 5067 . 5068) (TEMPLATE 5058 . 5066) (punctuation 5005 . 5006) (semantic-list 3297 . 5005) (punctuation 3295 . 3296) (punctuation 3294 . 3295) (punctuation 3293 . 3294) (punctuation 3292 . 3293) (symbol 3286 . 3292) (symbol 3284 . 3285) (punctuation 3283 . 3284) (symbol 3267 . 3283) (STRUCT 3260 . 3266) (punctuation 3258 . 3259) (symbol 3257 . 3258) (CLASS 3251 . 3256) (punctuation 3249 . 3250) (symbol 3243 . 3249) (CLASS 3237 . 3242) (punctuation 3236 . 3237) (TEMPLATE 3227 . 3235) (punctuation 1131 . 1132) (punctuation 1130 . 1131) (punctuation 1129 . 1130) (symbol 1125 . 1129) (punctuation 1124 . 1125) (symbol 1121 . 1124) (TEMPLATE 1112 . 1120) (punctuation 1111 . 1112) (punctuation 1110 . 1111) (symbol 1104 . 1110) (TYPENAME 1095 . 1103) (TYPEDEF 1087 . 1094))
    :lexical-table 
        '(("BOOST_LAMBDA_FUNCTION_ADAPTORS_HPP")
          )

    )
   (semanticdb-table "return_type_traits.hpp"
    :major-mode 'c++-mode
    :tags 
        '( ("BOOST_LAMBDA_RETURN_TYPE_TRAITS_HPP" variable (:constant-flag t) nil [406 441])
            ("boost/mpl/has_xxx.hpp" include nil nil [443 475])
            ("cstddef" include (:system-flag t) nil [477 495])
            ("boost" type
               (:members 
                  ( ("lambda" type
                       (:members 
                          ( ("boost::type_traits::ice_and" variable (:type "int") (reparse-symbol namespacesubparts) [572 600])
                            ("boost::type_traits::ice_or" variable (:type "int") (reparse-symbol namespacesubparts) [609 636])
                            ("boost::type_traits::ice_not" variable (:type "int") (reparse-symbol namespacesubparts) [645 673])
                            ("return_type_1" type
                               (:template 
                                  ( ("Act" type (:type "class") nil nil)
                                    ("A1" type (:type "class") nil nil))                                  
                                :type "struct"
                                :prototype t)
                                (reparse-symbol namespacesubparts) [786 838])
                            ("return_type_2" type
                               (:template 
                                  ( ("Act" type (:type "class") nil nil)
                                    ("A1" type (:type "class") nil nil)
                                    ("A2" type (:type "class") nil nil))                                  
                                :type "struct"
                                :prototype t)
                                (reparse-symbol namespacesubparts) [856 918])
                            ("return_type_N" type
                               (:template 
                                  ( ("Act" type (:type "class") nil nil)
                                    ("Args" type (:type "class") nil nil))                                  
                                :type "struct"
                                :prototype t)
                                (reparse-symbol namespacesubparts) [928 982])
                            ("return_type_1_prot" type
                               (:template 
                                  ( ("Act" type (:type "class") nil nil)
                                    ("A1" type (:type "class") nil nil))                                  
                                :type "struct"
                                :prototype t)
                                (reparse-symbol namespacesubparts) [995 1052])
                            ("return_type_2_prot" type
                               (:template 
                                  ( ("Act" type (:type "class") nil nil)
                                    ("A1" type (:type "class") nil nil)
                                    ("A2" type (:type "class") nil nil))                                  
                                :type "struct"
                                :prototype t)
                                (reparse-symbol namespacesubparts) [1053 1120])
                            ("return_type_N_prot" type
                               (:template 
                                  ( ("Act" type (:type "class") nil nil)
                                    ("A1" type (:type "class") nil nil))                                  
                                :type "struct"
                                :prototype t)
                                (reparse-symbol namespacesubparts) [1130 1187])
                            ("detail" type
                               (:members 
                                  ( ("return_type_deduction_failure" type
                                       (:template 
                                          ( ("" type nil nil nil))                                          
                                        :type "class")
                                        (reparse-symbol namespacesubparts) [1220 1275]))                                  
                                :type "namespace")
                                (reparse-symbol namespacesubparts) [1200 2087])
                            ("return_type_1_prot" type
                               (:template 
                                  ( ("Act" type (:type "class") nil nil)
                                    ("A" type (:type "class") nil nil))                                  
                                :type "struct"
                                :members 
                                  ( ("public" label nil (reparse-symbol classsubparts) [2841 2848])
                                    ("type" variable (:type ("RET" type (:type "class") nil nil)) (reparse-symbol classsubparts) [3237 3246]))                                  )
                                (reparse-symbol namespacesubparts) [2783 3251])
                            ("return_type_1_prot" type
                               (:template 
                                  ( ("Act" type (:type "class") nil nil))                                  
                                :type "struct"
                                :members 
                                  ( ("type" type
                                       (:typedef ("null_type" type (:type "class") nil nil)
                                        :superclasses "null_type"
                                        :type "typedef")
                                        (reparse-symbol classsubparts) [3384 3407]))                                  
                                :template-specifier 
                                  ( ("Act" type nil nil nil)
                                    ("null_type" type nil nil nil))                                  )
                                (reparse-symbol namespacesubparts) [3318 3410])
                            ("return_type_1" type
                               (:template 
                                  ( ("Act" type (:type "class") nil nil)
                                    ("A" type (:type "class") nil nil))                                  
                                :type "struct"
                                :members 
                                  ( ("type" type
                                       (:typedef ("detail::return_type_deduction_failure" type
                                             (:template-specifier 
                                                ( ("return_type_1" type nil nil nil))                                                
                                              :type "class")
                                              nil nil)
                                        :superclasses "detail::return_type_deduction_failure"
                                        :type "typedef")
                                        (reparse-symbol classsubparts) [3554 3635]))                                  )
                                (reparse-symbol namespacesubparts) [3498 3638])
                            ("detail" type
                               (:members 
                                  ( ("protect_conversion" type
                                       (:template 
                                          ( ("T" type (:type "class") nil nil))                                          
                                        :type "class"
                                        :members 
                                          ( ("non_ref_T" type
                                               (:typedef ("boost::remove_reference::type" type (:type "class") nil nil)
                                                :superclasses "boost::remove_reference::type"
                                                :type "typedef")
                                                (reparse-symbol classsubparts) [3717 3777])
                                            ("public" label nil (reparse-symbol classsubparts) [3782 3789])
                                            ("type" variable (:type ("type" type (:type "class") nil nil)) (reparse-symbol classsubparts) [4224 4234]))                                          )
                                        (reparse-symbol namespacesubparts) [3663 4279]))                                  
                                :type "namespace")
                                (reparse-symbol namespacesubparts) [3641 4282])
                            ("return_type_2_prot" type
                               (:template 
                                  ( ("Act" type (:type "class") nil nil)
                                    ("A" type (:type "class") nil nil)
                                    ("B" type (:type "class") nil nil))                                  
                                :type "struct"
                                :members 
                                  ( ("non_ref_A" type
                                       (:typedef ("boost::remove_reference::type" type (:type "class") nil nil)
                                        :superclasses "boost::remove_reference::type"
                                        :type "typedef")
                                        (reparse-symbol classsubparts) [5339 5399])
                                    ("non_ref_B" type
                                       (:typedef ("boost::remove_reference::type" type (:type "class") nil nil)
                                        :superclasses "boost::remove_reference::type"
                                        :type "typedef")
                                        (reparse-symbol classsubparts) [5402 5462])
                                    ("type" variable (:type ("RET" type (:type "class") nil nil)) (reparse-symbol classsubparts) [6018 6027]))                                  )
                                (reparse-symbol namespacesubparts) [4298 6030])
                            ("return_type_2_prot" type
                               (:template 
                                  ( ("Act" type (:type "class") nil nil))                                  
                                :type "struct"
                                :members 
                                  ( ("type" type
                                       (:typedef ("null_type" type (:type "class") nil nil)
                                        :superclasses "null_type"
                                        :type "typedef")
                                        (reparse-symbol classsubparts) [6174 6197]))                                  
                                :template-specifier 
                                  ( ("Act" type nil nil nil)
                                    ("null_type" type nil nil nil)
                                    ("null_type" type nil nil nil))                                  )
                                (reparse-symbol namespacesubparts) [6097 6200])
                            ("return_type_2_prot" type
                               (:template 
                                  ( ("Act" type (:type "class") nil nil)
                                    ("Other" type (:type "class") nil nil))                                  
                                :type "struct"
                                :members 
                                  ( ("type" type
                                       (:typedef ("null_type" type (:type "class") nil nil)
                                        :superclasses "null_type"
                                        :type "typedef")
                                        (reparse-symbol classsubparts) [6352 6375]))                                  
                                :template-specifier 
                                  ( ("Act" type nil nil nil)
                                    ("Other" type nil nil nil)
                                    ("null_type" type nil nil nil))                                  )
                                (reparse-symbol namespacesubparts) [6266 6378])
                            ("return_type_2_prot" type
                               (:template 
                                  ( ("Act" type (:type "class") nil nil)
                                    ("Other" type (:type "class") nil nil))                                  
                                :type "struct"
                                :members 
                                  ( ("type" type
                                       (:typedef ("null_type" type (:type "class") nil nil)
                                        :superclasses "null_type"
                                        :type "typedef")
                                        (reparse-symbol classsubparts) [6530 6553]))                                  
                                :template-specifier 
                                  ( ("Act" type nil nil nil)
                                    ("null_type" type nil nil nil)
                                    ("Other" type nil nil nil))                                  )
                                (reparse-symbol namespacesubparts) [6444 6556])
                            ("return_type_2_comma" type
                               (:template 
                                  ( ("A" type (:type "class") nil nil)
                                    ("B" type (:type "class") nil nil))                                  
                                :type "struct"
                                :members 
                                  ( ("non_ref_A" type
                                       (:typedef ("boost::remove_reference::type" type (:type "class") nil nil)
                                        :superclasses "boost::remove_reference::type"
                                        :type "typedef")
                                        (reparse-symbol classsubparts) [6759 6819])
                                    ("non_ref_B" type
                                       (:typedef ("boost::remove_reference::type" type (:type "class") nil nil)
                                        :superclasses "boost::remove_reference::type"
                                        :type "typedef")
                                        (reparse-symbol classsubparts) [6822 6882])
                                    ("type1" variable (:type ("RET" type (:type "class") nil nil)) (reparse-symbol classsubparts) [7575 7585])
                                    ("type" type
                                       (:typedef ("detail::IF::RET" type (:type "class") nil nil)
                                        :superclasses "detail::IF::RET"
                                        :type "typedef")
                                        (reparse-symbol classsubparts) [7717 7846]))                                  )
                                (reparse-symbol namespacesubparts) [6700 7850])
                            ("return_type_N_prot" type
                               (:template 
                                  ( ("Act" type (:type "class") nil nil)
                                    ("Args" type (:type "class") nil nil))                                  
                                :type "struct"
                                :members 
                                  ( ("type" variable (:type ("type" type (:type "class") nil nil)) (reparse-symbol classsubparts) [8151 8161]))                                  )
                                (reparse-symbol namespacesubparts) [8046 8164])
                            ("return_type_N_prot" type
                               (:template 
                                  ( ("Act" type (:type "class") nil nil))                                  
                                :type "struct"
                                :members 
                                  ( ("type" type
                                       (:typedef ("null_type" type (:type "class") nil nil)
                                        :superclasses "null_type"
                                        :type "typedef")
                                        (reparse-symbol classsubparts) [8297 8320]))                                  
                                :template-specifier 
                                  ( ("Act" type nil nil nil)
                                    ("null_type" type nil nil nil))                                  )
                                (reparse-symbol namespacesubparts) [8231 8323])
                            ("return_type_N" type
                               (:template 
                                  ( ("int" type nil nil nil)
                                    ("Args" type (:type "class") nil nil)
                                    ("Ret" type (:type "class") nil nil))                                  
                                :type "struct"
                                :members 
                                  ( ("type" type
                                       (:typedef ("Ret" type (:type "class") nil nil)
                                        :superclasses "Ret"
                                        :type "typedef")
                                        (reparse-symbol classsubparts) [8556 8573]))                                  
                                :template-specifier 
                                  ( ("function_action" type nil nil nil)
                                    ("Args" type nil nil nil))                                  )
                                (reparse-symbol namespacesubparts) [8459 8576])
                            ("detail" type
                               (:members 
                                  ( ("get_result_type" type
                                       (:template 
                                          ( ("F" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :members 
                                          ( ("type" type
                                               (:typedef ("F::result_type" type (:type "class") nil nil)
                                                :superclasses "F::result_type"
                                                :type "typedef")
                                                (reparse-symbol classsubparts) [8711 8748]))                                          )
                                        (reparse-symbol namespacesubparts) [8666 8751])
                                    ("get_sig" type
                                       (:template 
                                          ( ("F" type (:type "class") nil nil)
                                            ("A" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :members 
                                          ( ("type" variable (:type ("type" type (:type "class") nil nil)) (reparse-symbol classsubparts) [8854 8864]))                                          )
                                        (reparse-symbol namespacesubparts) [8753 8867]))                                  
                                :type "namespace")
                                (reparse-symbol namespacesubparts) [8604 8870])
                            ("return_type_N" type
                               (:template 
                                  ( ("int" type nil nil nil)
                                    ("Args" type (:type "class") nil nil))                                  
                                :type "struct"
                                :members 
                                  ( ("Func" type
                                       (:typedef ("Args::head_type" type (:type "class") nil nil)
                                        :superclasses "Args::head_type"
                                        :type "typedef")
                                        (reparse-symbol classsubparts) [9152 9190])
                                    ("plain_Func" type
                                       (:typedef ("detail::remove_reference_and_cv::type" type (:type "class") nil nil)
                                        :superclasses "detail::remove_reference_and_cv::type"
                                        :type "typedef")
                                        (reparse-symbol classsubparts) [9193 9265])
                                    ("public" label nil (reparse-symbol classsubparts) [9267 9274])
                                    ("type" type
                                       (:typedef ("detail::IF::RET::type" type (:type "class") nil nil)
                                        :superclasses "detail::IF::RET::type"
                                        :type "typedef")
                                        (reparse-symbol classsubparts) [9362 9538]))                                  
                                :template-specifier 
                                  ( ("function_action" type nil nil nil)
                                    ("Args" type nil nil nil))                                  )
                                (reparse-symbol namespacesubparts) [8954 9541]))                          
                        :type "namespace")
                        (reparse-symbol namespacesubparts) [544 9545]))                  
                :type "namespace")
                nil [525 9567]))          
    :file "return_type_traits.hpp"
    :pointmax 9598
    :fsize 9597
    :lastmodtime '(17765 48449)
    :unmatched-syntax '((punctuation 8853 . 8854) (punctuation 8852 . 8853) (punctuation 8851 . 8852) (symbol 8850 . 8851) (punctuation 8849 . 8850) (symbol 8846 . 8849) (TEMPLATE 8837 . 8845) (punctuation 8836 . 8837) (punctuation 8835 . 8836) (punctuation 8834 . 8835) (symbol 8833 . 8834) (punctuation 8832 . 8833) (symbol 8816 . 8832) (TYPENAME 8807 . 8815) (TYPEDEF 8799 . 8806) (semantic-list 8651 . 8664) (symbol 8624 . 8651) (punctuation 8150 . 8151) (punctuation 8149 . 8150) (punctuation 8148 . 8149) (symbol 8144 . 8148) (punctuation 8142 . 8143) (symbol 8139 . 8142) (punctuation 8138 . 8139) (symbol 8125 . 8138) (TYPENAME 8116 . 8124) (TYPEDEF 8108 . 8115) (punctuation 7574 . 7575) (punctuation 7573 . 7574) (punctuation 7572 . 7573) (symbol 7565 . 7569) (punctuation 7564 . 7565) (punctuation 7563 . 7564) (punctuation 7562 . 7563) (symbol 7553 . 7562) (punctuation 7551 . 7552) (symbol 7542 . 7551) (punctuation 7540 . 7541) (punctuation 7539 . 7540) (symbol 7527 . 7539) (punctuation 7526 . 7527) (symbol 7514 . 7526) (punctuation 7513 . 7514) (symbol 7500 . 7513) (TYPENAME 7484 . 7492) (punctuation 7478 . 7479) (punctuation 7477 . 7478) (punctuation 7471 . 7472) (punctuation 7463 . 7464) (symbol 7459 . 7463) (punctuation 7458 . 7459) (punctuation 7457 . 7458) (punctuation 7456 . 7457) (symbol 7455 . 7456) (punctuation 7454 . 7455) (symbol 7436 . 7454) (punctuation 7435 . 7436) (punctuation 7434 . 7435) (symbol 7428 . 7434) (TYPENAME 7419 . 7427) (punctuation 7402 . 7403) (symbol 7398 . 7402) (punctuation 7397 . 7398) (punctuation 7396 . 7397) (punctuation 7395 . 7396) (symbol 7394 . 7395) (punctuation 7393 . 7394) (symbol 7375 . 7393) (punctuation 7374 . 7375) (punctuation 7373 . 7374) (symbol 7367 . 7373) (TYPENAME 7358 . 7366) (punctuation 7357 . 7358) (symbol 7352 . 7357) (punctuation 7341 . 7342) (punctuation 7340 . 7341) (symbol 7328 . 7340) (punctuation 7327 . 7328) (symbol 7315 . 7327) (punctuation 7304 . 7305) (symbol 7285 . 7304) (punctuation 7277 . 7278) (symbol 7263 . 7277) (punctuation 7257 . 7258) (symbol 7252 . 7257) (punctuation 7251 . 7252) (punctuation 7250 . 7251) (punctuation 7249 . 7250) (symbol 7244 . 7249) (punctuation 7243 . 7244) (punctuation 7242 . 7243) (punctuation 7241 . 7242) (symbol 7236 . 7241) (punctuation 7235 . 7236) (punctuation 7234 . 7235) (punctuation 7233 . 7234) (symbol 7232 . 7233) (punctuation 7231 . 7232) (symbol 7214 . 7231) (punctuation 7192 . 7193) (symbol 7187 . 7192) (punctuation 7186 . 7187) (punctuation 7185 . 7186) (punctuation 7184 . 7185) (symbol 7183 . 7184) (punctuation 7182 . 7183) (symbol 7165 . 7182) (punctuation 7164 . 7165) (symbol 7158 . 7164) (punctuation 7123 . 7124) (symbol 7118 . 7123) (punctuation 7117 . 7118) (punctuation 7116 . 7117) (punctuation 7115 . 7116) (punctuation 7113 . 7114) (symbol 7101 . 7113) (punctuation 7100 . 7101) (symbol 7088 . 7100) (punctuation 7087 . 7088) (symbol 7073 . 7087) (punctuation 7072 . 7073) (symbol 7065 . 7072) (punctuation 6914 . 6915) (symbol 6912 . 6914) (punctuation 6911 . 6912) (punctuation 6910 . 6911) (symbol 6904 . 6910) (TYPENAME 6892 . 6900) (TYPEDEF 6884 . 6891) (punctuation 6017 . 6018) (punctuation 6016 . 6017) (punctuation 6015 . 6016) (symbol 6008 . 6012) (punctuation 6007 . 6008) (punctuation 6006 . 6007) (punctuation 6005 . 6006) (symbol 5996 . 6005) (punctuation 5994 . 5995) (symbol 5985 . 5994) (punctuation 5983 . 5984) (symbol 5980 . 5983) (punctuation 5979 . 5980) (symbol 5966 . 5979) (TYPENAME 5957 . 5965) (punctuation 5951 . 5952) (punctuation 5950 . 5951) (punctuation 5944 . 5945) (punctuation 5936 . 5937) (symbol 5932 . 5936) (punctuation 5931 . 5932) (punctuation 5930 . 5931) (punctuation 5929 . 5930) (symbol 5928 . 5929) (punctuation 5927 . 5928) (symbol 5909 . 5927) (punctuation 5908 . 5909) (punctuation 5907 . 5908) (symbol 5901 . 5907) (TYPENAME 5892 . 5900) (punctuation 5875 . 5876) (symbol 5871 . 5875) (punctuation 5870 . 5871) (punctuation 5869 . 5870) (punctuation 5868 . 5869) (symbol 5867 . 5868) (punctuation 5866 . 5867) (symbol 5848 . 5866) (punctuation 5847 . 5848) (punctuation 5846 . 5847) (symbol 5840 . 5846) (TYPENAME 5831 . 5839) (punctuation 5830 . 5831) (symbol 5825 . 5830) (punctuation 5814 . 5815) (symbol 5811 . 5814) (punctuation 5800 . 5801) (symbol 5781 . 5800) (punctuation 5773 . 5774) (symbol 5759 . 5773) (punctuation 5753 . 5754) (symbol 5748 . 5753) (punctuation 5747 . 5748) (punctuation 5746 . 5747) (punctuation 5745 . 5746) (symbol 5740 . 5745) (punctuation 5739 . 5740) (punctuation 5738 . 5739) (punctuation 5737 . 5738) (symbol 5732 . 5737) (punctuation 5731 . 5732) (punctuation 5730 . 5731) (punctuation 5729 . 5730) (symbol 5728 . 5729) (punctuation 5727 . 5728) (symbol 5710 . 5727) (punctuation 5688 . 5689) (symbol 5683 . 5688) (punctuation 5682 . 5683) (punctuation 5681 . 5682) (punctuation 5680 . 5681) (symbol 5679 . 5680) (punctuation 5678 . 5679) (symbol 5661 . 5678) (punctuation 5660 . 5661) (symbol 5654 . 5660) (punctuation 5640 . 5641) (symbol 5635 . 5640) (punctuation 5634 . 5635) (punctuation 5633 . 5634) (punctuation 5632 . 5633) (symbol 5629 . 5632) (punctuation 5628 . 5629) (symbol 5614 . 5628) (punctuation 5613 . 5614) (symbol 5606 . 5613) (punctuation 5494 . 5495) (symbol 5492 . 5494) (punctuation 5491 . 5492) (punctuation 5490 . 5491) (symbol 5484 . 5490) (TYPENAME 5472 . 5480) (TYPEDEF 5464 . 5471) (punctuation 4223 . 4224) (punctuation 4222 . 4223) (punctuation 4221 . 4222) (punctuation 4185 . 4186) (symbol 4176 . 4185) (punctuation 4175 . 4176) (symbol 4156 . 4175) (punctuation 4148 . 4149) (punctuation 4147 . 4148) (symbol 4146 . 4147) (punctuation 4145 . 4146) (symbol 4129 . 4145) (punctuation 4128 . 4129) (punctuation 4127 . 4128) (symbol 4121 . 4127) (punctuation 4113 . 4114) (symbol 4108 . 4113) (punctuation 4107 . 4108) (punctuation 4106 . 4107) (punctuation 4105 . 4106) (symbol 4100 . 4105) (punctuation 4099 . 4100) (punctuation 4098 . 4099) (punctuation 4097 . 4098) (symbol 4092 . 4097) (punctuation 4091 . 4092) (punctuation 4090 . 4091) (punctuation 4089 . 4090) (symbol 4080 . 4089) (punctuation 4079 . 4080) (symbol 4071 . 4079) (punctuation 4070 . 4071) (punctuation 4069 . 4070) (symbol 4064 . 4069) (punctuation 4063 . 4064) (symbol 4056 . 4063) (punctuation 4040 . 4041) (symbol 4035 . 4040) (punctuation 4034 . 4035) (punctuation 4033 . 4034) (punctuation 4032 . 4033) (symbol 4031 . 4032) (punctuation 4030 . 4031) (symbol 4018 . 4030) (punctuation 4017 . 4018) (punctuation 4016 . 4017) (symbol 4011 . 4016) (punctuation 4010 . 4011) (symbol 4003 . 4010) (punctuation 3918 . 3919) (symbol 3911 . 3918) (punctuation 3910 . 3911) (punctuation 3909 . 3910) (symbol 3903 . 3909) (TYPENAME 3894 . 3902) (TYPEDEF 3886 . 3893) (punctuation 3236 . 3237) (punctuation 3235 . 3236) (punctuation 3234 . 3235) (symbol 3225 . 3229) (punctuation 3224 . 3225) (punctuation 3223 . 3224) (punctuation 3222 . 3223) (symbol 3221 . 3222) (punctuation 3219 . 3220) (symbol 3216 . 3219) (punctuation 3215 . 3216) (symbol 3202 . 3215) (TYPENAME 3193 . 3201) (punctuation 3185 . 3186) (punctuation 3184 . 3185) (punctuation 3176 . 3177) (punctuation 3166 . 3167) (symbol 3162 . 3166) (punctuation 3161 . 3162) (punctuation 3160 . 3161) (punctuation 3159 . 3160) (symbol 3158 . 3159) (punctuation 3157 . 3158) (symbol 3134 . 3157) (punctuation 3133 . 3134) (punctuation 3132 . 3133) (symbol 3126 . 3132) (TYPENAME 3117 . 3125) (punctuation 3116 . 3117) (symbol 3111 . 3116) (punctuation 3098 . 3099) (symbol 3095 . 3098) (punctuation 3082 . 3083) (symbol 3063 . 3082) (punctuation 3053 . 3054) (symbol 3039 . 3053) (punctuation 3031 . 3032) (symbol 3026 . 3031) (punctuation 3025 . 3026) (punctuation 3024 . 3025) (punctuation 3023 . 3024) (symbol 3018 . 3023) (punctuation 3017 . 3018) (punctuation 3016 . 3017) (punctuation 3015 . 3016) (symbol 3014 . 3015) (punctuation 3013 . 3014) (symbol 2996 . 3013) (punctuation 2994 . 2995) (symbol 2989 . 2994) (punctuation 2988 . 2989) (punctuation 2987 . 2988) (punctuation 2986 . 2987) (symbol 2983 . 2986) (punctuation 2982 . 2983) (symbol 2968 . 2982) (punctuation 2967 . 2968) (symbol 2960 . 2967) (punctuation 2883 . 2884) (symbol 2881 . 2883) (punctuation 2880 . 2881) (punctuation 2879 . 2880) (symbol 2873 . 2879) (TYPENAME 2859 . 2867) (TYPEDEF 2851 . 2858) (punctuation 644 . 645) (punctuation 643 . 644) (USING 637 . 642) (punctuation 608 . 609) (punctuation 607 . 608) (USING 601 . 606) (punctuation 571 . 572) (punctuation 570 . 571) (USING 564 . 569))
    :lexical-table 
        '(("BOOST_LAMBDA_RETURN_TYPE_TRAITS_HPP")
          )

    )
   (semanticdb-table "select_functions.hpp"
    :major-mode 'c++-mode
    :tags 
        '( ("BOOST_LAMBDA_SELECT_FUNCTIONS_HPP" variable (:constant-flag t) nil [410 443])
            ("boost" type
               (:members 
                  ( ("lambda" type
                       (:members 
                          ( ("detail" type
                               (:members 
                                  ( ("select" function
                                       (:template 
                                          ( ("Any" type (:type "class") nil nil)
                                            ("CALL_TEMPLATE_ARGS" type nil nil nil))                                          
                                        :type ("Any" type (:type "class") nil nil)
                                        :arguments 
                                          ( ("any" variable
                                               (:reference 1
                                                :type ("Any" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [615 624])
                                            ("" variable (:type ("CALL_FORMAL_ARGS" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [625 642]))                                          
                                        :typemodifiers ("inline"))
                                        (reparse-symbol namespacesubparts) [556 673])
                                    ("select" function
                                       (:arguments 
                                          ( ("op" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("lambda_functor" type
                                                     (:template-specifier 
                                                        ( ("Arg" type nil nil nil))                                                        
                                                      :type "class")
                                                      nil nil))
                                                (reparse-symbol arg-sub-list) [795 825])
                                            ("" variable (:type ("CALL_FORMAL_ARGS" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [826 844]))                                          
                                        :type ("type" type (:type "class") nil nil))
                                        (reparse-symbol namespacesubparts) [781 967])
                                    ("select" function
                                       (:arguments 
                                          ( ("op" variable
                                               (:reference 1
                                                :type ("lambda_functor" type
                                                     (:template-specifier 
                                                        ( ("Arg" type nil nil nil))                                                        
                                                      :type "class")
                                                      nil nil))
                                                (reparse-symbol arg-sub-list) [1087 1111])
                                            ("" variable (:type ("CALL_FORMAL_ARGS" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1112 1129]))                                          
                                        :type ("type" type (:type "class") nil nil))
                                        (reparse-symbol namespacesubparts) [1073 1252])
                                    ("r_select" type
                                       (:template 
                                          ( ("RET" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :members 
                                          ( ("go" function
                                               (:template 
                                                  ( ("Any" type (:type "class") nil nil)
                                                    ("CALL_TEMPLATE_ARGS" type nil nil nil))                                                  
                                                :type ("RET" type (:type "class") nil nil)
                                                :arguments 
                                                  ( ("any" variable
                                                       (:reference 1
                                                        :type ("Any" type (:type "class") nil nil))
                                                        (reparse-symbol arg-sub-list) [1935 1944])
                                                    ("" variable (:type ("CALL_FORMAL_ARGS" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1945 1962]))                                                  
                                                :typemodifiers ("static" "inline"))
                                                (reparse-symbol classsubparts) [1868 1993])
                                            ("go" function
                                               (:template 
                                                  ( ("Arg" type (:type "class") nil nil)
                                                    ("CALL_TEMPLATE_ARGS" type nil nil nil))                                                  
                                                :type ("RET" type (:type "class") nil nil)
                                                :arguments 
                                                  ( ("op" variable
                                                       (:reference 1
                                                        :constant-flag t
                                                        :type ("lambda_functor" type
                                                             (:template-specifier 
                                                                ( ("Arg" type nil nil nil))                                                                
                                                              :type "class")
                                                              nil nil))
                                                        (reparse-symbol arg-sub-list) [2066 2096])
                                                    ("" variable (:type ("CALL_FORMAL_ARGS" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2097 2115]))                                                  
                                                :typemodifiers ("static" "inline"))
                                                (reparse-symbol classsubparts) [1998 2174])
                                            ("go" function
                                               (:template 
                                                  ( ("Arg" type (:type "class") nil nil)
                                                    ("CALL_TEMPLATE_ARGS" type nil nil nil))                                                  
                                                :type ("RET" type (:type "class") nil nil)
                                                :arguments 
                                                  ( ("op" variable
                                                       (:reference 1
                                                        :type ("lambda_functor" type
                                                             (:template-specifier 
                                                                ( ("Arg" type nil nil nil))                                                                
                                                              :type "class")
                                                              nil nil))
                                                        (reparse-symbol arg-sub-list) [2245 2269])
                                                    ("" variable (:type ("CALL_FORMAL_ARGS" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2270 2288]))                                                  
                                                :typemodifiers ("static" "inline"))
                                                (reparse-symbol classsubparts) [2177 2348]))                                          )
                                        (reparse-symbol namespacesubparts) [1813 2351]))                                  
                                :type "namespace")
                                (reparse-symbol namespacesubparts) [483 2357]))                          
                        :type "namespace")
                        (reparse-symbol namespacesubparts) [464 2379]))                  
                :type "namespace")
                nil [445 2401]))          
    :file "select_functions.hpp"
    :pointmax 2429
    :fsize 2428
    :lastmodtime '(17765 48449)
    :unmatched-syntax '((punctuation 1072 . 1073) (punctuation 1071 . 1072) (punctuation 1070 . 1071) (punctuation 1068 . 1069) (symbol 1048 . 1068) (punctuation 1047 . 1048) (symbol 1042 . 1047) (punctuation 1041 . 1042) (symbol 1038 . 1041) (TEMPLATE 1029 . 1037) (punctuation 1028 . 1029) (punctuation 1027 . 1028) (symbol 1024 . 1027) (TYPENAME 1015 . 1023) (INLINE 1008 . 1014) (punctuation 1006 . 1007) (symbol 988 . 1006) (punctuation 986 . 987) (symbol 983 . 986) (CLASS 977 . 982) (punctuation 976 . 977) (TEMPLATE 968 . 976) (punctuation 780 . 781) (punctuation 779 . 780) (punctuation 778 . 779) (punctuation 776 . 777) (symbol 756 . 776) (punctuation 755 . 756) (symbol 750 . 755) (punctuation 749 . 750) (symbol 746 . 749) (TEMPLATE 737 . 745) (punctuation 736 . 737) (punctuation 735 . 736) (symbol 732 . 735) (TYPENAME 723 . 731) (INLINE 716 . 722) (punctuation 714 . 715) (symbol 696 . 714) (punctuation 694 . 695) (symbol 691 . 694) (CLASS 685 . 690) (punctuation 684 . 685) (TEMPLATE 676 . 684))
    :lexical-table 
        '(("BOOST_LAMBDA_SELECT_FUNCTIONS_HPP")
          )

    )
   (semanticdb-table "lambda_functor_base.hpp"
    :major-mode 'c++-mode
    :tags 
        '( ("BOOST_LAMBDA_LAMBDA_FUNCTOR_BASE_HPP" variable (:constant-flag t) nil [473 509])
            ("boost" type
               (:members 
                  ( ("lambda" type
                       (:members 
                          ( ("identity" type
                               (:template 
                                  ( ("T" type (:type "class") nil nil))                                  
                                :type "class"
                                :members 
                                  ( ("elem" variable (:type ("T" type (:type "class") nil nil)) (reparse-symbol classsubparts) [723 730])
                                    ("public" label nil (reparse-symbol classsubparts) [731 738])
                                    ("element_t" type
                                       (:typedef ("T" type (:type "class") nil nil)
                                        :superclasses "T"
                                        :type "typedef")
                                        (reparse-symbol classsubparts) [744 764])
                                    ("par_t" variable (:type ("type" type (:type "class") nil nil)) (reparse-symbol classsubparts) [951 962])
                                    ("identity" function
                                       (:constructor-flag t
                                        :arguments 
                                          ( ("t" variable (:type ("par_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [984 992]))                                          
                                        :type ("explicit" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [966 1005])
                                    ("sig" type
                                       (:template 
                                          ( ("SigArgs" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :members 
                                          ( ("type" type
                                               (:typedef ("element_t" type (:type "class") nil nil)
                                                :superclasses "element_t"
                                                :type "typedef")
                                                (reparse-symbol classsubparts) [1053 1076]))                                          )
                                        (reparse-symbol classsubparts) [1009 1079])
                                    ("call" function
                                       (:template 
                                          ( ("RET" type (:type "class") nil nil)
                                            ("CALL_TEMPLATE_ARGS" type nil nil nil))                                          
                                        :type ("RET" type (:type "class") nil nil)
                                        :arguments 
                                          ( ("" variable (:type ("CALL_FORMAL_ARGS" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1134 1151]))                                          )
                                        (reparse-symbol classsubparts) [1083 1189]))                                  )
                                (reparse-symbol namespacesubparts) [684 1192])
                            ("var" function
                               (:template 
                                  ( ("T" type (:type "class") nil nil))                                  
                                :type ("lambda_functor" type
                                     (:template-specifier 
                                        ( ("identity" type nil nil nil))                                        
                                      :type "class")
                                      nil nil)
                                :arguments 
                                  ( ("t" variable
                                       (:reference 1
                                        :type ("T" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [1255 1260]))                                  
                                :typemodifiers ("inline"))
                                (reparse-symbol namespacesubparts) [1194 1288])
                            ("var" function
                               (:template 
                                  ( ("T" type (:type "class") nil nil))                                  
                                :type ("lambda_functor" type
                                     (:template-specifier 
                                        ( ("T" type nil nil nil))                                        
                                      :type "class")
                                      nil nil)
                                :arguments 
                                  ( ("t" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("lambda_functor" type
                                             (:template-specifier 
                                                ( ("T" type nil nil nil))                                                
                                              :type "class")
                                              nil nil))
                                        (reparse-symbol arg-sub-list) [1518 1545]))                                  )
                                (reparse-symbol namespacesubparts) [1477 1559])
                            ("var_type" type
                               (:template 
                                  ( ("T" type (:type "class") nil nil))                                  
                                :type "struct"
                                :members 
                                  ( ("type" type
                                       (:typedef ("lambda_functor" type
                                             (:template-specifier 
                                                ( ("identity" type nil nil nil))                                                
                                              :type "class")
                                              nil nil)
                                        :superclasses "lambda_functor"
                                        :type "typedef")
                                        (reparse-symbol classsubparts) [1600 1643]))                                  )
                                (reparse-symbol namespacesubparts) [1561 1646])
                            ("constant" function
                               (:arguments 
                                  ( ("t" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("T" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [1763 1774]))                                  
                                :type "int")
                                (reparse-symbol namespacesubparts) [1754 1853])
                            ("constant" function
                               (:template 
                                  ( ("T" type (:type "class") nil nil))                                  
                                :type ("lambda_functor" type
                                     (:template-specifier 
                                        ( ("T" type nil nil nil))                                        
                                      :type "class")
                                      nil nil)
                                :arguments 
                                  ( ("t" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("lambda_functor" type
                                             (:template-specifier 
                                                ( ("T" type nil nil nil))                                                
                                              :type "class")
                                              nil nil))
                                        (reparse-symbol arg-sub-list) [1900 1927]))                                  )
                                (reparse-symbol namespacesubparts) [1854 1941])
                            ("constant_type" type
                               (:template 
                                  ( ("T" type (:type "class") nil nil))                                  
                                :type "struct"
                                :members 
                                  ( ("type" variable (:type "int") (reparse-symbol classsubparts) [2086 2091]))                                  )
                                (reparse-symbol namespacesubparts) [1943 2094])
                            ("constant_ref" function
                               (:template 
                                  ( ("T" type (:type "class") nil nil))                                  
                                :type ("lambda_functor" type
                                     (:template-specifier 
                                        ( ("identity" type nil nil nil))                                        
                                      :type "class")
                                      nil nil)
                                :arguments 
                                  ( ("t" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("T" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [2174 2185]))                                  
                                :typemodifiers ("inline"))
                                (reparse-symbol namespacesubparts) [2098 2223])
                            ("constant_ref" function
                               (:template 
                                  ( ("T" type (:type "class") nil nil))                                  
                                :type ("lambda_functor" type
                                     (:template-specifier 
                                        ( ("T" type nil nil nil))                                        
                                      :type "class")
                                      nil nil)
                                :arguments 
                                  ( ("t" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("lambda_functor" type
                                             (:template-specifier 
                                                ( ("T" type nil nil nil))                                                
                                              :type "class")
                                              nil nil))
                                        (reparse-symbol arg-sub-list) [2274 2301]))                                  )
                                (reparse-symbol namespacesubparts) [2224 2315])
                            ("constant_ref_type" type
                               (:template 
                                  ( ("T" type (:type "class") nil nil))                                  
                                :type "struct"
                                :members 
                                  ( ("type" type
                                       (:typedef ("lambda_functor" type
                                             (:template-specifier 
                                                ( ("identity" type nil nil nil))                                                
                                              :type "class")
                                              nil nil)
                                        :superclasses "lambda_functor"
                                        :type "typedef")
                                        (reparse-symbol classsubparts) [2365 2418]))                                  )
                                (reparse-symbol namespacesubparts) [2317 2421])
                            ("as_lambda_functor" type
                               (:template 
                                  ( ("T" type (:type "class") nil nil))                                  
                                :type "struct"
                                :members 
                                  ( ("plain_T" type
                                       (:typedef ("detail::remove_reference_and_cv::type" type (:type "class") nil nil)
                                        :superclasses "detail::remove_reference_and_cv::type"
                                        :type "typedef")
                                        (reparse-symbol classsubparts) [2587 2658])
                                    ("type" variable (:type ("RET" type (:type "class") nil nil)) (reparse-symbol classsubparts) [2845 2854]))                                  )
                                (reparse-symbol namespacesubparts) [2538 2858])
                            ("to_lambda_functor" function
                               (:arguments 
                                  ( ("t" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("T" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [3032 3043]))                                  
                                :type "int")
                                (reparse-symbol namespacesubparts) [3014 3121])
                            ("to_lambda_functor" function
                               (:template 
                                  ( ("T" type (:type "class") nil nil))                                  
                                :type ("lambda_functor" type
                                     (:template-specifier 
                                        ( ("T" type nil nil nil))                                        
                                      :type "class")
                                      nil nil)
                                :arguments 
                                  ( ("t" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("lambda_functor" type
                                             (:template-specifier 
                                                ( ("T" type nil nil nil))                                                
                                              :type "class")
                                              nil nil))
                                        (reparse-symbol arg-sub-list) [3187 3214]))                                  
                                :typemodifiers ("inline"))
                                (reparse-symbol namespacesubparts) [3123 3231])
                            ("detail" type
                               (:members 
                                  ( ("constify_rvals" type
                                       (:template 
                                          ( ("T" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :members 
                                          ( ("go" function
                                               (:template 
                                                  ( ("U" type (:type "class") nil nil))                                                  
                                                :type ("U" type (:type "class") nil nil)
                                                :arguments 
                                                  ( ("u" variable
                                                       (:reference 1
                                                        :constant-flag t
                                                        :type ("U" type (:type "class") nil nil))
                                                        (reparse-symbol arg-sub-list) [3621 3632]))                                                  
                                                :constant-flag t
                                                :typemodifiers ("static" "inline"))
                                                (reparse-symbol classsubparts) [3575 3646]))                                          )
                                        (reparse-symbol namespacesubparts) [3530 3649])
                                    ("constify_rvals" type
                                       (:template 
                                          ( ("T" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :members 
                                          ( ("go" function
                                               (:template 
                                                  ( ("U" type (:type "class") nil nil))                                                  
                                                :type ("U" type (:type "class") nil nil)
                                                :arguments 
                                                  ( ("u" variable
                                                       (:reference 1
                                                        :type ("U" type (:type "class") nil nil))
                                                        (reparse-symbol arg-sub-list) [3740 3745]))                                                  
                                                :typemodifiers ("static" "inline"))
                                                (reparse-symbol classsubparts) [3700 3759]))                                          
                                        :template-specifier 
                                          ( ("T" type (:reference 1) nil nil))                                          )
                                        (reparse-symbol namespacesubparts) [3651 3762])
                                    ("is_null_type" type
                                       (:template 
                                          ( ("T" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :members 
                                          ( ("BOOST_STATIC_CONSTANT" function
                                               (:prototype-flag t
                                                :arguments 
                                                  ( ("" variable (:type "bool") (reparse-symbol arg-sub-list) [4059 4064])
                                                    ("" variable (:type ("value" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4065 4072])
                                                    ("" variable (:type ("false" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4073 4079]))                                                  
                                                :type "int")
                                                (reparse-symbol classsubparts) [4037 4080]))                                          )
                                        (reparse-symbol namespacesubparts) [3995 4083])
                                    ("is_null_type" type
                                       (:type "struct"
                                        :members 
                                          ( ("BOOST_STATIC_CONSTANT" function
                                               (:prototype-flag t
                                                :arguments 
                                                  ( ("" variable (:type "bool") (reparse-symbol arg-sub-list) [4153 4158])
                                                    ("" variable (:type ("value" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4159 4166])
                                                    ("" variable (:type ("true" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4167 4172]))                                                  
                                                :type "int")
                                                (reparse-symbol classsubparts) [4131 4173]))                                          
                                        :template-specifier 
                                          ( ("null_type" type nil nil nil))                                          )
                                        (reparse-symbol namespacesubparts) [4085 4176])
                                    ("has_null_type" type
                                       (:template 
                                          ( ("Tuple" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :members 
                                          ( ("BOOST_STATIC_CONSTANT" function
                                               (:prototype-flag t
                                                :arguments 
                                                  ( ("" variable (:type "bool") (reparse-symbol arg-sub-list) [4247 4252])
                                                    ("" variable (:type ("value" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4253 4260]))                                                  
                                                :type "int")
                                                (reparse-symbol classsubparts) [4225 4362]))                                          )
                                        (reparse-symbol namespacesubparts) [4178 4365])
                                    ("has_null_type" type
                                       (:type "struct"
                                        :members 
                                          ( ("BOOST_STATIC_CONSTANT" function
                                               (:prototype-flag t
                                                :arguments 
                                                  ( ("" variable (:type "bool") (reparse-symbol arg-sub-list) [4435 4440])
                                                    ("" variable (:type ("value" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4441 4448])
                                                    ("" variable (:type ("false" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4449 4455]))                                                  
                                                :type "int")
                                                (reparse-symbol classsubparts) [4413 4456]))                                          
                                        :template-specifier 
                                          ( ("null_type" type nil nil nil))                                          )
                                        (reparse-symbol namespacesubparts) [4366 4459])
                                    ("deduce_argument_types_" type
                                       (:template 
                                          ( ("Args" type (:type "class") nil nil)
                                            ("SigArgs" type (:type "class") nil nil))                                          
                                        :type "class"
                                        :members 
                                          ( ("lf_t" variable (:type ("type" type (:type "class") nil nil)) (reparse-symbol classsubparts) [4626 4636])
                                            ("el_t" variable (:type ("type" type (:type "class") nil nil)) (reparse-symbol classsubparts) [4696 4706])
                                            ("public" label nil (reparse-symbol classsubparts) [4709 4716])
                                            ("type" variable (:type "int") (reparse-symbol classsubparts) [4850 4855]))                                          )
                                        (reparse-symbol namespacesubparts) [4495 4858])
                                    ("deduce_argument_types_" type
                                       (:template 
                                          ( ("SigArgs" type (:type "class") nil nil))                                          
                                        :type "class"
                                        :members 
                                          ( ("public" label nil (reparse-symbol classsubparts) [4935 4942])
                                            ("type" type
                                               (:typedef ("null_type" type (:type "class") nil nil)
                                                :superclasses "null_type"
                                                :type "typedef")
                                                (reparse-symbol classsubparts) [4945 4968]))                                          
                                        :template-specifier 
                                          ( ("null_type" type nil nil nil)
                                            ("SigArgs" type nil nil nil))                                          )
                                        (reparse-symbol namespacesubparts) [4860 4972])
                                    ("deduce_non_ref_argument_types_" type
                                       (:template 
                                          ( ("Args" type (:type "class") nil nil)
                                            ("SigArgs" type (:type "class") nil nil))                                          
                                        :type "class"
                                        :members 
                                          ( ("lf_t" variable (:type ("type" type (:type "class") nil nil)) (reparse-symbol classsubparts) [5492 5502])
                                            ("el_t" variable (:type ("type" type (:type "class") nil nil)) (reparse-symbol classsubparts) [5562 5572])
                                            ("public" label nil (reparse-symbol classsubparts) [5575 5582])
                                            ("type" variable (:type "int") (reparse-symbol classsubparts) [5844 5849]))                                          )
                                        (reparse-symbol namespacesubparts) [5353 5852])
                                    ("deduce_non_ref_argument_types_" type
                                       (:template 
                                          ( ("SigArgs" type (:type "class") nil nil))                                          
                                        :type "class"
                                        :members 
                                          ( ("public" label nil (reparse-symbol classsubparts) [5937 5944])
                                            ("type" type
                                               (:typedef ("null_type" type (:type "class") nil nil)
                                                :superclasses "null_type"
                                                :type "typedef")
                                                (reparse-symbol classsubparts) [5947 5970]))                                          
                                        :template-specifier 
                                          ( ("null_type" type nil nil nil)
                                            ("SigArgs" type nil nil nil))                                          )
                                        (reparse-symbol namespacesubparts) [5854 5974])
                                    ("deduce_argument_types" type
                                       (:template 
                                          ( ("Args" type (:type "class") nil nil)
                                            ("SigArgs" type (:type "class") nil nil))                                          
                                        :type "class"
                                        :members 
                                          ( ("t1" variable (:type ("type" type (:type "class") nil nil)) (reparse-symbol classsubparts) [6225 6233])
                                            ("public" label nil (reparse-symbol classsubparts) [6234 6241])
                                            ("type" variable (:type ("RET" type (:type "class") nil nil)) (reparse-symbol classsubparts) [6322 6331]))                                          )
                                        (reparse-symbol namespacesubparts) [6101 6335])
                                    ("deduce_non_ref_argument_types" type
                                       (:template 
                                          ( ("Args" type (:type "class") nil nil)
                                            ("SigArgs" type (:type "class") nil nil))                                          
                                        :type "class"
                                        :members 
                                          ( ("t1" variable (:type ("type" type (:type "class") nil nil)) (reparse-symbol classsubparts) [6612 6620])
                                            ("public" label nil (reparse-symbol classsubparts) [6621 6628])
                                            ("type" variable (:type ("RET" type (:type "class") nil nil)) (reparse-symbol classsubparts) [6709 6718]))                                          )
                                        (reparse-symbol namespacesubparts) [6472 6722])
                                    ("nth_return_type_sig" type
                                       (:template 
                                          ( ("int" type nil nil nil)
                                            ("Args" type (:type "class") nil nil)
                                            ("SigArgs" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :members 
                                          ( ("lf_type" variable (:type ("type" type (:type "class") nil nil)) (reparse-symbol classsubparts) [6985 6998])
                                            ("type" variable (:type ("type" type (:type "class") nil nil)) (reparse-symbol classsubparts) [7062 7072]))                                          )
                                        (reparse-symbol namespacesubparts) [6724 7077])
                                    ("element_or_null" type
                                       (:template 
                                          ( ("int" type nil nil nil)
                                            ("Tuple" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :members 
                                          ( ("type" type
                                               (:typedef ("boost::tuples::element::type" type (:type "class") nil nil)
                                                :superclasses "boost::tuples::element::type"
                                                :type "typedef")
                                                (reparse-symbol classsubparts) [7135 7196]))                                          )
                                        (reparse-symbol namespacesubparts) [7079 7199])
                                    ("element_or_null" type
                                       (:template 
                                          ( ("int" type nil nil nil))                                          
                                        :type "struct"
                                        :members 
                                          ( ("type" type
                                               (:typedef ("null_type" type (:type "class") nil nil)
                                                :superclasses "null_type"
                                                :type "typedef")
                                                (reparse-symbol classsubparts) [7258 7281]))                                          
                                        :template-specifier 
                                          ( ("N" type nil nil nil)
                                            ("null_type" type nil nil nil))                                          )
                                        (reparse-symbol namespacesubparts) [7201 7284]))                                  
                                :type "namespace")
                                (reparse-symbol namespacesubparts) [3233 7296])
                            ("lambda_functor_base" type
                               (:template 
                                  ( ("RET" type (:type "class") nil nil)
                                    ("Args" type (:type "class") nil nil))                                  
                                :type "class"
                                :members 
                                  ( ("public" label nil (reparse-symbol classsubparts) [7542 7549])
                                    ("args" variable (:type ("Args" type (:type "class") nil nil)) (reparse-symbol classsubparts) [7552 7562])
                                    ("lambda_functor_base" function
                                       (:constructor-flag t
                                        :arguments 
                                          ( ("a" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("Args" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [7595 7609]))                                          
                                        :type ("explicit" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [7566 7622])
                                    ("sig" type
                                       (:template 
                                          ( ("SigArgs" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :members 
                                          ( ("type" type
                                               (:typedef ("RET" type (:type "class") nil nil)
                                                :superclasses "RET"
                                                :type "typedef")
                                                (reparse-symbol classsubparts) [7664 7681]))                                          )
                                        (reparse-symbol classsubparts) [7626 7684])
                                    ("call" function
                                       (:template 
                                          ( ("RET_" type (:type "class") nil nil)
                                            ("CALL_TEMPLATE_ARGS" type nil nil nil))                                          
                                        :type ("RET" type (:type "class") nil nil)
                                        :arguments 
                                          ( ("" variable (:type ("CALL_FORMAL_ARGS" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7740 7757]))                                          )
                                        (reparse-symbol classsubparts) [7688 7896]))                                  
                                :template-specifier 
                                  ( ("explicit_return_type_action" type nil nil nil)
                                    ("Args" type nil nil nil))                                  )
                                (reparse-symbol namespacesubparts) [7441 7899])
                            ("lambda_functor_base" type
                               (:template 
                                  ( ("Args" type (:type "class") nil nil))                                  
                                :type "class"
                                :members 
                                  ( ("public" label nil (reparse-symbol classsubparts) [8035 8042])
                                    ("args" variable (:type ("Args" type (:type "class") nil nil)) (reparse-symbol classsubparts) [8045 8055])
                                    ("public" label nil (reparse-symbol classsubparts) [8056 8063])
                                    ("lambda_functor_base" function
                                       (:constructor-flag t
                                        :arguments 
                                          ( ("a" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("Args" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [8096 8110]))                                          
                                        :type ("explicit" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [8067 8123])
                                    ("call" function
                                       (:template 
                                          ( ("RET" type (:type "class") nil nil)
                                            ("CALL_TEMPLATE_ARGS" type nil nil nil))                                          
                                        :type ("RET" type (:type "class") nil nil)
                                        :arguments 
                                          ( ("" variable (:type ("CALL_FORMAL_ARGS" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [8179 8196]))                                          )
                                        (reparse-symbol classsubparts) [8128 8272])
                                    ("sig" type
                                       (:template 
                                          ( ("SigArgs" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :members 
                                          ( ("type" type
                                               (:typedef ("boost::tuples::element::type" type (:type "class") nil nil)
                                                :superclasses "boost::tuples::element::type"
                                                :type "typedef")
                                                (reparse-symbol classsubparts) [8404 8464]))                                          )
                                        (reparse-symbol classsubparts) [8276 8469]))                                  
                                :template-specifier 
                                  ( ("protect_action" type nil nil nil)
                                    ("Args" type nil nil nil))                                  )
                                (reparse-symbol namespacesubparts) [7964 8472])
                            ("do_nothing_action" type (:type "class") (reparse-symbol namespacesubparts) [8545 8572])
                            ("lambda_functor_base" type
                               (:template 
                                  ( ("Args" type (:type "class") nil nil))                                  
                                :type "class"
                                :members 
                                  ( ("public" label nil (reparse-symbol classsubparts) [8665 8672])
                                    ("lambda_functor_base" function
                                       (:constructor-flag t
                                        :type ("lambda_functor_base" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [8728 8752])
                                    ("call" function
                                       (:template 
                                          ( ("RET" type (:type "class") nil nil)
                                            ("CALL_TEMPLATE_ARGS" type nil nil nil))                                          
                                        :type ("RET" type (:type "class") nil nil)
                                        :arguments 
                                          ( ("" variable (:type ("CALL_FORMAL_ARGS" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [8806 8823]))                                          )
                                        (reparse-symbol classsubparts) [8757 8861])
                                    ("sig" type
                                       (:template 
                                          ( ("SigArgs" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :members 
                                          ( ("type" type
                                               (:typedef ("void")
                                                :superclasses "void"
                                                :type "typedef")
                                                (reparse-symbol classsubparts) [8902 8920]))                                          )
                                        (reparse-symbol classsubparts) [8865 8923]))                                  
                                :template-specifier 
                                  ( ("do_nothing_action" type nil nil nil)
                                    ("Args" type nil nil nil))                                  )
                                (reparse-symbol namespacesubparts) [8574 8926])
                            ("lambda_functor_base" type
                               (:template 
                                  ( ("Act" type (:type "class") nil nil)
                                    ("Args" type (:type "class") nil nil))                                  
                                :type "class"
                                :members 
                                  ( ("public" label nil (reparse-symbol classsubparts) [9679 9686])
                                    ("lambda_functor_base" function
                                       (:constructor-flag t
                                        :arguments 
                                          ( ("a" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("Args" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [9746 9760]))                                          
                                        :type ("explicit" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [9717 9763])
                                    ("sig" type
                                       (:template 
                                          ( ("SigArgs" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :members 
                                          ( ("type" variable (:type ("type" type (:type "class") nil nil)) (reparse-symbol classsubparts) [9862 9872]))                                          )
                                        (reparse-symbol classsubparts) [9771 9877])
                                    ("call" function
                                       (:template 
                                          ( ("RET" type (:type "class") nil nil)
                                            ("CALL_TEMPLATE_ARGS" type nil nil nil))                                          
                                        :type ("RET" type (:type "class") nil nil)
                                        :arguments 
                                          ( ("" variable (:type ("CALL_FORMAL_ARGS" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [9936 9953]))                                          )
                                        (reparse-symbol classsubparts) [9883 10025]))                                  
                                :template-specifier 
                                  ( ("action" type nil nil nil)
                                    ("Args" type nil nil nil))                                  )
                                (reparse-symbol namespacesubparts) [9582 10028])
                            ("BOOST_LAMBDA_LAMBDA_FUNCTOR_BASE_FIRST_PART" variable (:constant-flag t) (reparse-symbol namespacesubparts) [10187 10230])
                            ("rets_t" variable (:type ("type" type (:type "class") nil nil)) (reparse-symbol namespacesubparts) [12135 12147])
                            ("rt0" variable (:type ("type" type (:type "class") nil nil)) (reparse-symbol namespacesubparts) [12195 12204])
                            ("apply" function
                               (:template-specifier 
                                  ( ("RET" type nil nil nil))                                  
                                :prototype-flag t
                                :arguments 
                                  ( ("" variable (:type ("constify_rvals" type
                                         (:template-specifier 
                                            ( ("rt0" type nil nil nil))                                            
                                          :type "class")
                                          nil nil)) (reparse-symbol arg-sub-list) [12245 12265])
                                    ("" variable (:type ("go" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [12266 12319]))                                  
                                :type "int")
                                (reparse-symbol namespacesubparts) [12229 12326])
                            ("rets_t" variable (:type ("type" type (:type "class") nil nil)) (reparse-symbol namespacesubparts) [12469 12481])
                            ("rt0" variable (:type ("type" type (:type "class") nil nil)) (reparse-symbol namespacesubparts) [12529 12538])
                            ("rt1" variable (:type ("type" type (:type "class") nil nil)) (reparse-symbol namespacesubparts) [12586 12595]))                          
                        :type "namespace")
                        (reparse-symbol namespacesubparts) [530 12801]))                  
                :type "namespace")
                nil [511 12803])
            ("rets_t" variable (:type ("type" type (:type "class") nil nil)) nil [12937 12949])
            ("rt0" variable (:type ("type" type (:type "class") nil nil)) nil [12998 13007])
            ("rt1" variable (:type ("type" type (:type "class") nil nil)) nil [13055 13064])
            ("rt2" variable (:type ("type" type (:type "class") nil nil)) nil [13112 13121])
            ("apply" function
               (:template-specifier 
                  ( ("RET" type nil nil nil))                  
                :prototype-flag t
                :arguments 
                  ( ("" variable (:type ("constify_rvals" type
                         (:template-specifier 
                            ( ("rt0" type nil nil nil))                            
                          :type "class")
                          nil nil)) (reparse-symbol arg-sub-list) [13162 13182])
                    ("" variable (:type ("go" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [13183 13236])
                    ("" variable (:type ("constify_rvals" type
                         (:template-specifier 
                            ( ("rt1" type nil nil nil))                            
                          :type "class")
                          nil nil)) (reparse-symbol arg-sub-list) [13242 13262])
                    ("" variable (:type ("go" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [13263 13316])
                    ("" variable (:type ("constify_rvals" type
                         (:template-specifier 
                            ( ("rt2" type nil nil nil))                            
                          :type "class")
                          nil nil)) (reparse-symbol arg-sub-list) [13322 13342])
                    ("" variable (:type ("go" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [13343 13396]))                  
                :type "int")
                nil [13146 13403])
            ("rets_t" variable (:type ("type" type (:type "class") nil nil)) nil [13542 13554])
            ("rt0" variable (:type ("type" type (:type "class") nil nil)) nil [13602 13611])
            ("rt1" variable (:type ("type" type (:type "class") nil nil)) nil [13659 13668])
            ("rt2" variable (:type ("type" type (:type "class") nil nil)) nil [13716 13725])
            ("rt3" variable (:type ("type" type (:type "class") nil nil)) nil [13773 13782])
            ("rets_t" variable (:type ("type" type (:type "class") nil nil)) nil [14283 14295])
            ("rt0" variable (:type ("type" type (:type "class") nil nil)) nil [14343 14352])
            ("rt1" variable (:type ("type" type (:type "class") nil nil)) nil [14400 14409])
            ("rt2" variable (:type ("type" type (:type "class") nil nil)) nil [14457 14466])
            ("rt3" variable (:type ("type" type (:type "class") nil nil)) nil [14514 14523])
            ("rt4" variable (:type ("type" type (:type "class") nil nil)) nil [14571 14580])
            ("rets_t" variable (:type ("type" type (:type "class") nil nil)) nil [15162 15174])
            ("rt0" variable (:type ("type" type (:type "class") nil nil)) nil [15222 15231])
            ("rt1" variable (:type ("type" type (:type "class") nil nil)) nil [15279 15288])
            ("rt2" variable (:type ("type" type (:type "class") nil nil)) nil [15336 15345])
            ("rt3" variable (:type ("type" type (:type "class") nil nil)) nil [15393 15402])
            ("rt4" variable (:type ("type" type (:type "class") nil nil)) nil [15450 15459])
            ("rt5" variable (:type ("type" type (:type "class") nil nil)) nil [15507 15516])
            ("rets_t" variable (:type ("type" type (:type "class") nil nil)) nil [16181 16193])
            ("rt0" variable (:type ("type" type (:type "class") nil nil)) nil [16241 16250])
            ("rt1" variable (:type ("type" type (:type "class") nil nil)) nil [16298 16307])
            ("rt2" variable (:type ("type" type (:type "class") nil nil)) nil [16355 16364])
            ("rt3" variable (:type ("type" type (:type "class") nil nil)) nil [16412 16421])
            ("rt4" variable (:type ("type" type (:type "class") nil nil)) nil [16469 16478])
            ("rt5" variable (:type ("type" type (:type "class") nil nil)) nil [16526 16535])
            ("rt6" variable (:type ("type" type (:type "class") nil nil)) nil [16583 16592])
            ("rets_t" variable (:type ("type" type (:type "class") nil nil)) nil [17334 17346])
            ("rt0" variable (:type ("type" type (:type "class") nil nil)) nil [17394 17403])
            ("rt1" variable (:type ("type" type (:type "class") nil nil)) nil [17451 17460])
            ("rt2" variable (:type ("type" type (:type "class") nil nil)) nil [17508 17517])
            ("rt3" variable (:type ("type" type (:type "class") nil nil)) nil [17565 17574])
            ("rt4" variable (:type ("type" type (:type "class") nil nil)) nil [17622 17631])
            ("rt5" variable (:type ("type" type (:type "class") nil nil)) nil [17679 17688])
            ("rt6" variable (:type ("type" type (:type "class") nil nil)) nil [17736 17745])
            ("rt7" variable (:type ("type" type (:type "class") nil nil)) nil [17793 17802])
            ("rets_t" variable (:type ("type" type (:type "class") nil nil)) nil [18623 18635])
            ("rt0" variable (:type ("type" type (:type "class") nil nil)) nil [18683 18692])
            ("rt1" variable (:type ("type" type (:type "class") nil nil)) nil [18740 18749])
            ("rt2" variable (:type ("type" type (:type "class") nil nil)) nil [18797 18806])
            ("rt3" variable (:type ("type" type (:type "class") nil nil)) nil [18854 18863])
            ("rt4" variable (:type ("type" type (:type "class") nil nil)) nil [18911 18920])
            ("rt5" variable (:type ("type" type (:type "class") nil nil)) nil [18968 18977])
            ("rt6" variable (:type ("type" type (:type "class") nil nil)) nil [19025 19034])
            ("rt7" variable (:type ("type" type (:type "class") nil nil)) nil [19082 19091])
            ("rt8" variable (:type ("type" type (:type "class") nil nil)) nil [19139 19148])
            ("rets_t" variable (:type ("type" type (:type "class") nil nil)) nil [20051 20063])
            ("rt0" variable (:type ("type" type (:type "class") nil nil)) nil [20111 20120])
            ("rt1" variable (:type ("type" type (:type "class") nil nil)) nil [20168 20177])
            ("rt2" variable (:type ("type" type (:type "class") nil nil)) nil [20225 20234])
            ("rt3" variable (:type ("type" type (:type "class") nil nil)) nil [20282 20291])
            ("rt4" variable (:type ("type" type (:type "class") nil nil)) nil [20339 20348])
            ("rt5" variable (:type ("type" type (:type "class") nil nil)) nil [20396 20405])
            ("rt6" variable (:type ("type" type (:type "class") nil nil)) nil [20453 20462])
            ("rt7" variable (:type ("type" type (:type "class") nil nil)) nil [20510 20519])
            ("rt8" variable (:type ("type" type (:type "class") nil nil)) nil [20567 20576])
            ("rt9" variable (:type ("type" type (:type "class") nil nil)) nil [20624 20633]))          
    :file "lambda_functor_base.hpp"
    :pointmax 21589
    :fsize 21588
    :lastmodtime '(17765 48449)
    :unmatched-syntax '((close-paren 21560 . 21561) (close-paren 21538 . 21539) (punctuation 21482 . 21483) (close-paren 21481 . 21482) (close-paren 21479 . 21480) (punctuation 21475 . 21476) (close-paren 21474 . 21475) (close-paren 21467 . 21468) (close-paren 21466 . 21467) (symbol 21450 . 21466) (punctuation 21448 . 21449) (close-paren 21447 . 21448) (symbol 21443 . 21447) (open-paren 21442 . 21443) (punctuation 21441 . 21442) (number 21440 . 21441) (punctuation 21439 . 21440) (symbol 21436 . 21439) (open-paren 21435 . 21436) (symbol 21433 . 21435) (punctuation 21432 . 21433) (punctuation 21431 . 21432) (punctuation 21430 . 21431) (symbol 21427 . 21430) (punctuation 21426 . 21427) (symbol 21418 . 21426) (open-paren 21417 . 21418) (symbol 21415 . 21417) (punctuation 21414 . 21415) (punctuation 21413 . 21414) (punctuation 21412 . 21413) (symbol 21409 . 21412) (punctuation 21408 . 21409) (symbol 21394 . 21408) (punctuation 21388 . 21389) (close-paren 21387 . 21388) (close-paren 21386 . 21387) (symbol 21370 . 21386) (punctuation 21368 . 21369) (close-paren 21367 . 21368) (symbol 21363 . 21367) (open-paren 21362 . 21363) (punctuation 21361 . 21362) (number 21360 . 21361) (punctuation 21359 . 21360) (symbol 21356 . 21359) (open-paren 21355 . 21356) (symbol 21353 . 21355) (punctuation 21352 . 21353) (punctuation 21351 . 21352) (punctuation 21350 . 21351) (symbol 21347 . 21350) (punctuation 21346 . 21347) (symbol 21338 . 21346) (open-paren 21337 . 21338) (symbol 21335 . 21337) (punctuation 21334 . 21335) (punctuation 21333 . 21334) (punctuation 21332 . 21333) (symbol 21329 . 21332) (punctuation 21328 . 21329) (symbol 21314 . 21328) (punctuation 21308 . 21309) (close-paren 21307 . 21308) (close-paren 21306 . 21307) (symbol 21290 . 21306) (punctuation 21288 . 21289) (close-paren 21287 . 21288) (symbol 21283 . 21287) (open-paren 21282 . 21283) (punctuation 21281 . 21282) (number 21280 . 21281) (punctuation 21279 . 21280) (symbol 21276 . 21279) (open-paren 21275 . 21276) (symbol 21273 . 21275) (punctuation 21272 . 21273) (punctuation 21271 . 21272) (punctuation 21270 . 21271) (symbol 21267 . 21270) (punctuation 21266 . 21267) (symbol 21258 . 21266) (open-paren 21257 . 21258) (symbol 21255 . 21257) (punctuation 21254 . 21255) (punctuation 21253 . 21254) (punctuation 21252 . 21253) (symbol 21249 . 21252) (punctuation 21248 . 21249) (symbol 21234 . 21248) (punctuation 21228 . 21229) (close-paren 21227 . 21228) (close-paren 21226 . 21227) (symbol 21210 . 21226) (punctuation 21208 . 21209) (close-paren 21207 . 21208) (symbol 21203 . 21207) (open-paren 21202 . 21203) (punctuation 21201 . 21202) (number 21200 . 21201) (punctuation 21199 . 21200) (symbol 21196 . 21199) (open-paren 21195 . 21196) (symbol 21193 . 21195) (punctuation 21192 . 21193) (punctuation 21191 . 21192) (punctuation 21190 . 21191) (symbol 21187 . 21190) (punctuation 21186 . 21187) (symbol 21178 . 21186) (open-paren 21177 . 21178) (symbol 21175 . 21177) (punctuation 21174 . 21175) (punctuation 21173 . 21174) (punctuation 21172 . 21173) (symbol 21169 . 21172) (punctuation 21168 . 21169) (symbol 21154 . 21168) (punctuation 21148 . 21149) (close-paren 21147 . 21148) (close-paren 21146 . 21147) (symbol 21130 . 21146) (punctuation 21128 . 21129) (close-paren 21127 . 21128) (symbol 21123 . 21127) (open-paren 21122 . 21123) (punctuation 21121 . 21122) (number 21120 . 21121) (punctuation 21119 . 21120) (symbol 21116 . 21119) (open-paren 21115 . 21116) (symbol 21113 . 21115) (punctuation 21112 . 21113) (punctuation 21111 . 21112) (punctuation 21110 . 21111) (symbol 21107 . 21110) (punctuation 21106 . 21107) (symbol 21098 . 21106) (open-paren 21097 . 21098) (symbol 21095 . 21097) (punctuation 21094 . 21095) (punctuation 21093 . 21094) (punctuation 21092 . 21093) (symbol 21089 . 21092) (punctuation 21088 . 21089) (symbol 21074 . 21088) (punctuation 21068 . 21069) (close-paren 21067 . 21068) (close-paren 21066 . 21067) (symbol 21050 . 21066) (punctuation 21048 . 21049) (close-paren 21047 . 21048) (symbol 21043 . 21047) (open-paren 21042 . 21043) (punctuation 21041 . 21042) (number 21040 . 21041) (punctuation 21039 . 21040) (symbol 21036 . 21039) (open-paren 21035 . 21036) (symbol 21033 . 21035) (punctuation 21032 . 21033) (punctuation 21031 . 21032) (punctuation 21030 . 21031) (symbol 21027 . 21030) (punctuation 21026 . 21027) (symbol 21018 . 21026) (open-paren 21017 . 21018) (symbol 21015 . 21017) (punctuation 21014 . 21015) (punctuation 21013 . 21014) (punctuation 21012 . 21013) (symbol 21009 . 21012) (punctuation 21008 . 21009) (symbol 20994 . 21008) (punctuation 20988 . 20989) (close-paren 20987 . 20988) (close-paren 20986 . 20987) (symbol 20970 . 20986) (punctuation 20968 . 20969) (close-paren 20967 . 20968) (symbol 20963 . 20967) (open-paren 20962 . 20963) (punctuation 20961 . 20962) (number 20960 . 20961) (punctuation 20959 . 20960) (symbol 20956 . 20959) (open-paren 20955 . 20956) (symbol 20953 . 20955) (punctuation 20952 . 20953) (punctuation 20951 . 20952) (punctuation 20950 . 20951) (symbol 20947 . 20950) (punctuation 20946 . 20947) (symbol 20938 . 20946) (open-paren 20937 . 20938) (symbol 20935 . 20937) (punctuation 20934 . 20935) (punctuation 20933 . 20934) (punctuation 20932 . 20933) (symbol 20929 . 20932) (punctuation 20928 . 20929) (symbol 20914 . 20928) (punctuation 20908 . 20909) (close-paren 20907 . 20908) (close-paren 20906 . 20907) (symbol 20890 . 20906) (punctuation 20888 . 20889) (close-paren 20887 . 20888) (symbol 20883 . 20887) (open-paren 20882 . 20883) (punctuation 20881 . 20882) (number 20880 . 20881) (punctuation 20879 . 20880) (symbol 20876 . 20879) (open-paren 20875 . 20876) (symbol 20873 . 20875) (punctuation 20872 . 20873) (punctuation 20871 . 20872) (punctuation 20870 . 20871) (symbol 20867 . 20870) (punctuation 20866 . 20867) (symbol 20858 . 20866) (open-paren 20857 . 20858) (symbol 20855 . 20857) (punctuation 20854 . 20855) (punctuation 20853 . 20854) (punctuation 20852 . 20853) (symbol 20849 . 20852) (punctuation 20848 . 20849) (symbol 20834 . 20848) (punctuation 20828 . 20829) (close-paren 20827 . 20828) (close-paren 20826 . 20827) (symbol 20810 . 20826) (punctuation 20808 . 20809) (close-paren 20807 . 20808) (symbol 20803 . 20807) (open-paren 20802 . 20803) (punctuation 20801 . 20802) (number 20800 . 20801) (punctuation 20799 . 20800) (symbol 20796 . 20799) (open-paren 20795 . 20796) (symbol 20793 . 20795) (punctuation 20792 . 20793) (punctuation 20791 . 20792) (punctuation 20790 . 20791) (symbol 20787 . 20790) (punctuation 20786 . 20787) (symbol 20778 . 20786) (open-paren 20777 . 20778) (symbol 20775 . 20777) (punctuation 20774 . 20775) (punctuation 20773 . 20774) (punctuation 20772 . 20773) (symbol 20769 . 20772) (punctuation 20768 . 20769) (symbol 20754 . 20768) (punctuation 20748 . 20749) (close-paren 20747 . 20748) (close-paren 20746 . 20747) (symbol 20730 . 20746) (punctuation 20728 . 20729) (close-paren 20727 . 20728) (symbol 20723 . 20727) (open-paren 20722 . 20723) (punctuation 20721 . 20722) (number 20720 . 20721) (punctuation 20719 . 20720) (symbol 20716 . 20719) (open-paren 20715 . 20716) (symbol 20713 . 20715) (punctuation 20712 . 20713) (punctuation 20711 . 20712) (punctuation 20710 . 20711) (symbol 20707 . 20710) (punctuation 20706 . 20707) (symbol 20698 . 20706) (open-paren 20697 . 20698) (symbol 20695 . 20697) (punctuation 20694 . 20695) (punctuation 20693 . 20694) (punctuation 20692 . 20693) (symbol 20689 . 20692) (punctuation 20688 . 20689) (symbol 20674 . 20688) (open-paren 20668 . 20669) (punctuation 20667 . 20668) (symbol 20664 . 20667) (punctuation 20663 . 20664) (symbol 20658 . 20663) (TEMPLATE 20649 . 20657) (punctuation 20648 . 20649) (punctuation 20647 . 20648) (symbol 20644 . 20647) (RETURN 20637 . 20643) (punctuation 20623 . 20624) (punctuation 20622 . 20623) (punctuation 20621 . 20622) (symbol 20615 . 20621) (punctuation 20613 . 20614) (number 20612 . 20613) (punctuation 20611 . 20612) (symbol 20596 . 20611) (TYPENAME 20587 . 20595) (TYPEDEF 20579 . 20586) (punctuation 20566 . 20567) (punctuation 20565 . 20566) (punctuation 20564 . 20565) (symbol 20558 . 20564) (punctuation 20556 . 20557) (number 20555 . 20556) (punctuation 20554 . 20555) (symbol 20539 . 20554) (TYPENAME 20530 . 20538) (TYPEDEF 20522 . 20529) (punctuation 20509 . 20510) (punctuation 20508 . 20509) (punctuation 20507 . 20508) (symbol 20501 . 20507) (punctuation 20499 . 20500) (number 20498 . 20499) (punctuation 20497 . 20498) (symbol 20482 . 20497) (TYPENAME 20473 . 20481) (TYPEDEF 20465 . 20472) (punctuation 20452 . 20453) (punctuation 20451 . 20452) (punctuation 20450 . 20451) (symbol 20444 . 20450) (punctuation 20442 . 20443) (number 20441 . 20442) (punctuation 20440 . 20441) (symbol 20425 . 20440) (TYPENAME 20416 . 20424) (TYPEDEF 20408 . 20415) (punctuation 20395 . 20396) (punctuation 20394 . 20395) (punctuation 20393 . 20394) (symbol 20387 . 20393) (punctuation 20385 . 20386) (number 20384 . 20385) (punctuation 20383 . 20384) (symbol 20368 . 20383) (TYPENAME 20359 . 20367) (TYPEDEF 20351 . 20358) (punctuation 20338 . 20339) (punctuation 20337 . 20338) (punctuation 20336 . 20337) (symbol 20330 . 20336) (punctuation 20328 . 20329) (number 20327 . 20328) (punctuation 20326 . 20327) (symbol 20311 . 20326) (TYPENAME 20302 . 20310) (TYPEDEF 20294 . 20301) (punctuation 20281 . 20282) (punctuation 20280 . 20281) (punctuation 20279 . 20280) (symbol 20273 . 20279) (punctuation 20271 . 20272) (number 20270 . 20271) (punctuation 20269 . 20270) (symbol 20254 . 20269) (TYPENAME 20245 . 20253) (TYPEDEF 20237 . 20244) (punctuation 20224 . 20225) (punctuation 20223 . 20224) (punctuation 20222 . 20223) (symbol 20216 . 20222) (punctuation 20214 . 20215) (number 20213 . 20214) (punctuation 20212 . 20213) (symbol 20197 . 20212) (TYPENAME 20188 . 20196) (TYPEDEF 20180 . 20187) (punctuation 20167 . 20168) (punctuation 20166 . 20167) (punctuation 20165 . 20166) (symbol 20159 . 20165) (punctuation 20157 . 20158) (number 20156 . 20157) (punctuation 20155 . 20156) (symbol 20140 . 20155) (TYPENAME 20131 . 20139) (TYPEDEF 20123 . 20130) (punctuation 20110 . 20111) (punctuation 20109 . 20110) (punctuation 20108 . 20109) (symbol 20102 . 20108) (punctuation 20100 . 20101) (number 20099 . 20100) (punctuation 20098 . 20099) (symbol 20083 . 20098) (TYPENAME 20074 . 20082) (TYPEDEF 20066 . 20073) (punctuation 20050 . 20051) (punctuation 20049 . 20050) (punctuation 20048 . 20049) (punctuation 20046 . 20047) (symbol 20026 . 20046) (punctuation 20025 . 20026) (symbol 20020 . 20025) (punctuation 20018 . 20019) (symbol 20014 . 20018) (punctuation 20013 . 20014) (symbol 19992 . 20013) (TYPENAME 19978 . 19986) (TYPEDEF 19970 . 19977) (close-paren 19965 . 19966) (number 19963 . 19965) (open-paren 19962 . 19963) (symbol 19919 . 19962) (punctuation 19916 . 19917) (close-paren 19915 . 19916) (close-paren 19913 . 19914) (punctuation 19909 . 19910) (close-paren 19908 . 19909) (close-paren 19902 . 19903) (close-paren 19901 . 19902) (symbol 19885 . 19901) (punctuation 19883 . 19884) (close-paren 19882 . 19883) (symbol 19878 . 19882) (open-paren 19877 . 19878) (punctuation 19876 . 19877) (number 19875 . 19876) (punctuation 19874 . 19875) (symbol 19871 . 19874) (open-paren 19870 . 19871) (symbol 19868 . 19870) (punctuation 19867 . 19868) (punctuation 19866 . 19867) (punctuation 19865 . 19866) (symbol 19862 . 19865) (punctuation 19861 . 19862) (symbol 19853 . 19861) (open-paren 19852 . 19853) (symbol 19850 . 19852) (punctuation 19849 . 19850) (punctuation 19848 . 19849) (punctuation 19847 . 19848) (symbol 19844 . 19847) (punctuation 19843 . 19844) (symbol 19829 . 19843) (punctuation 19823 . 19824) (close-paren 19822 . 19823) (close-paren 19821 . 19822) (symbol 19805 . 19821) (punctuation 19803 . 19804) (close-paren 19802 . 19803) (symbol 19798 . 19802) (open-paren 19797 . 19798) (punctuation 19796 . 19797) (number 19795 . 19796) (punctuation 19794 . 19795) (symbol 19791 . 19794) (open-paren 19790 . 19791) (symbol 19788 . 19790) (punctuation 19787 . 19788) (punctuation 19786 . 19787) (punctuation 19785 . 19786) (symbol 19782 . 19785) (punctuation 19781 . 19782) (symbol 19773 . 19781) (open-paren 19772 . 19773) (symbol 19770 . 19772) (punctuation 19769 . 19770) (punctuation 19768 . 19769) (punctuation 19767 . 19768) (symbol 19764 . 19767) (punctuation 19763 . 19764) (symbol 19749 . 19763) (punctuation 19743 . 19744) (close-paren 19742 . 19743) (close-paren 19741 . 19742) (symbol 19725 . 19741) (punctuation 19723 . 19724) (close-paren 19722 . 19723) (symbol 19718 . 19722) (open-paren 19717 . 19718) (punctuation 19716 . 19717) (number 19715 . 19716) (punctuation 19714 . 19715) (symbol 19711 . 19714) (open-paren 19710 . 19711) (symbol 19708 . 19710) (punctuation 19707 . 19708) (punctuation 19706 . 19707) (punctuation 19705 . 19706) (symbol 19702 . 19705) (punctuation 19701 . 19702) (symbol 19693 . 19701) (open-paren 19692 . 19693) (symbol 19690 . 19692) (punctuation 19689 . 19690) (punctuation 19688 . 19689) (punctuation 19687 . 19688) (symbol 19684 . 19687) (punctuation 19683 . 19684) (symbol 19669 . 19683) (punctuation 19663 . 19664) (close-paren 19662 . 19663) (close-paren 19661 . 19662) (symbol 19645 . 19661) (punctuation 19643 . 19644) (close-paren 19642 . 19643) (symbol 19638 . 19642) (open-paren 19637 . 19638) (punctuation 19636 . 19637) (number 19635 . 19636) (punctuation 19634 . 19635) (symbol 19631 . 19634) (open-paren 19630 . 19631) (symbol 19628 . 19630) (punctuation 19627 . 19628) (punctuation 19626 . 19627) (punctuation 19625 . 19626) (symbol 19622 . 19625) (punctuation 19621 . 19622) (symbol 19613 . 19621) (open-paren 19612 . 19613) (symbol 19610 . 19612) (punctuation 19609 . 19610) (punctuation 19608 . 19609) (punctuation 19607 . 19608) (symbol 19604 . 19607) (punctuation 19603 . 19604) (symbol 19589 . 19603) (punctuation 19583 . 19584) (close-paren 19582 . 19583) (close-paren 19581 . 19582) (symbol 19565 . 19581) (punctuation 19563 . 19564) (close-paren 19562 . 19563) (symbol 19558 . 19562) (open-paren 19557 . 19558) (punctuation 19556 . 19557) (number 19555 . 19556) (punctuation 19554 . 19555) (symbol 19551 . 19554) (open-paren 19550 . 19551) (symbol 19548 . 19550) (punctuation 19547 . 19548) (punctuation 19546 . 19547) (punctuation 19545 . 19546) (symbol 19542 . 19545) (punctuation 19541 . 19542) (symbol 19533 . 19541) (open-paren 19532 . 19533) (symbol 19530 . 19532) (punctuation 19529 . 19530) (punctuation 19528 . 19529) (punctuation 19527 . 19528) (symbol 19524 . 19527) (punctuation 19523 . 19524) (symbol 19509 . 19523) (punctuation 19503 . 19504) (close-paren 19502 . 19503) (close-paren 19501 . 19502) (symbol 19485 . 19501) (punctuation 19483 . 19484) (close-paren 19482 . 19483) (symbol 19478 . 19482) (open-paren 19477 . 19478) (punctuation 19476 . 19477) (number 19475 . 19476) (punctuation 19474 . 19475) (symbol 19471 . 19474) (open-paren 19470 . 19471) (symbol 19468 . 19470) (punctuation 19467 . 19468) (punctuation 19466 . 19467) (punctuation 19465 . 19466) (symbol 19462 . 19465) (punctuation 19461 . 19462) (symbol 19453 . 19461) (open-paren 19452 . 19453) (symbol 19450 . 19452) (punctuation 19449 . 19450) (punctuation 19448 . 19449) (punctuation 19447 . 19448) (symbol 19444 . 19447) (punctuation 19443 . 19444) (symbol 19429 . 19443) (punctuation 19423 . 19424) (close-paren 19422 . 19423) (close-paren 19421 . 19422) (symbol 19405 . 19421) (punctuation 19403 . 19404) (close-paren 19402 . 19403) (symbol 19398 . 19402) (open-paren 19397 . 19398) (punctuation 19396 . 19397) (number 19395 . 19396) (punctuation 19394 . 19395) (symbol 19391 . 19394) (open-paren 19390 . 19391) (symbol 19388 . 19390) (punctuation 19387 . 19388) (punctuation 19386 . 19387) (punctuation 19385 . 19386) (symbol 19382 . 19385) (punctuation 19381 . 19382) (symbol 19373 . 19381) (open-paren 19372 . 19373) (symbol 19370 . 19372) (punctuation 19369 . 19370) (punctuation 19368 . 19369) (punctuation 19367 . 19368) (symbol 19364 . 19367) (punctuation 19363 . 19364) (symbol 19349 . 19363) (punctuation 19343 . 19344) (close-paren 19342 . 19343) (close-paren 19341 . 19342) (symbol 19325 . 19341) (punctuation 19323 . 19324) (close-paren 19322 . 19323) (symbol 19318 . 19322) (open-paren 19317 . 19318) (punctuation 19316 . 19317) (number 19315 . 19316) (punctuation 19314 . 19315) (symbol 19311 . 19314) (open-paren 19310 . 19311) (symbol 19308 . 19310) (punctuation 19307 . 19308) (punctuation 19306 . 19307) (punctuation 19305 . 19306) (symbol 19302 . 19305) (punctuation 19301 . 19302) (symbol 19293 . 19301) (open-paren 19292 . 19293) (symbol 19290 . 19292) (punctuation 19289 . 19290) (punctuation 19288 . 19289) (punctuation 19287 . 19288) (symbol 19284 . 19287) (punctuation 19283 . 19284) (symbol 19269 . 19283) (punctuation 19263 . 19264) (close-paren 19262 . 19263) (close-paren 19261 . 19262) (symbol 19245 . 19261) (punctuation 19243 . 19244) (close-paren 19242 . 19243) (symbol 19238 . 19242) (open-paren 19237 . 19238) (punctuation 19236 . 19237) (number 19235 . 19236) (punctuation 19234 . 19235) (symbol 19231 . 19234) (open-paren 19230 . 19231) (symbol 19228 . 19230) (punctuation 19227 . 19228) (punctuation 19226 . 19227) (punctuation 19225 . 19226) (symbol 19222 . 19225) (punctuation 19221 . 19222) (symbol 19213 . 19221) (open-paren 19212 . 19213) (symbol 19210 . 19212) (punctuation 19209 . 19210) (punctuation 19208 . 19209) (punctuation 19207 . 19208) (symbol 19204 . 19207) (punctuation 19203 . 19204) (symbol 19189 . 19203) (open-paren 19183 . 19184) (punctuation 19182 . 19183) (symbol 19179 . 19182) (punctuation 19178 . 19179) (symbol 19173 . 19178) (TEMPLATE 19164 . 19172) (punctuation 19163 . 19164) (punctuation 19162 . 19163) (symbol 19159 . 19162) (RETURN 19152 . 19158) (punctuation 19138 . 19139) (punctuation 19137 . 19138) (punctuation 19136 . 19137) (symbol 19130 . 19136) (punctuation 19128 . 19129) (number 19127 . 19128) (punctuation 19126 . 19127) (symbol 19111 . 19126) (TYPENAME 19102 . 19110) (TYPEDEF 19094 . 19101) (punctuation 19081 . 19082) (punctuation 19080 . 19081) (punctuation 19079 . 19080) (symbol 19073 . 19079) (punctuation 19071 . 19072) (number 19070 . 19071) (punctuation 19069 . 19070) (symbol 19054 . 19069) (TYPENAME 19045 . 19053) (TYPEDEF 19037 . 19044) (punctuation 19024 . 19025) (punctuation 19023 . 19024) (punctuation 19022 . 19023) (symbol 19016 . 19022) (punctuation 19014 . 19015) (number 19013 . 19014) (punctuation 19012 . 19013) (symbol 18997 . 19012) (TYPENAME 18988 . 18996) (TYPEDEF 18980 . 18987) (punctuation 18967 . 18968) (punctuation 18966 . 18967) (punctuation 18965 . 18966) (symbol 18959 . 18965) (punctuation 18957 . 18958) (number 18956 . 18957) (punctuation 18955 . 18956) (symbol 18940 . 18955) (TYPENAME 18931 . 18939) (TYPEDEF 18923 . 18930) (punctuation 18910 . 18911) (punctuation 18909 . 18910) (punctuation 18908 . 18909) (symbol 18902 . 18908) (punctuation 18900 . 18901) (number 18899 . 18900) (punctuation 18898 . 18899) (symbol 18883 . 18898) (TYPENAME 18874 . 18882) (TYPEDEF 18866 . 18873) (punctuation 18853 . 18854) (punctuation 18852 . 18853) (punctuation 18851 . 18852) (symbol 18845 . 18851) (punctuation 18843 . 18844) (number 18842 . 18843) (punctuation 18841 . 18842) (symbol 18826 . 18841) (TYPENAME 18817 . 18825) (TYPEDEF 18809 . 18816) (punctuation 18796 . 18797) (punctuation 18795 . 18796) (punctuation 18794 . 18795) (symbol 18788 . 18794) (punctuation 18786 . 18787) (number 18785 . 18786) (punctuation 18784 . 18785) (symbol 18769 . 18784) (TYPENAME 18760 . 18768) (TYPEDEF 18752 . 18759) (punctuation 18739 . 18740) (punctuation 18738 . 18739) (punctuation 18737 . 18738) (symbol 18731 . 18737) (punctuation 18729 . 18730) (number 18728 . 18729) (punctuation 18727 . 18728) (symbol 18712 . 18727) (TYPENAME 18703 . 18711) (TYPEDEF 18695 . 18702) (punctuation 18682 . 18683) (punctuation 18681 . 18682) (punctuation 18680 . 18681) (symbol 18674 . 18680) (punctuation 18672 . 18673) (number 18671 . 18672) (punctuation 18670 . 18671) (symbol 18655 . 18670) (TYPENAME 18646 . 18654) (TYPEDEF 18638 . 18645) (punctuation 18622 . 18623) (punctuation 18621 . 18622) (punctuation 18620 . 18621) (punctuation 18618 . 18619) (symbol 18598 . 18618) (punctuation 18597 . 18598) (symbol 18592 . 18597) (punctuation 18590 . 18591) (symbol 18586 . 18590) (punctuation 18585 . 18586) (symbol 18564 . 18585) (TYPENAME 18550 . 18558) (TYPEDEF 18542 . 18549) (close-paren 18538 . 18539) (number 18537 . 18538) (open-paren 18536 . 18537) (symbol 18493 . 18536) (punctuation 18490 . 18491) (close-paren 18489 . 18490) (close-paren 18487 . 18488) (punctuation 18483 . 18484) (close-paren 18482 . 18483) (close-paren 18476 . 18477) (close-paren 18475 . 18476) (symbol 18459 . 18475) (punctuation 18457 . 18458) (close-paren 18456 . 18457) (symbol 18452 . 18456) (open-paren 18451 . 18452) (punctuation 18450 . 18451) (number 18449 . 18450) (punctuation 18448 . 18449) (symbol 18445 . 18448) (open-paren 18444 . 18445) (symbol 18442 . 18444) (punctuation 18441 . 18442) (punctuation 18440 . 18441) (punctuation 18439 . 18440) (symbol 18436 . 18439) (punctuation 18435 . 18436) (symbol 18427 . 18435) (open-paren 18426 . 18427) (symbol 18424 . 18426) (punctuation 18423 . 18424) (punctuation 18422 . 18423) (punctuation 18421 . 18422) (symbol 18418 . 18421) (punctuation 18417 . 18418) (symbol 18403 . 18417) (punctuation 18397 . 18398) (close-paren 18396 . 18397) (close-paren 18395 . 18396) (symbol 18379 . 18395) (punctuation 18377 . 18378) (close-paren 18376 . 18377) (symbol 18372 . 18376) (open-paren 18371 . 18372) (punctuation 18370 . 18371) (number 18369 . 18370) (punctuation 18368 . 18369) (symbol 18365 . 18368) (open-paren 18364 . 18365) (symbol 18362 . 18364) (punctuation 18361 . 18362) (punctuation 18360 . 18361) (punctuation 18359 . 18360) (symbol 18356 . 18359) (punctuation 18355 . 18356) (symbol 18347 . 18355) (open-paren 18346 . 18347) (symbol 18344 . 18346) (punctuation 18343 . 18344) (punctuation 18342 . 18343) (punctuation 18341 . 18342) (symbol 18338 . 18341) (punctuation 18337 . 18338) (symbol 18323 . 18337) (punctuation 18317 . 18318) (close-paren 18316 . 18317) (close-paren 18315 . 18316) (symbol 18299 . 18315) (punctuation 18297 . 18298) (close-paren 18296 . 18297) (symbol 18292 . 18296) (open-paren 18291 . 18292) (punctuation 18290 . 18291) (number 18289 . 18290) (punctuation 18288 . 18289) (symbol 18285 . 18288) (open-paren 18284 . 18285) (symbol 18282 . 18284) (punctuation 18281 . 18282) (punctuation 18280 . 18281) (punctuation 18279 . 18280) (symbol 18276 . 18279) (punctuation 18275 . 18276) (symbol 18267 . 18275) (open-paren 18266 . 18267) (symbol 18264 . 18266) (punctuation 18263 . 18264) (punctuation 18262 . 18263) (punctuation 18261 . 18262) (symbol 18258 . 18261) (punctuation 18257 . 18258) (symbol 18243 . 18257) (punctuation 18237 . 18238) (close-paren 18236 . 18237) (close-paren 18235 . 18236) (symbol 18219 . 18235) (punctuation 18217 . 18218) (close-paren 18216 . 18217) (symbol 18212 . 18216) (open-paren 18211 . 18212) (punctuation 18210 . 18211) (number 18209 . 18210) (punctuation 18208 . 18209) (symbol 18205 . 18208) (open-paren 18204 . 18205) (symbol 18202 . 18204) (punctuation 18201 . 18202) (punctuation 18200 . 18201) (punctuation 18199 . 18200) (symbol 18196 . 18199) (punctuation 18195 . 18196) (symbol 18187 . 18195) (open-paren 18186 . 18187) (symbol 18184 . 18186) (punctuation 18183 . 18184) (punctuation 18182 . 18183) (punctuation 18181 . 18182) (symbol 18178 . 18181) (punctuation 18177 . 18178) (symbol 18163 . 18177) (punctuation 18157 . 18158) (close-paren 18156 . 18157) (close-paren 18155 . 18156) (symbol 18139 . 18155) (punctuation 18137 . 18138) (close-paren 18136 . 18137) (symbol 18132 . 18136) (open-paren 18131 . 18132) (punctuation 18130 . 18131) (number 18129 . 18130) (punctuation 18128 . 18129) (symbol 18125 . 18128) (open-paren 18124 . 18125) (symbol 18122 . 18124) (punctuation 18121 . 18122) (punctuation 18120 . 18121) (punctuation 18119 . 18120) (symbol 18116 . 18119) (punctuation 18115 . 18116) (symbol 18107 . 18115) (open-paren 18106 . 18107) (symbol 18104 . 18106) (punctuation 18103 . 18104) (punctuation 18102 . 18103) (punctuation 18101 . 18102) (symbol 18098 . 18101) (punctuation 18097 . 18098) (symbol 18083 . 18097) (punctuation 18077 . 18078) (close-paren 18076 . 18077) (close-paren 18075 . 18076) (symbol 18059 . 18075) (punctuation 18057 . 18058) (close-paren 18056 . 18057) (symbol 18052 . 18056) (open-paren 18051 . 18052) (punctuation 18050 . 18051) (number 18049 . 18050) (punctuation 18048 . 18049) (symbol 18045 . 18048) (open-paren 18044 . 18045) (symbol 18042 . 18044) (punctuation 18041 . 18042) (punctuation 18040 . 18041) (punctuation 18039 . 18040) (symbol 18036 . 18039) (punctuation 18035 . 18036) (symbol 18027 . 18035) (open-paren 18026 . 18027) (symbol 18024 . 18026) (punctuation 18023 . 18024) (punctuation 18022 . 18023) (punctuation 18021 . 18022) (symbol 18018 . 18021) (punctuation 18017 . 18018) (symbol 18003 . 18017) (punctuation 17997 . 17998) (close-paren 17996 . 17997) (close-paren 17995 . 17996) (symbol 17979 . 17995) (punctuation 17977 . 17978) (close-paren 17976 . 17977) (symbol 17972 . 17976) (open-paren 17971 . 17972) (punctuation 17970 . 17971) (number 17969 . 17970) (punctuation 17968 . 17969) (symbol 17965 . 17968) (open-paren 17964 . 17965) (symbol 17962 . 17964) (punctuation 17961 . 17962) (punctuation 17960 . 17961) (punctuation 17959 . 17960) (symbol 17956 . 17959) (punctuation 17955 . 17956) (symbol 17947 . 17955) (open-paren 17946 . 17947) (symbol 17944 . 17946) (punctuation 17943 . 17944) (punctuation 17942 . 17943) (punctuation 17941 . 17942) (symbol 17938 . 17941) (punctuation 17937 . 17938) (symbol 17923 . 17937) (punctuation 17917 . 17918) (close-paren 17916 . 17917) (close-paren 17915 . 17916) (symbol 17899 . 17915) (punctuation 17897 . 17898) (close-paren 17896 . 17897) (symbol 17892 . 17896) (open-paren 17891 . 17892) (punctuation 17890 . 17891) (number 17889 . 17890) (punctuation 17888 . 17889) (symbol 17885 . 17888) (open-paren 17884 . 17885) (symbol 17882 . 17884) (punctuation 17881 . 17882) (punctuation 17880 . 17881) (punctuation 17879 . 17880) (symbol 17876 . 17879) (punctuation 17875 . 17876) (symbol 17867 . 17875) (open-paren 17866 . 17867) (symbol 17864 . 17866) (punctuation 17863 . 17864) (punctuation 17862 . 17863) (punctuation 17861 . 17862) (symbol 17858 . 17861) (punctuation 17857 . 17858) (symbol 17843 . 17857) (open-paren 17837 . 17838) (punctuation 17836 . 17837) (symbol 17833 . 17836) (punctuation 17832 . 17833) (symbol 17827 . 17832) (TEMPLATE 17818 . 17826) (punctuation 17817 . 17818) (punctuation 17816 . 17817) (symbol 17813 . 17816) (RETURN 17806 . 17812) (punctuation 17792 . 17793) (punctuation 17791 . 17792) (punctuation 17790 . 17791) (symbol 17784 . 17790) (punctuation 17782 . 17783) (number 17781 . 17782) (punctuation 17780 . 17781) (symbol 17765 . 17780) (TYPENAME 17756 . 17764) (TYPEDEF 17748 . 17755) (punctuation 17735 . 17736) (punctuation 17734 . 17735) (punctuation 17733 . 17734) (symbol 17727 . 17733) (punctuation 17725 . 17726) (number 17724 . 17725) (punctuation 17723 . 17724) (symbol 17708 . 17723) (TYPENAME 17699 . 17707) (TYPEDEF 17691 . 17698) (punctuation 17678 . 17679) (punctuation 17677 . 17678) (punctuation 17676 . 17677) (symbol 17670 . 17676) (punctuation 17668 . 17669) (number 17667 . 17668) (punctuation 17666 . 17667) (symbol 17651 . 17666) (TYPENAME 17642 . 17650) (TYPEDEF 17634 . 17641) (punctuation 17621 . 17622) (punctuation 17620 . 17621) (punctuation 17619 . 17620) (symbol 17613 . 17619) (punctuation 17611 . 17612) (number 17610 . 17611) (punctuation 17609 . 17610) (symbol 17594 . 17609) (TYPENAME 17585 . 17593) (TYPEDEF 17577 . 17584) (punctuation 17564 . 17565) (punctuation 17563 . 17564) (punctuation 17562 . 17563) (symbol 17556 . 17562) (punctuation 17554 . 17555) (number 17553 . 17554) (punctuation 17552 . 17553) (symbol 17537 . 17552) (TYPENAME 17528 . 17536) (TYPEDEF 17520 . 17527) (punctuation 17507 . 17508) (punctuation 17506 . 17507) (punctuation 17505 . 17506) (symbol 17499 . 17505) (punctuation 17497 . 17498) (number 17496 . 17497) (punctuation 17495 . 17496) (symbol 17480 . 17495) (TYPENAME 17471 . 17479) (TYPEDEF 17463 . 17470) (punctuation 17450 . 17451) (punctuation 17449 . 17450) (punctuation 17448 . 17449) (symbol 17442 . 17448) (punctuation 17440 . 17441) (number 17439 . 17440) (punctuation 17438 . 17439) (symbol 17423 . 17438) (TYPENAME 17414 . 17422) (TYPEDEF 17406 . 17413) (punctuation 17393 . 17394) (punctuation 17392 . 17393) (punctuation 17391 . 17392) (symbol 17385 . 17391) (punctuation 17383 . 17384) (number 17382 . 17383) (punctuation 17381 . 17382) (symbol 17366 . 17381) (TYPENAME 17357 . 17365) (TYPEDEF 17349 . 17356) (punctuation 17333 . 17334) (punctuation 17332 . 17333) (punctuation 17331 . 17332) (punctuation 17329 . 17330) (symbol 17309 . 17329) (punctuation 17308 . 17309) (symbol 17303 . 17308) (punctuation 17301 . 17302) (symbol 17297 . 17301) (punctuation 17296 . 17297) (symbol 17275 . 17296) (TYPENAME 17261 . 17269) (TYPEDEF 17253 . 17260) (close-paren 17249 . 17250) (number 17248 . 17249) (open-paren 17247 . 17248) (symbol 17204 . 17247) (punctuation 17201 . 17202) (close-paren 17200 . 17201) (close-paren 17198 . 17199) (punctuation 17194 . 17195) (close-paren 17193 . 17194) (close-paren 17187 . 17188) (close-paren 17186 . 17187) (symbol 17170 . 17186) (punctuation 17168 . 17169) (close-paren 17167 . 17168) (symbol 17163 . 17167) (open-paren 17162 . 17163) (punctuation 17161 . 17162) (number 17160 . 17161) (punctuation 17159 . 17160) (symbol 17156 . 17159) (open-paren 17155 . 17156) (symbol 17153 . 17155) (punctuation 17152 . 17153) (punctuation 17151 . 17152) (punctuation 17150 . 17151) (symbol 17147 . 17150) (punctuation 17146 . 17147) (symbol 17138 . 17146) (open-paren 17137 . 17138) (symbol 17135 . 17137) (punctuation 17134 . 17135) (punctuation 17133 . 17134) (punctuation 17132 . 17133) (symbol 17129 . 17132) (punctuation 17128 . 17129) (symbol 17114 . 17128) (punctuation 17108 . 17109) (close-paren 17107 . 17108) (close-paren 17106 . 17107) (symbol 17090 . 17106) (punctuation 17088 . 17089) (close-paren 17087 . 17088) (symbol 17083 . 17087) (open-paren 17082 . 17083) (punctuation 17081 . 17082) (number 17080 . 17081) (punctuation 17079 . 17080) (symbol 17076 . 17079) (open-paren 17075 . 17076) (symbol 17073 . 17075) (punctuation 17072 . 17073) (punctuation 17071 . 17072) (punctuation 17070 . 17071) (symbol 17067 . 17070) (punctuation 17066 . 17067) (symbol 17058 . 17066) (open-paren 17057 . 17058) (symbol 17055 . 17057) (punctuation 17054 . 17055) (punctuation 17053 . 17054) (punctuation 17052 . 17053) (symbol 17049 . 17052) (punctuation 17048 . 17049) (symbol 17034 . 17048) (punctuation 17028 . 17029) (close-paren 17027 . 17028) (close-paren 17026 . 17027) (symbol 17010 . 17026) (punctuation 17008 . 17009) (close-paren 17007 . 17008) (symbol 17003 . 17007) (open-paren 17002 . 17003) (punctuation 17001 . 17002) (number 17000 . 17001) (punctuation 16999 . 17000) (symbol 16996 . 16999) (open-paren 16995 . 16996) (symbol 16993 . 16995) (punctuation 16992 . 16993) (punctuation 16991 . 16992) (punctuation 16990 . 16991) (symbol 16987 . 16990) (punctuation 16986 . 16987) (symbol 16978 . 16986) (open-paren 16977 . 16978) (symbol 16975 . 16977) (punctuation 16974 . 16975) (punctuation 16973 . 16974) (punctuation 16972 . 16973) (symbol 16969 . 16972) (punctuation 16968 . 16969) (symbol 16954 . 16968) (punctuation 16948 . 16949) (close-paren 16947 . 16948) (close-paren 16946 . 16947) (symbol 16930 . 16946) (punctuation 16928 . 16929) (close-paren 16927 . 16928) (symbol 16923 . 16927) (open-paren 16922 . 16923) (punctuation 16921 . 16922) (number 16920 . 16921) (punctuation 16919 . 16920) (symbol 16916 . 16919) (open-paren 16915 . 16916) (symbol 16913 . 16915) (punctuation 16912 . 16913) (punctuation 16911 . 16912) (punctuation 16910 . 16911) (symbol 16907 . 16910) (punctuation 16906 . 16907) (symbol 16898 . 16906) (open-paren 16897 . 16898) (symbol 16895 . 16897) (punctuation 16894 . 16895) (punctuation 16893 . 16894) (punctuation 16892 . 16893) (symbol 16889 . 16892) (punctuation 16888 . 16889) (symbol 16874 . 16888) (punctuation 16868 . 16869) (close-paren 16867 . 16868) (close-paren 16866 . 16867) (symbol 16850 . 16866) (punctuation 16848 . 16849) (close-paren 16847 . 16848) (symbol 16843 . 16847) (open-paren 16842 . 16843) (punctuation 16841 . 16842) (number 16840 . 16841) (punctuation 16839 . 16840) (symbol 16836 . 16839) (open-paren 16835 . 16836) (symbol 16833 . 16835) (punctuation 16832 . 16833) (punctuation 16831 . 16832) (punctuation 16830 . 16831) (symbol 16827 . 16830) (punctuation 16826 . 16827) (symbol 16818 . 16826) (open-paren 16817 . 16818) (symbol 16815 . 16817) (punctuation 16814 . 16815) (punctuation 16813 . 16814) (punctuation 16812 . 16813) (symbol 16809 . 16812) (punctuation 16808 . 16809) (symbol 16794 . 16808) (punctuation 16788 . 16789) (close-paren 16787 . 16788) (close-paren 16786 . 16787) (symbol 16770 . 16786) (punctuation 16768 . 16769) (close-paren 16767 . 16768) (symbol 16763 . 16767) (open-paren 16762 . 16763) (punctuation 16761 . 16762) (number 16760 . 16761) (punctuation 16759 . 16760) (symbol 16756 . 16759) (open-paren 16755 . 16756) (symbol 16753 . 16755) (punctuation 16752 . 16753) (punctuation 16751 . 16752) (punctuation 16750 . 16751) (symbol 16747 . 16750) (punctuation 16746 . 16747) (symbol 16738 . 16746) (open-paren 16737 . 16738) (symbol 16735 . 16737) (punctuation 16734 . 16735) (punctuation 16733 . 16734) (punctuation 16732 . 16733) (symbol 16729 . 16732) (punctuation 16728 . 16729) (symbol 16714 . 16728) (punctuation 16708 . 16709) (close-paren 16707 . 16708) (close-paren 16706 . 16707) (symbol 16690 . 16706) (punctuation 16688 . 16689) (close-paren 16687 . 16688) (symbol 16683 . 16687) (open-paren 16682 . 16683) (punctuation 16681 . 16682) (number 16680 . 16681) (punctuation 16679 . 16680) (symbol 16676 . 16679) (open-paren 16675 . 16676) (symbol 16673 . 16675) (punctuation 16672 . 16673) (punctuation 16671 . 16672) (punctuation 16670 . 16671) (symbol 16667 . 16670) (punctuation 16666 . 16667) (symbol 16658 . 16666) (open-paren 16657 . 16658) (symbol 16655 . 16657) (punctuation 16654 . 16655) (punctuation 16653 . 16654) (punctuation 16652 . 16653) (symbol 16649 . 16652) (punctuation 16648 . 16649) (symbol 16634 . 16648) (open-paren 16628 . 16629) (punctuation 16627 . 16628) (symbol 16624 . 16627) (punctuation 16623 . 16624) (symbol 16618 . 16623) (TEMPLATE 16609 . 16617) (punctuation 16608 . 16609) (punctuation 16607 . 16608) (symbol 16604 . 16607) (RETURN 16597 . 16603) (punctuation 16582 . 16583) (punctuation 16581 . 16582) (punctuation 16580 . 16581) (symbol 16574 . 16580) (punctuation 16572 . 16573) (number 16571 . 16572) (punctuation 16570 . 16571) (symbol 16555 . 16570) (TYPENAME 16546 . 16554) (TYPEDEF 16538 . 16545) (punctuation 16525 . 16526) (punctuation 16524 . 16525) (punctuation 16523 . 16524) (symbol 16517 . 16523) (punctuation 16515 . 16516) (number 16514 . 16515) (punctuation 16513 . 16514) (symbol 16498 . 16513) (TYPENAME 16489 . 16497) (TYPEDEF 16481 . 16488) (punctuation 16468 . 16469) (punctuation 16467 . 16468) (punctuation 16466 . 16467) (symbol 16460 . 16466) (punctuation 16458 . 16459) (number 16457 . 16458) (punctuation 16456 . 16457) (symbol 16441 . 16456) (TYPENAME 16432 . 16440) (TYPEDEF 16424 . 16431) (punctuation 16411 . 16412) (punctuation 16410 . 16411) (punctuation 16409 . 16410) (symbol 16403 . 16409) (punctuation 16401 . 16402) (number 16400 . 16401) (punctuation 16399 . 16400) (symbol 16384 . 16399) (TYPENAME 16375 . 16383) (TYPEDEF 16367 . 16374) (punctuation 16354 . 16355) (punctuation 16353 . 16354) (punctuation 16352 . 16353) (symbol 16346 . 16352) (punctuation 16344 . 16345) (number 16343 . 16344) (punctuation 16342 . 16343) (symbol 16327 . 16342) (TYPENAME 16318 . 16326) (TYPEDEF 16310 . 16317) (punctuation 16297 . 16298) (punctuation 16296 . 16297) (punctuation 16295 . 16296) (symbol 16289 . 16295) (punctuation 16287 . 16288) (number 16286 . 16287) (punctuation 16285 . 16286) (symbol 16270 . 16285) (TYPENAME 16261 . 16269) (TYPEDEF 16253 . 16260) (punctuation 16240 . 16241) (punctuation 16239 . 16240) (punctuation 16238 . 16239) (symbol 16232 . 16238) (punctuation 16230 . 16231) (number 16229 . 16230) (punctuation 16228 . 16229) (symbol 16213 . 16228) (TYPENAME 16204 . 16212) (TYPEDEF 16196 . 16203) (punctuation 16180 . 16181) (punctuation 16179 . 16180) (punctuation 16178 . 16179) (punctuation 16176 . 16177) (symbol 16156 . 16176) (punctuation 16155 . 16156) (symbol 16150 . 16155) (punctuation 16148 . 16149) (symbol 16144 . 16148) (punctuation 16143 . 16144) (symbol 16122 . 16143) (TYPENAME 16108 . 16116) (TYPEDEF 16100 . 16107) (close-paren 16096 . 16097) (number 16095 . 16096) (open-paren 16094 . 16095) (symbol 16051 . 16094) (punctuation 16048 . 16049) (close-paren 16047 . 16048) (close-paren 16045 . 16046) (punctuation 16041 . 16042) (close-paren 16040 . 16041) (close-paren 16033 . 16034) (close-paren 16032 . 16033) (symbol 16016 . 16032) (punctuation 16014 . 16015) (close-paren 16013 . 16014) (symbol 16009 . 16013) (open-paren 16008 . 16009) (punctuation 16007 . 16008) (number 16006 . 16007) (punctuation 16005 . 16006) (symbol 16002 . 16005) (open-paren 16001 . 16002) (symbol 15999 . 16001) (punctuation 15998 . 15999) (punctuation 15997 . 15998) (punctuation 15996 . 15997) (symbol 15993 . 15996) (punctuation 15992 . 15993) (symbol 15984 . 15992) (open-paren 15983 . 15984) (symbol 15981 . 15983) (punctuation 15980 . 15981) (punctuation 15979 . 15980) (punctuation 15978 . 15979) (symbol 15975 . 15978) (punctuation 15974 . 15975) (symbol 15960 . 15974) (punctuation 15954 . 15955) (close-paren 15953 . 15954) (close-paren 15952 . 15953) (symbol 15936 . 15952) (punctuation 15934 . 15935) (close-paren 15933 . 15934) (symbol 15929 . 15933) (open-paren 15928 . 15929) (punctuation 15927 . 15928) (number 15926 . 15927) (punctuation 15925 . 15926) (symbol 15922 . 15925) (open-paren 15921 . 15922) (symbol 15919 . 15921) (punctuation 15918 . 15919) (punctuation 15917 . 15918) (punctuation 15916 . 15917) (symbol 15913 . 15916) (punctuation 15912 . 15913) (symbol 15904 . 15912) (open-paren 15903 . 15904) (symbol 15901 . 15903) (punctuation 15900 . 15901) (punctuation 15899 . 15900) (punctuation 15898 . 15899) (symbol 15895 . 15898) (punctuation 15894 . 15895) (symbol 15880 . 15894) (punctuation 15874 . 15875) (close-paren 15873 . 15874) (close-paren 15872 . 15873) (symbol 15856 . 15872) (punctuation 15854 . 15855) (close-paren 15853 . 15854) (symbol 15849 . 15853) (open-paren 15848 . 15849) (punctuation 15847 . 15848) (number 15846 . 15847) (punctuation 15845 . 15846) (symbol 15842 . 15845) (open-paren 15841 . 15842) (symbol 15839 . 15841) (punctuation 15838 . 15839) (punctuation 15837 . 15838) (punctuation 15836 . 15837) (symbol 15833 . 15836) (punctuation 15832 . 15833) (symbol 15824 . 15832) (open-paren 15823 . 15824) (symbol 15821 . 15823) (punctuation 15820 . 15821) (punctuation 15819 . 15820) (punctuation 15818 . 15819) (symbol 15815 . 15818) (punctuation 15814 . 15815) (symbol 15800 . 15814) (punctuation 15794 . 15795) (close-paren 15793 . 15794) (close-paren 15792 . 15793) (symbol 15776 . 15792) (punctuation 15774 . 15775) (close-paren 15773 . 15774) (symbol 15769 . 15773) (open-paren 15768 . 15769) (punctuation 15767 . 15768) (number 15766 . 15767) (punctuation 15765 . 15766) (symbol 15762 . 15765) (open-paren 15761 . 15762) (symbol 15759 . 15761) (punctuation 15758 . 15759) (punctuation 15757 . 15758) (punctuation 15756 . 15757) (symbol 15753 . 15756) (punctuation 15752 . 15753) (symbol 15744 . 15752) (open-paren 15743 . 15744) (symbol 15741 . 15743) (punctuation 15740 . 15741) (punctuation 15739 . 15740) (punctuation 15738 . 15739) (symbol 15735 . 15738) (punctuation 15734 . 15735) (symbol 15720 . 15734) (punctuation 15714 . 15715) (close-paren 15713 . 15714) (close-paren 15712 . 15713) (symbol 15696 . 15712) (punctuation 15694 . 15695) (close-paren 15693 . 15694) (symbol 15689 . 15693) (open-paren 15688 . 15689) (punctuation 15687 . 15688) (number 15686 . 15687) (punctuation 15685 . 15686) (symbol 15682 . 15685) (open-paren 15681 . 15682) (symbol 15679 . 15681) (punctuation 15678 . 15679) (punctuation 15677 . 15678) (punctuation 15676 . 15677) (symbol 15673 . 15676) (punctuation 15672 . 15673) (symbol 15664 . 15672) (open-paren 15663 . 15664) (symbol 15661 . 15663) (punctuation 15660 . 15661) (punctuation 15659 . 15660) (punctuation 15658 . 15659) (symbol 15655 . 15658) (punctuation 15654 . 15655) (symbol 15640 . 15654) (punctuation 15634 . 15635) (close-paren 15633 . 15634) (close-paren 15632 . 15633) (symbol 15616 . 15632) (punctuation 15614 . 15615) (close-paren 15613 . 15614) (symbol 15609 . 15613) (open-paren 15608 . 15609) (punctuation 15607 . 15608) (number 15606 . 15607) (punctuation 15605 . 15606) (symbol 15602 . 15605) (open-paren 15601 . 15602) (symbol 15599 . 15601) (punctuation 15598 . 15599) (punctuation 15597 . 15598) (punctuation 15596 . 15597) (symbol 15593 . 15596) (punctuation 15592 . 15593) (symbol 15584 . 15592) (open-paren 15583 . 15584) (symbol 15581 . 15583) (punctuation 15580 . 15581) (punctuation 15579 . 15580) (punctuation 15578 . 15579) (symbol 15575 . 15578) (punctuation 15574 . 15575) (symbol 15560 . 15574) (open-paren 15554 . 15555) (punctuation 15553 . 15554) (symbol 15550 . 15553) (punctuation 15549 . 15550) (symbol 15544 . 15549) (TEMPLATE 15535 . 15543) (punctuation 15534 . 15535) (punctuation 15533 . 15534) (symbol 15530 . 15533) (RETURN 15523 . 15529) (punctuation 15506 . 15507) (punctuation 15505 . 15506) (punctuation 15504 . 15505) (symbol 15498 . 15504) (punctuation 15496 . 15497) (number 15495 . 15496) (punctuation 15494 . 15495) (symbol 15479 . 15494) (TYPENAME 15470 . 15478) (TYPEDEF 15462 . 15469) (punctuation 15449 . 15450) (punctuation 15448 . 15449) (punctuation 15447 . 15448) (symbol 15441 . 15447) (punctuation 15439 . 15440) (number 15438 . 15439) (punctuation 15437 . 15438) (symbol 15422 . 15437) (TYPENAME 15413 . 15421) (TYPEDEF 15405 . 15412) (punctuation 15392 . 15393) (punctuation 15391 . 15392) (punctuation 15390 . 15391) (symbol 15384 . 15390) (punctuation 15382 . 15383) (number 15381 . 15382) (punctuation 15380 . 15381) (symbol 15365 . 15380) (TYPENAME 15356 . 15364) (TYPEDEF 15348 . 15355) (punctuation 15335 . 15336) (punctuation 15334 . 15335) (punctuation 15333 . 15334) (symbol 15327 . 15333) (punctuation 15325 . 15326) (number 15324 . 15325) (punctuation 15323 . 15324) (symbol 15308 . 15323) (TYPENAME 15299 . 15307) (TYPEDEF 15291 . 15298) (punctuation 15278 . 15279) (punctuation 15277 . 15278) (punctuation 15276 . 15277) (symbol 15270 . 15276) (punctuation 15268 . 15269) (number 15267 . 15268) (punctuation 15266 . 15267) (symbol 15251 . 15266) (TYPENAME 15242 . 15250) (TYPEDEF 15234 . 15241) (punctuation 15221 . 15222) (punctuation 15220 . 15221) (punctuation 15219 . 15220) (symbol 15213 . 15219) (punctuation 15211 . 15212) (number 15210 . 15211) (punctuation 15209 . 15210) (symbol 15194 . 15209) (TYPENAME 15185 . 15193) (TYPEDEF 15177 . 15184) (punctuation 15161 . 15162) (punctuation 15160 . 15161) (punctuation 15159 . 15160) (punctuation 15157 . 15158) (symbol 15137 . 15157) (punctuation 15136 . 15137) (symbol 15131 . 15136) (punctuation 15129 . 15130) (symbol 15125 . 15129) (punctuation 15124 . 15125) (symbol 15103 . 15124) (TYPENAME 15089 . 15097) (TYPEDEF 15081 . 15088) (close-paren 15076 . 15077) (number 15075 . 15076) (open-paren 15074 . 15075) (symbol 15031 . 15074) (punctuation 15028 . 15029) (close-paren 15027 . 15028) (close-paren 15025 . 15026) (punctuation 15021 . 15022) (close-paren 15020 . 15021) (close-paren 15014 . 15015) (close-paren 15013 . 15014) (symbol 14997 . 15013) (punctuation 14995 . 14996) (close-paren 14994 . 14995) (symbol 14990 . 14994) (open-paren 14989 . 14990) (punctuation 14988 . 14989) (number 14987 . 14988) (punctuation 14986 . 14987) (symbol 14983 . 14986) (open-paren 14982 . 14983) (symbol 14980 . 14982) (punctuation 14979 . 14980) (punctuation 14978 . 14979) (punctuation 14977 . 14978) (symbol 14974 . 14977) (punctuation 14973 . 14974) (symbol 14965 . 14973) (open-paren 14964 . 14965) (symbol 14962 . 14964) (punctuation 14961 . 14962) (punctuation 14960 . 14961) (punctuation 14959 . 14960) (symbol 14956 . 14959) (punctuation 14955 . 14956) (symbol 14941 . 14955) (punctuation 14935 . 14936) (close-paren 14934 . 14935) (close-paren 14933 . 14934) (symbol 14917 . 14933) (punctuation 14915 . 14916) (close-paren 14914 . 14915) (symbol 14910 . 14914) (open-paren 14909 . 14910) (punctuation 14908 . 14909) (number 14907 . 14908) (punctuation 14906 . 14907) (symbol 14903 . 14906) (open-paren 14902 . 14903) (symbol 14900 . 14902) (punctuation 14899 . 14900) (punctuation 14898 . 14899) (punctuation 14897 . 14898) (symbol 14894 . 14897) (punctuation 14893 . 14894) (symbol 14885 . 14893) (open-paren 14884 . 14885) (symbol 14882 . 14884) (punctuation 14881 . 14882) (punctuation 14880 . 14881) (punctuation 14879 . 14880) (symbol 14876 . 14879) (punctuation 14875 . 14876) (symbol 14861 . 14875) (punctuation 14855 . 14856) (close-paren 14854 . 14855) (close-paren 14853 . 14854) (symbol 14837 . 14853) (punctuation 14835 . 14836) (close-paren 14834 . 14835) (symbol 14830 . 14834) (open-paren 14829 . 14830) (punctuation 14828 . 14829) (number 14827 . 14828) (punctuation 14826 . 14827) (symbol 14823 . 14826) (open-paren 14822 . 14823) (symbol 14820 . 14822) (punctuation 14819 . 14820) (punctuation 14818 . 14819) (punctuation 14817 . 14818) (symbol 14814 . 14817) (punctuation 14813 . 14814) (symbol 14805 . 14813) (open-paren 14804 . 14805) (symbol 14802 . 14804) (punctuation 14801 . 14802) (punctuation 14800 . 14801) (punctuation 14799 . 14800) (symbol 14796 . 14799) (punctuation 14795 . 14796) (symbol 14781 . 14795) (punctuation 14775 . 14776) (close-paren 14774 . 14775) (close-paren 14773 . 14774) (symbol 14757 . 14773) (punctuation 14755 . 14756) (close-paren 14754 . 14755) (symbol 14750 . 14754) (open-paren 14749 . 14750) (punctuation 14748 . 14749) (number 14747 . 14748) (punctuation 14746 . 14747) (symbol 14743 . 14746) (open-paren 14742 . 14743) (symbol 14740 . 14742) (punctuation 14739 . 14740) (punctuation 14738 . 14739) (punctuation 14737 . 14738) (symbol 14734 . 14737) (punctuation 14733 . 14734) (symbol 14725 . 14733) (open-paren 14724 . 14725) (symbol 14722 . 14724) (punctuation 14721 . 14722) (punctuation 14720 . 14721) (punctuation 14719 . 14720) (symbol 14716 . 14719) (punctuation 14715 . 14716) (symbol 14701 . 14715) (punctuation 14695 . 14696) (close-paren 14694 . 14695) (close-paren 14693 . 14694) (symbol 14677 . 14693) (punctuation 14675 . 14676) (close-paren 14674 . 14675) (symbol 14670 . 14674) (open-paren 14669 . 14670) (punctuation 14668 . 14669) (number 14667 . 14668) (punctuation 14666 . 14667) (symbol 14663 . 14666) (open-paren 14662 . 14663) (symbol 14660 . 14662) (punctuation 14659 . 14660) (punctuation 14658 . 14659) (punctuation 14657 . 14658) (symbol 14654 . 14657) (punctuation 14653 . 14654) (symbol 14645 . 14653) (open-paren 14644 . 14645) (symbol 14642 . 14644) (punctuation 14641 . 14642) (punctuation 14640 . 14641) (punctuation 14639 . 14640) (symbol 14636 . 14639) (punctuation 14635 . 14636) (symbol 14621 . 14635) (open-paren 14615 . 14616) (punctuation 14614 . 14615) (symbol 14611 . 14614) (punctuation 14610 . 14611) (symbol 14605 . 14610) (TEMPLATE 14596 . 14604) (punctuation 14595 . 14596) (punctuation 14594 . 14595) (symbol 14591 . 14594) (RETURN 14584 . 14590) (punctuation 14570 . 14571) (punctuation 14569 . 14570) (punctuation 14568 . 14569) (symbol 14562 . 14568) (punctuation 14560 . 14561) (number 14559 . 14560) (punctuation 14558 . 14559) (symbol 14543 . 14558) (TYPENAME 14534 . 14542) (TYPEDEF 14526 . 14533) (punctuation 14513 . 14514) (punctuation 14512 . 14513) (punctuation 14511 . 14512) (symbol 14505 . 14511) (punctuation 14503 . 14504) (number 14502 . 14503) (punctuation 14501 . 14502) (symbol 14486 . 14501) (TYPENAME 14477 . 14485) (TYPEDEF 14469 . 14476) (punctuation 14456 . 14457) (punctuation 14455 . 14456) (punctuation 14454 . 14455) (symbol 14448 . 14454) (punctuation 14446 . 14447) (number 14445 . 14446) (punctuation 14444 . 14445) (symbol 14429 . 14444) (TYPENAME 14420 . 14428) (TYPEDEF 14412 . 14419) (punctuation 14399 . 14400) (punctuation 14398 . 14399) (punctuation 14397 . 14398) (symbol 14391 . 14397) (punctuation 14389 . 14390) (number 14388 . 14389) (punctuation 14387 . 14388) (symbol 14372 . 14387) (TYPENAME 14363 . 14371) (TYPEDEF 14355 . 14362) (punctuation 14342 . 14343) (punctuation 14341 . 14342) (punctuation 14340 . 14341) (symbol 14334 . 14340) (punctuation 14332 . 14333) (number 14331 . 14332) (punctuation 14330 . 14331) (symbol 14315 . 14330) (TYPENAME 14306 . 14314) (TYPEDEF 14298 . 14305) (punctuation 14282 . 14283) (punctuation 14281 . 14282) (punctuation 14280 . 14281) (punctuation 14278 . 14279) (symbol 14258 . 14278) (punctuation 14257 . 14258) (symbol 14252 . 14257) (punctuation 14250 . 14251) (symbol 14246 . 14250) (punctuation 14245 . 14246) (symbol 14224 . 14245) (TYPENAME 14210 . 14218) (TYPEDEF 14202 . 14209) (close-paren 14198 . 14199) (number 14197 . 14198) (open-paren 14196 . 14197) (symbol 14153 . 14196) (punctuation 14150 . 14151) (close-paren 14149 . 14150) (close-paren 14147 . 14148) (punctuation 14143 . 14144) (close-paren 14142 . 14143) (close-paren 14136 . 14137) (semantic-list 14104 . 14136) (symbol 14102 . 14104) (semantic-list 14111 . 14117) (punctuation 14101 . 14102) (punctuation 14100 . 14101) (punctuation 14099 . 14100) (symbol 14096 . 14099) (punctuation 14095 . 14096) (symbol 14087 . 14095) (semantic-list 14111 . 14117) (open-paren 14086 . 14087) (symbol 14084 . 14086) (punctuation 14083 . 14084) (punctuation 14082 . 14083) (punctuation 14081 . 14082) (symbol 14078 . 14081) (punctuation 14077 . 14078) (symbol 14063 . 14077) (punctuation 14057 . 14058) (close-paren 14056 . 14057) (semantic-list 14024 . 14056) (symbol 14022 . 14024) (semantic-list 14031 . 14037) (punctuation 14021 . 14022) (punctuation 14020 . 14021) (punctuation 14019 . 14020) (symbol 14016 . 14019) (punctuation 14015 . 14016) (symbol 14007 . 14015) (semantic-list 14031 . 14037) (open-paren 14006 . 14007) (symbol 14004 . 14006) (punctuation 14003 . 14004) (punctuation 14002 . 14003) (punctuation 14001 . 14002) (symbol 13998 . 14001) (punctuation 13997 . 13998) (symbol 13983 . 13997) (punctuation 13977 . 13978) (close-paren 13976 . 13977) (semantic-list 13944 . 13976) (symbol 13942 . 13944) (semantic-list 13951 . 13957) (punctuation 13941 . 13942) (punctuation 13940 . 13941) (punctuation 13939 . 13940) (symbol 13936 . 13939) (punctuation 13935 . 13936) (symbol 13927 . 13935) (semantic-list 13951 . 13957) (open-paren 13926 . 13927) (symbol 13924 . 13926) (punctuation 13923 . 13924) (punctuation 13922 . 13923) (punctuation 13921 . 13922) (symbol 13918 . 13921) (punctuation 13917 . 13918) (symbol 13903 . 13917) (punctuation 13897 . 13898) (close-paren 13896 . 13897) (semantic-list 13864 . 13896) (symbol 13862 . 13864) (semantic-list 13871 . 13877) (punctuation 13861 . 13862) (punctuation 13860 . 13861) (punctuation 13859 . 13860) (symbol 13856 . 13859) (punctuation 13855 . 13856) (symbol 13847 . 13855) (semantic-list 13871 . 13877) (open-paren 13846 . 13847) (symbol 13844 . 13846) (punctuation 13843 . 13844) (punctuation 13842 . 13843) (punctuation 13841 . 13842) (symbol 13838 . 13841) (punctuation 13837 . 13838) (symbol 13823 . 13837) (open-paren 13817 . 13818) (punctuation 13816 . 13817) (symbol 13813 . 13816) (punctuation 13812 . 13813) (symbol 13807 . 13812) (TEMPLATE 13798 . 13806) (punctuation 13797 . 13798) (punctuation 13796 . 13797) (symbol 13793 . 13796) (RETURN 13786 . 13792) (punctuation 13772 . 13773) (punctuation 13771 . 13772) (punctuation 13770 . 13771) (symbol 13764 . 13770) (punctuation 13762 . 13763) (number 13761 . 13762) (punctuation 13760 . 13761) (symbol 13745 . 13760) (TYPENAME 13736 . 13744) (TYPEDEF 13728 . 13735) (punctuation 13715 . 13716) (punctuation 13714 . 13715) (punctuation 13713 . 13714) (symbol 13707 . 13713) (punctuation 13705 . 13706) (number 13704 . 13705) (punctuation 13703 . 13704) (symbol 13688 . 13703) (TYPENAME 13679 . 13687) (TYPEDEF 13671 . 13678) (punctuation 13658 . 13659) (punctuation 13657 . 13658) (punctuation 13656 . 13657) (symbol 13650 . 13656) (punctuation 13648 . 13649) (number 13647 . 13648) (punctuation 13646 . 13647) (symbol 13631 . 13646) (TYPENAME 13622 . 13630) (TYPEDEF 13614 . 13621) (punctuation 13601 . 13602) (punctuation 13600 . 13601) (punctuation 13599 . 13600) (symbol 13593 . 13599) (punctuation 13591 . 13592) (number 13590 . 13591) (punctuation 13589 . 13590) (symbol 13574 . 13589) (TYPENAME 13565 . 13573) (TYPEDEF 13557 . 13564) (punctuation 13541 . 13542) (punctuation 13540 . 13541) (punctuation 13539 . 13540) (punctuation 13537 . 13538) (symbol 13517 . 13537) (punctuation 13516 . 13517) (symbol 13511 . 13516) (punctuation 13509 . 13510) (symbol 13505 . 13509) (punctuation 13504 . 13505) (symbol 13483 . 13504) (TYPENAME 13469 . 13477) (TYPEDEF 13461 . 13468) (close-paren 13457 . 13458) (number 13456 . 13457) (open-paren 13455 . 13456) (symbol 13412 . 13455) (punctuation 13409 . 13410) (close-paren 13408 . 13409) (close-paren 13406 . 13407) (semantic-list 13345 . 13396) (punctuation 13342 . 13343) (punctuation 13341 . 13342) (semantic-list 13265 . 13316) (punctuation 13262 . 13263) (punctuation 13261 . 13262) (semantic-list 13185 . 13236) (punctuation 13182 . 13183) (punctuation 13181 . 13182) (TEMPLATE 13137 . 13145) (punctuation 13136 . 13137) (punctuation 13135 . 13136) (symbol 13132 . 13135) (RETURN 13125 . 13131) (punctuation 13111 . 13112) (punctuation 13110 . 13111) (punctuation 13109 . 13110) (symbol 13103 . 13109) (punctuation 13101 . 13102) (number 13100 . 13101) (punctuation 13099 . 13100) (symbol 13084 . 13099) (TYPENAME 13075 . 13083) (TYPEDEF 13067 . 13074) (punctuation 13054 . 13055) (punctuation 13053 . 13054) (punctuation 13052 . 13053) (symbol 13046 . 13052) (punctuation 13044 . 13045) (number 13043 . 13044) (punctuation 13042 . 13043) (symbol 13027 . 13042) (TYPENAME 13018 . 13026) (TYPEDEF 13010 . 13017) (punctuation 12997 . 12998) (punctuation 12996 . 12997) (punctuation 12995 . 12996) (symbol 12989 . 12995) (punctuation 12987 . 12988) (number 12986 . 12987) (punctuation 12985 . 12986) (symbol 12970 . 12985) (TYPENAME 12961 . 12969) (TYPEDEF 12953 . 12960) (punctuation 12936 . 12937) (punctuation 12935 . 12936) (punctuation 12934 . 12935) (punctuation 12932 . 12933) (symbol 12912 . 12932) (punctuation 12911 . 12912) (symbol 12906 . 12911) (punctuation 12904 . 12905) (symbol 12900 . 12904) (punctuation 12899 . 12900) (symbol 12878 . 12899) (TYPENAME 12864 . 12872) (TYPEDEF 12856 . 12863) (semantic-list 12849 . 12852) (symbol 12806 . 12849) (number 12850 . 12851) (punctuation 12803 . 12804) (punctuation 12796 . 12797) (close-paren 12795 . 12796) (close-paren 12789 . 12790) (semantic-list 12757 . 12789) (symbol 12755 . 12757) (semantic-list 12764 . 12770) (punctuation 12754 . 12755) (punctuation 12753 . 12754) (punctuation 12752 . 12753) (symbol 12749 . 12752) (punctuation 12748 . 12749) (symbol 12740 . 12748) (semantic-list 12764 . 12770) (open-paren 12739 . 12740) (symbol 12737 . 12739) (punctuation 12736 . 12737) (punctuation 12735 . 12736) (punctuation 12734 . 12735) (symbol 12731 . 12734) (punctuation 12730 . 12731) (symbol 12716 . 12730) (punctuation 12710 . 12711) (close-paren 12709 . 12710) (semantic-list 12677 . 12709) (symbol 12675 . 12677) (semantic-list 12684 . 12690) (punctuation 12674 . 12675) (punctuation 12673 . 12674) (punctuation 12672 . 12673) (symbol 12669 . 12672) (punctuation 12668 . 12669) (symbol 12660 . 12668) (semantic-list 12684 . 12690) (open-paren 12659 . 12660) (symbol 12657 . 12659) (punctuation 12656 . 12657) (punctuation 12655 . 12656) (punctuation 12654 . 12655) (symbol 12651 . 12654) (punctuation 12650 . 12651) (symbol 12636 . 12650) (open-paren 12630 . 12631) (punctuation 12629 . 12630) (symbol 12626 . 12629) (punctuation 12625 . 12626) (symbol 12620 . 12625) (TEMPLATE 12611 . 12619) (punctuation 12610 . 12611) (punctuation 12609 . 12610) (symbol 12606 . 12609) (RETURN 12599 . 12605) (punctuation 12585 . 12586) (punctuation 12584 . 12585) (punctuation 12583 . 12584) (symbol 12577 . 12583) (punctuation 12575 . 12576) (number 12574 . 12575) (punctuation 12573 . 12574) (symbol 12558 . 12573) (TYPENAME 12549 . 12557) (TYPEDEF 12541 . 12548) (punctuation 12528 . 12529) (punctuation 12527 . 12528) (punctuation 12526 . 12527) (symbol 12520 . 12526) (punctuation 12518 . 12519) (number 12517 . 12518) (punctuation 12516 . 12517) (symbol 12501 . 12516) (TYPENAME 12492 . 12500) (TYPEDEF 12484 . 12491) (punctuation 12468 . 12469) (punctuation 12467 . 12468) (punctuation 12466 . 12467) (punctuation 12464 . 12465) (symbol 12444 . 12464) (punctuation 12443 . 12444) (symbol 12438 . 12443) (punctuation 12436 . 12437) (symbol 12432 . 12436) (punctuation 12431 . 12432) (symbol 12410 . 12431) (TYPENAME 12396 . 12404) (TYPEDEF 12388 . 12395) (semantic-list #("{                                                                      \\
public:                                                                \\
  Args args;                                                           \\
                                                                       \\
  explicit lambda_functor_base(const Args& a) : args(a) {}             \\
                                                                       \\
  template<class SigArgs> struct sig {                                 \\
    typedef typename                                                   \\
    detail::deduce_non_ref_argument_types<Args, SigArgs>::type rets_t; \\
  public:                                                              \\
    typedef typename                                                   \\
      return_type_N_prot<Act, rets_t>::type type;                      \\
  };                                                                   \\
                                                                       \\
                                                                       \\
  template<class RET, CALL_TEMPLATE_ARGS>                              \\
  RET call(CALL_FORMAL_ARGS) const {                                   \\
    using boost::tuples::get;                                          \\
    using detail::constify_rvals;                                      \\
    using detail::r_select;                                            \\
    using detail::element_or_null;                                     \\
    using detail::deduce_argument_types;                                " 0 1 (macros (("ARITY")))) 12336 . 12382) (punctuation ">" 12336 . 12382) (symbol "Args" 12336 . 12382) (punctuation "," 12336 . 12382) (punctuation ">" 12336 . 12382) (symbol "Act" 12336 . 12382) (punctuation "," 12336 . 12382) (punctuation "<" 12336 . 12382) (symbol "action" 12336 . 12382) (punctuation "<" 12336 . 12382) (symbol "lambda_functor_base" 12336 . 12382) (CLASS "class" 12336 . 12382) (punctuation ">" 12336 . 12382) (symbol "Args" 12336 . 12382) (CLASS "class" 12336 . 12382) (punctuation "," 12336 . 12382) (symbol "Act" 12336 . 12382) (CLASS "class" 12336 . 12382) (punctuation "<" 12336 . 12382) (TEMPLATE "template" 12336 . 12382) (punctuation 12332 . 12333) (semantic-list 12268 . 12319) (punctuation 12265 . 12266) (punctuation 12264 . 12265) (TEMPLATE 12220 . 12228) (punctuation 12219 . 12220) (punctuation 12218 . 12219) (symbol 12215 . 12218) (RETURN 12208 . 12214) (punctuation 12194 . 12195) (punctuation 12193 . 12194) (punctuation 12192 . 12193) (symbol 12186 . 12192) (punctuation 12184 . 12185) (number 12183 . 12184) (punctuation 12182 . 12183) (symbol 12167 . 12182) (TYPENAME 12158 . 12166) (TYPEDEF 12150 . 12157) (punctuation 12134 . 12135) (punctuation 12133 . 12134) (punctuation 12132 . 12133) (punctuation 12130 . 12131) (symbol 12110 . 12130) (punctuation 12109 . 12110) (symbol 12104 . 12109) (punctuation 12102 . 12103) (symbol 12098 . 12102) (punctuation 12097 . 12098) (symbol 12076 . 12097) (TYPENAME 12063 . 12071) (TYPEDEF 12055 . 12062) (semantic-list #("{                                                                      \\
public:                                                                \\
  Args args;                                                           \\
                                                                       \\
  explicit lambda_functor_base(const Args& a) : args(a) {}             \\
                                                                       \\
  template<class SigArgs> struct sig {                                 \\
    typedef typename                                                   \\
    detail::deduce_non_ref_argument_types<Args, SigArgs>::type rets_t; \\
  public:                                                              \\
    typedef typename                                                   \\
      return_type_N_prot<Act, rets_t>::type type;                      \\
  };                                                                   \\
                                                                       \\
                                                                       \\
  template<class RET, CALL_TEMPLATE_ARGS>                              \\
  RET call(CALL_FORMAL_ARGS) const {                                   \\
    using boost::tuples::get;                                          \\
    using detail::constify_rvals;                                      \\
    using detail::r_select;                                            \\
    using detail::element_or_null;                                     \\
    using detail::deduce_argument_types;                                " 0 1 (macros (("ARITY")))) 12005 . 12051) (punctuation ">" 12005 . 12051) (symbol "Args" 12005 . 12051) (punctuation "," 12005 . 12051) (punctuation ">" 12005 . 12051) (symbol "Act" 12005 . 12051) (punctuation "," 12005 . 12051) (punctuation "<" 12005 . 12051) (symbol "action" 12005 . 12051) (punctuation "<" 12005 . 12051) (symbol "lambda_functor_base" 12005 . 12051) (CLASS "class" 12005 . 12051) (punctuation ">" 12005 . 12051) (symbol "Args" 12005 . 12051) (CLASS "class" 12005 . 12051) (punctuation "," 12005 . 12051) (symbol "Act" 12005 . 12051) (CLASS "class" 12005 . 12051) (punctuation "<" 12005 . 12051) (TEMPLATE "template" 12005 . 12051) (string 10096 . 10161) (symbol 10090 . 10095) (punctuation 10089 . 10090) (punctuation 9861 . 9862) (punctuation 9860 . 9861) (punctuation 9859 . 9860) (symbol 9850 . 9859) (punctuation 9848 . 9849) (symbol 9845 . 9848) (punctuation 9844 . 9845) (symbol 9831 . 9844) (TYPENAME 9822 . 9830) (TYPEDEF 9814 . 9821) (punctuation 7061 . 7062) (punctuation 7060 . 7061) (punctuation 7059 . 7060) (symbol 7052 . 7059) (punctuation 7051 . 7052) (symbol 7048 . 7051) (TEMPLATE 7039 . 7047) (punctuation 7038 . 7039) (punctuation 7037 . 7038) (symbol 7028 . 7037) (punctuation 7027 . 7028) (punctuation 7026 . 7027) (symbol 7019 . 7026) (TYPENAME 7010 . 7018) (TYPEDEF 7002 . 7009) (punctuation 6984 . 6985) (punctuation 6983 . 6984) (punctuation 6982 . 6983) (symbol 6900 . 6904) (punctuation 6899 . 6900) (punctuation 6898 . 6899) (punctuation 6897 . 6898) (symbol 6893 . 6897) (punctuation 6891 . 6892) (symbol 6890 . 6891) (punctuation 6889 . 6890) (symbol 6882 . 6889) (punctuation 6881 . 6882) (punctuation 6880 . 6881) (symbol 6874 . 6880) (punctuation 6873 . 6874) (punctuation 6872 . 6873) (symbol 6867 . 6872) (TYPENAME 6858 . 6866) (punctuation 6844 . 6845) (symbol 6827 . 6844) (TYPENAME 6807 . 6815) (TYPEDEF 6799 . 6806) (punctuation 6708 . 6709) (punctuation 6707 . 6708) (punctuation 6706 . 6707) (symbol 6701 . 6703) (punctuation 6699 . 6700) (symbol 6690 . 6699) (punctuation 6688 . 6689) (symbol 6683 . 6688) (punctuation 6682 . 6683) (punctuation 6681 . 6682) (punctuation 6680 . 6681) (symbol 6678 . 6680) (punctuation 6677 . 6678) (symbol 6664 . 6677) (punctuation 6658 . 6659) (symbol 6656 . 6658) (punctuation 6655 . 6656) (punctuation 6654 . 6655) (symbol 6648 . 6654) (TYPENAME 6639 . 6647) (TYPEDEF 6631 . 6638) (punctuation 6611 . 6612) (punctuation 6610 . 6611) (punctuation 6609 . 6610) (symbol 6602 . 6609) (punctuation 6600 . 6601) (symbol 6596 . 6600) (punctuation 6595 . 6596) (symbol 6565 . 6595) (TYPENAME 6556 . 6564) (TYPEDEF 6548 . 6555) (punctuation 6321 . 6322) (punctuation 6320 . 6321) (punctuation 6319 . 6320) (symbol 6314 . 6316) (punctuation 6312 . 6313) (symbol 6303 . 6312) (punctuation 6301 . 6302) (symbol 6296 . 6301) (punctuation 6295 . 6296) (punctuation 6294 . 6295) (punctuation 6293 . 6294) (symbol 6291 . 6293) (punctuation 6290 . 6291) (symbol 6277 . 6290) (punctuation 6271 . 6272) (symbol 6269 . 6271) (punctuation 6268 . 6269) (punctuation 6267 . 6268) (symbol 6261 . 6267) (TYPENAME 6252 . 6260) (TYPEDEF 6244 . 6251) (punctuation 6224 . 6225) (punctuation 6223 . 6224) (punctuation 6222 . 6223) (symbol 6215 . 6222) (punctuation 6213 . 6214) (symbol 6209 . 6213) (punctuation 6208 . 6209) (symbol 6186 . 6208) (TYPENAME 6177 . 6185) (TYPEDEF 6169 . 6176) (punctuation 5842 . 5843) (symbol 5833 . 5837) (punctuation 5832 . 5833) (punctuation 5831 . 5832) (punctuation 5830 . 5831) (symbol 5823 . 5830) (punctuation 5821 . 5822) (symbol 5812 . 5821) (punctuation 5811 . 5812) (punctuation 5810 . 5811) (symbol 5806 . 5810) (TYPENAME 5797 . 5805) (punctuation 5796 . 5797) (symbol 5766 . 5796) (TYPENAME 5757 . 5765) (punctuation 5748 . 5749) (symbol 5744 . 5748) (punctuation 5743 . 5744) (punctuation 5742 . 5743) (punctuation 5741 . 5742) (symbol 5737 . 5741) (punctuation 5736 . 5737) (symbol 5720 . 5736) (punctuation 5719 . 5720) (punctuation 5718 . 5719) (symbol 5713 . 5718) (TYPENAME 5704 . 5712) (punctuation 5616 . 5617) (symbol 5612 . 5616) (punctuation 5611 . 5612) (punctuation 5610 . 5611) (symbol 5604 . 5610) (punctuation 5603 . 5604) (punctuation 5602 . 5603) (symbol 5597 . 5602) (TYPEDEF 5585 . 5592) (punctuation 5561 . 5562) (punctuation 5560 . 5561) (punctuation 5559 . 5560) (symbol 5552 . 5559) (punctuation 5551 . 5552) (symbol 5548 . 5551) (TEMPLATE 5539 . 5547) (punctuation 5538 . 5539) (punctuation 5537 . 5538) (symbol 5528 . 5537) (punctuation 5527 . 5528) (punctuation 5526 . 5527) (symbol 5522 . 5526) (TYPENAME 5513 . 5521) (TYPEDEF 5505 . 5512) (punctuation 5491 . 5492) (punctuation 5490 . 5491) (punctuation 5489 . 5490) (symbol 5480 . 5489) (punctuation 5479 . 5480) (punctuation 5478 . 5479) (symbol 5474 . 5478) (TYPENAME 5465 . 5473) (punctuation 5464 . 5465) (symbol 5447 . 5464) (TYPENAME 5438 . 5446) (TYPEDEF 5430 . 5437) (punctuation 4848 . 4849) (symbol 4839 . 4843) (punctuation 4838 . 4839) (punctuation 4837 . 4838) (punctuation 4836 . 4837) (symbol 4829 . 4836) (punctuation 4827 . 4828) (symbol 4818 . 4827) (punctuation 4817 . 4818) (punctuation 4816 . 4817) (symbol 4812 . 4816) (TYPENAME 4803 . 4811) (punctuation 4802 . 4803) (symbol 4780 . 4802) (TYPENAME 4771 . 4779) (punctuation 4762 . 4763) (symbol 4758 . 4762) (punctuation 4750 . 4751) (symbol 4746 . 4750) (punctuation 4745 . 4746) (punctuation 4744 . 4745) (symbol 4738 . 4744) (punctuation 4737 . 4738) (punctuation 4736 . 4737) (symbol 4731 . 4736) (TYPEDEF 4719 . 4726) (punctuation 4695 . 4696) (punctuation 4694 . 4695) (punctuation 4693 . 4694) (symbol 4686 . 4693) (punctuation 4685 . 4686) (symbol 4682 . 4685) (TEMPLATE 4673 . 4681) (punctuation 4672 . 4673) (punctuation 4671 . 4672) (symbol 4662 . 4671) (punctuation 4661 . 4662) (punctuation 4660 . 4661) (symbol 4656 . 4660) (TYPENAME 4647 . 4655) (TYPEDEF 4639 . 4646) (punctuation 4625 . 4626) (punctuation 4624 . 4625) (punctuation 4623 . 4624) (symbol 4614 . 4623) (punctuation 4613 . 4614) (punctuation 4612 . 4613) (symbol 4608 . 4612) (TYPENAME 4599 . 4607) (punctuation 4598 . 4599) (symbol 4581 . 4598) (TYPENAME 4572 . 4580) (TYPEDEF 4564 . 4571) (punctuation 4447 . 4448) (semantic-list 4261 . 4360) (punctuation 4259 . 4260) (punctuation 4165 . 4166) (punctuation 4071 . 4072) (punctuation 3011 . 3012) (punctuation 3009 . 3010) (symbol 3005 . 3009) (punctuation 3004 . 3005) (punctuation 3003 . 3004) (punctuation 3002 . 3003) (symbol 3001 . 3002) (CONST 2995 . 3000) (punctuation 2994 . 2995) (symbol 2969 . 2994) (TYPENAME 2960 . 2968) (punctuation 2959 . 2960) (symbol 2951 . 2959) (punctuation 2950 . 2951) (symbol 2936 . 2950) (INLINE 2928 . 2934) (punctuation 2925 . 2926) (symbol 2924 . 2925) (CLASS 2918 . 2923) (punctuation 2917 . 2918) (TEMPLATE 2908 . 2916) (punctuation 2844 . 2845) (punctuation 2843 . 2844) (punctuation 2842 . 2843) (punctuation 2836 . 2837) (punctuation 2827 . 2828) (symbol 2823 . 2827) (punctuation 2822 . 2823) (punctuation 2821 . 2822) (punctuation 2820 . 2821) (symbol 2819 . 2820) (punctuation 2818 . 2819) (symbol 2793 . 2818) (TYPENAME 2784 . 2792) (punctuation 2783 . 2784) (symbol 2775 . 2783) (punctuation 2765 . 2766) (symbol 2751 . 2765) (punctuation 2743 . 2744) (symbol 2736 . 2743) (punctuation 2727 . 2728) (symbol 2722 . 2727) (punctuation 2721 . 2722) (punctuation 2720 . 2721) (punctuation 2719 . 2720) (symbol 2712 . 2719) (punctuation 2711 . 2712) (symbol 2694 . 2711) (punctuation 2693 . 2694) (symbol 2691 . 2693) (punctuation 2690 . 2691) (punctuation 2689 . 2690) (symbol 2683 . 2689) (TYPENAME 2669 . 2677) (TYPEDEF 2661 . 2668) (punctuation 2084 . 2085) (punctuation 2078 . 2079) (symbol 2074 . 2078) (punctuation 2073 . 2074) (punctuation 2072 . 2073) (punctuation 2071 . 2072) (symbol 2070 . 2071) (CONST 2064 . 2069) (punctuation 2063 . 2064) (symbol 2038 . 2063) (TYPENAME 2029 . 2037) (punctuation 2028 . 2029) (symbol 2020 . 2028) (punctuation 2013 . 2014) (symbol 1999 . 2013) (TYPEDEF 1987 . 1994) (punctuation 1752 . 1753) (punctuation 1750 . 1751) (symbol 1746 . 1750) (punctuation 1745 . 1746) (punctuation 1744 . 1745) (punctuation 1743 . 1744) (symbol 1742 . 1743) (CONST 1736 . 1741) (punctuation 1735 . 1736) (symbol 1710 . 1735) (TYPENAME 1701 . 1709) (punctuation 1700 . 1701) (symbol 1692 . 1700) (punctuation 1691 . 1692) (symbol 1677 . 1691) (INLINE 1669 . 1675) (punctuation 1666 . 1667) (symbol 1665 . 1666) (CLASS 1659 . 1664) (punctuation 1658 . 1659) (TEMPLATE 1649 . 1657) (punctuation 950 . 951) (punctuation 949 . 950) (punctuation 948 . 949) (symbol 941 . 945) (punctuation 940 . 941) (punctuation 939 . 940) (punctuation 938 . 939) (symbol 937 . 938) (punctuation 936 . 937) (symbol 927 . 936) (punctuation 926 . 927) (punctuation 925 . 926) (symbol 920 . 925) (TYPENAME 911 . 919) (punctuation 905 . 906) (symbol 892 . 905) (punctuation 891 . 892) (punctuation 890 . 891) (symbol 885 . 890) (TYPENAME 876 . 884) (TYPEDEF 868 . 875))
    :lexical-table 
        '(("BOOST_LAMBDA_LAMBDA_FUNCTOR_BASE_FIRST_PART" (spp-arg-list ("ARITY") 10230 . 10237) . 
              ((TEMPLATE "template" 10252 . 10260) (punctuation "<" 10260 . 10261) (CLASS "class" 10261 . 10266) (symbol "Act" 10267 . 10270) (punctuation "," 10270 . 10271) (CLASS "class" 10272 . 10277) (symbol "Args" 10278 . 10282) (punctuation ">" 10282 . 10283) (CLASS "class" 10325 . 10330) (symbol "lambda_functor_base" 10331 . 10350) (punctuation "<" 10350 . 10351) (symbol "action" 10351 . 10357) (punctuation "<" 10357 . 10358) (symbol "ARITY" 10358 . 10363) (punctuation "," 10363 . 10364) (symbol "Act" 10365 . 10368) (punctuation ">" 10368 . 10369) (punctuation "," 10369 . 10370) (symbol "Args" 10371 . 10375) (punctuation ">" 10375 . 10376) (semantic-list "{                                                                      \\
public:                                                                \\
  Args args;                                                           \\
                                                                       \\
  explicit lambda_functor_base(const Args& a) : args(a) {}             \\
                                                                       \\
  template<class SigArgs> struct sig {                                 \\
    typedef typename                                                   \\
    detail::deduce_non_ref_argument_types<Args, SigArgs>::type rets_t; \\
  public:                                                              \\
    typedef typename                                                   \\
      return_type_N_prot<Act, rets_t>::type type;                      \\
  };                                                                   \\
                                                                       \\
                                                                       \\
  template<class RET, CALL_TEMPLATE_ARGS>                              \\
  RET call(CALL_FORMAL_ARGS) const {                                   \\
    using boost::tuples::get;                                          \\
    using detail::constify_rvals;                                      \\
    using detail::r_select;                                            \\
    using detail::element_or_null;                                     \\
    using detail::deduce_argument_types;                                " 10398 . 12003)))
          ("BOOST_LAMBDA_LAMBDA_FUNCTOR_BASE_HPP")
          )

    )
   (semanticdb-table "lambda_functors.hpp"
    :major-mode 'c++-mode
    :tags 
        '( ("BOOST_LAMBDA_LAMBDA_FUNCTORS_HPP" variable (:constant-flag t) nil [462 494])
            ("boost" type
               (:members 
                  ( ("lambda" type
                       (:members 
                          ( ("detail" type
                               (:members 
                                  ( ("unnamed" type
                                       (:members 
                                          ( ("constant_null_type" variable
                                               (:typemodifiers ("static")
                                                :constant-flag t
                                                :type ("null_type" type (:type "class") nil nil))
                                                (reparse-symbol namespacesubparts) [770 826]))                                          
                                        :type "namespace")
                                        (reparse-symbol namespacesubparts) [755 829]))                                  
                                :type "namespace")
                                (reparse-symbol namespacesubparts) [736 842])
                            ("unused" type (:type "class") (reparse-symbol namespacesubparts) [854 870])
                            ("cnull_type" variable (:constant-flag t) (reparse-symbol namespacesubparts) [880 890])
                            ("detail" type
                               (:members 
                                  ( ("get_element_or_null_type" type
                                       (:template 
                                          ( ("int" type nil nil nil)
                                            ("Tuple" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :members 
                                          ( ("type" type
                                               (:typedef ("detail::tuple_element_as_reference::type" type (:type "class") nil nil)
                                                :superclasses "detail::tuple_element_as_reference::type"
                                                :type "typedef")
                                                (reparse-symbol classsubparts) [1234 1314]))                                          )
                                        (reparse-symbol namespacesubparts) [1167 1319])
                                    ("get_element_or_null_type" type
                                       (:template 
                                          ( ("int" type nil nil nil))                                          
                                        :type "struct"
                                        :members 
                                          ( ("type" type
                                               (:typedef ("null_type" type (:type "class") nil nil)
                                                :superclasses "null_type"
                                                :type "typedef")
                                                (reparse-symbol classsubparts) [1390 1413]))                                          
                                        :template-specifier 
                                          ( ("N" type nil nil nil)
                                            ("null_type" type nil nil nil))                                          )
                                        (reparse-symbol namespacesubparts) [1322 1418]))                                  
                                :type "namespace")
                                (reparse-symbol namespacesubparts) [1146 1420])
                            ("placeholder" type
                               (:template 
                                  ( ("int" type nil nil nil))                                  
                                :type "struct"
                                :prototype t)
                                (reparse-symbol namespacesubparts) [1422 1458])
                            ("placeholder" type
                               (:type "struct"
                                :members 
                                  ( ("sig" type
                                       (:template 
                                          ( ("SigArgs" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :members 
                                          ( ("type" type
                                               (:typedef ("detail::get_element_or_null_type::type" type (:type "class") nil nil)
                                                :superclasses "detail::get_element_or_null_type::type"
                                                :type "typedef")
                                                (reparse-symbol classsubparts) [1543 1616]))                                          )
                                        (reparse-symbol classsubparts) [1502 1621])
                                    ("call" function
                                       (:template 
                                          ( ("RET" type (:type "class") nil nil)
                                            ("CALL_TEMPLATE_ARGS" type nil nil nil))                                          
                                        :type ("RET" type (:type "class") nil nil)
                                        :arguments 
                                          ( ("" variable (:type ("CALL_FORMAL_ARGS" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1677 1694]))                                          )
                                        (reparse-symbol classsubparts) [1625 1851]))                                  
                                :template-specifier 
                                  ( ("FIRST" type nil nil nil))                                  )
                                (reparse-symbol namespacesubparts) [1460 1854])
                            ("placeholder" type
                               (:type "struct"
                                :members 
                                  ( ("sig" type
                                       (:template 
                                          ( ("SigArgs" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :members 
                                          ( ("type" type
                                               (:typedef ("detail::get_element_or_null_type::type" type (:type "class") nil nil)
                                                :superclasses "detail::get_element_or_null_type::type"
                                                :type "typedef")
                                                (reparse-symbol classsubparts) [1940 2013]))                                          )
                                        (reparse-symbol classsubparts) [1899 2018])
                                    ("call" function
                                       (:template 
                                          ( ("RET" type (:type "class") nil nil)
                                            ("CALL_TEMPLATE_ARGS" type nil nil nil))                                          
                                        :type ("RET" type (:type "class") nil nil)
                                        :arguments 
                                          ( ("" variable (:type ("CALL_FORMAL_ARGS" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2074 2091]))                                          )
                                        (reparse-symbol classsubparts) [2022 2126]))                                  
                                :template-specifier 
                                  ( ("SECOND" type nil nil nil))                                  )
                                (reparse-symbol namespacesubparts) [1856 2129])
                            ("placeholder" type
                               (:type "struct"
                                :members 
                                  ( ("sig" type
                                       (:template 
                                          ( ("SigArgs" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :members 
                                          ( ("type" type
                                               (:typedef ("detail::get_element_or_null_type::type" type (:type "class") nil nil)
                                                :superclasses "detail::get_element_or_null_type::type"
                                                :type "typedef")
                                                (reparse-symbol classsubparts) [2214 2287]))                                          )
                                        (reparse-symbol classsubparts) [2173 2292])
                                    ("call" function
                                       (:template 
                                          ( ("RET" type (:type "class") nil nil)
                                            ("CALL_TEMPLATE_ARGS" type nil nil nil))                                          
                                        :type ("RET" type (:type "class") nil nil)
                                        :arguments 
                                          ( ("" variable (:type ("CALL_FORMAL_ARGS" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2348 2365]))                                          )
                                        (reparse-symbol classsubparts) [2296 2400]))                                  
                                :template-specifier 
                                  ( ("THIRD" type nil nil nil))                                  )
                                (reparse-symbol namespacesubparts) [2131 2403])
                            ("placeholder" type
                               (:type "struct"
                                :members 
                                  ( ("sig" type
                                       (:template 
                                          ( ("SigArgs" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :members 
                                          ( ("type" type
                                               (:typedef ("detail::get_element_or_null_type::type" type (:type "class") nil nil)
                                                :superclasses "detail::get_element_or_null_type::type"
                                                :type "typedef")
                                                (reparse-symbol classsubparts) [2492 2565]))                                          )
                                        (reparse-symbol classsubparts) [2451 2570])
                                    ("call" function
                                       (:template 
                                          ( ("RET" type (:type "class") nil nil)
                                            ("CALL_TEMPLATE_ARGS" type nil nil nil))                                          
                                        :type ("RET" type (:type "class") nil nil)
                                        :arguments 
                                          ( ("" variable (:type ("CALL_FORMAL_ARGS" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2626 2643]))                                          )
                                        (reparse-symbol classsubparts) [2574 2680]))                                  
                                :template-specifier 
                                  ( ("EXCEPTION" type nil nil nil))                                  )
                                (reparse-symbol namespacesubparts) [2405 2683])
                            ("placeholder1_type" type
                               (:typedef ("lambda_functor" type
                                     (:template-specifier 
                                        ( ("placeholder" type nil nil nil))                                        
                                      :type "class")
                                      nil nil)
                                :superclasses "lambda_functor"
                                :type "typedef")
                                (reparse-symbol namespacesubparts) [2688 2757])
                            ("placeholder2_type" type
                               (:typedef ("lambda_functor" type
                                     (:template-specifier 
                                        ( ("placeholder" type nil nil nil))                                        
                                      :type "class")
                                      nil nil)
                                :superclasses "lambda_functor"
                                :type "typedef")
                                (reparse-symbol namespacesubparts) [2758 2827])
                            ("placeholder3_type" type
                               (:typedef ("lambda_functor" type
                                     (:template-specifier 
                                        ( ("placeholder" type nil nil nil))                                        
                                      :type "class")
                                      nil nil)
                                :superclasses "lambda_functor"
                                :type "typedef")
                                (reparse-symbol namespacesubparts) [2828 2897])
                            ("lambda_functor" type
                               (:template 
                                  ( ("T" type (:type "class") nil nil))                                  
                                :type "class"
                                :members 
                                  ( ("BOOST_STATIC_CONSTANT" function
                                       (:prototype-flag t
                                        :arguments 
                                          ( ("" variable (:type "int") (reparse-symbol arg-sub-list) [3316 3320])
                                            ("" variable (:type ("arity_bits" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3321 3333])
                                            ("" variable (:type ("get_arity" type
                                                 (:template-specifier 
                                                    ( ("T" type nil nil nil))                                                    
                                                  :type "class")
                                                  nil nil)) (reparse-symbol arg-sub-list) [3334 3347])
                                            ("" variable (:type ("value" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3348 3354]))                                          
                                        :type "int")
                                        (reparse-symbol classsubparts) [3294 3355])
                                    ("public" label nil (reparse-symbol classsubparts) [3358 3365])
                                    ("inherited" type
                                       (:typedef ("T" type (:type "class") nil nil)
                                        :superclasses "T"
                                        :type "typedef")
                                        (reparse-symbol classsubparts) [3368 3388])
                                    ("lambda_functor" function
                                       (:constructor-flag t
                                        :type ("lambda_functor" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [3392 3411])
                                    ("lambda_functor" function
                                       (:constructor-flag t
                                        :arguments 
                                          ( ("l" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("lambda_functor" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [3429 3453]))                                          
                                        :type ("lambda_functor" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [3414 3471])
                                    ("lambda_functor" function
                                       (:constructor-flag t
                                        :arguments 
                                          ( ("t" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("T" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [3490 3501]))                                          
                                        :type ("lambda_functor" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [3475 3519])
                                    ("sig" type
                                       (:template 
                                          ( ("SigArgs" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :members 
                                          ( ("type" variable (:type ("type" type (:type "class") nil nil)) (reparse-symbol classsubparts) [3643 3653]))                                          )
                                        (reparse-symbol classsubparts) [3523 3658])
                                    ("nullary_return_type" variable (:type ("type" type (:type "class") nil nil)) (reparse-symbol classsubparts) [3895 3926])
                                    ("()" function
                                       (:operator-flag t
                                        :type ("nullary_return_type" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [3930 4106])
                                    ("()" function
                                       (:operator-flag t
                                        :arguments 
                                          ( ("a" variable
                                               (:reference 1
                                                :type ("A" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [4194 4199]))                                          
                                        :type ("type" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [4176 4358])
                                    ("()" function
                                       (:operator-flag t
                                        :arguments 
                                          ( ("a" variable
                                               (:reference 1
                                                :type ("A" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [4459 4464])
                                            ("b" variable
                                               (:reference 1
                                                :type ("B" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [4465 4470]))                                          
                                        :type ("type" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [4441 4623])
                                    ("()" function
                                       (:operator-flag t
                                        :arguments 
                                          ( ("a" variable
                                               (:reference 1
                                                :type ("A" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [4737 4742])
                                            ("b" variable
                                               (:reference 1
                                                :type ("B" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [4743 4748])
                                            ("c" variable
                                               (:reference 1
                                                :type ("C" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [4749 4754]))                                          
                                        :type ("type" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [4719 4902])
                                    ("internal_call" function
                                       (:arguments 
                                          ( ("" variable (:type ("CALL_FORMAL_ARGS" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5055 5072]))                                          
                                        :type ("type" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [5034 5230])
                                    ("=" function
                                       (:operator-flag t
                                        :arguments 
                                          ( ("a" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("A" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [5474 5485]))                                          
                                        :type "int")
                                        (reparse-symbol classsubparts) [5464 5802])
                                    ("[]" function
                                       (:operator-flag t
                                        :arguments 
                                          ( ("a" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("A" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [6057 6068]))                                          
                                        :type "int")
                                        (reparse-symbol classsubparts) [6046 6396]))                                  
                                :superclasses 
                                  ( ("T" type
                                       (:protection "public"
                                        :type "class")
                                        nil nil))                                  )
                                (reparse-symbol namespacesubparts) [3239 6400]))                          
                        :type "namespace")
                        (reparse-symbol namespacesubparts) [515 6404]))                  
                :type "namespace")
                nil [496 6426]))          
    :file "lambda_functors.hpp"
    :pointmax 6456
    :fsize 6455
    :lastmodtime '(17765 48449)
    :unmatched-syntax '((punctuation 6041 . 6042) (punctuation 6039 . 6040) (punctuation 6037 . 6038) (symbol 6033 . 6037) (punctuation 6032 . 6033) (punctuation 6031 . 6032) (punctuation 6030 . 6031) (symbol 6029 . 6030) (CONST 6023 . 6028) (punctuation 6022 . 6023) (symbol 6002 . 6021) (TYPENAME 5993 . 6001) (punctuation 5966 . 5967) (symbol 5952 . 5966) (punctuation 5951 . 5952) (symbol 5946 . 5951) (punctuation 5945 . 5946) (punctuation 5944 . 5945) (symbol 5939 . 5944) (punctuation 5918 . 5919) (punctuation 5917 . 5918) (symbol 5901 . 5917) (punctuation 5900 . 5901) (symbol 5888 . 5900) (punctuation 5867 . 5868) (symbol 5848 . 5867) (punctuation 5847 . 5848) (symbol 5833 . 5847) (CONST 5827 . 5832) (punctuation 5822 . 5823) (symbol 5821 . 5822) (CLASS 5815 . 5820) (punctuation 5814 . 5815) (TEMPLATE 5806 . 5814) (punctuation 5460 . 5461) (punctuation 5458 . 5459) (punctuation 5456 . 5457) (symbol 5452 . 5456) (punctuation 5451 . 5452) (punctuation 5450 . 5451) (punctuation 5449 . 5450) (symbol 5448 . 5449) (CONST 5442 . 5447) (punctuation 5441 . 5442) (symbol 5421 . 5440) (TYPENAME 5412 . 5420) (punctuation 5392 . 5393) (symbol 5378 . 5392) (punctuation 5377 . 5378) (symbol 5372 . 5377) (punctuation 5371 . 5372) (punctuation 5370 . 5371) (symbol 5365 . 5370) (punctuation 5345 . 5346) (punctuation 5344 . 5345) (symbol 5327 . 5344) (punctuation 5326 . 5327) (symbol 5314 . 5326) (punctuation 5294 . 5295) (symbol 5275 . 5294) (punctuation 5274 . 5275) (symbol 5260 . 5274) (CONST 5254 . 5259) (punctuation 5250 . 5251) (symbol 5249 . 5250) (CLASS 5243 . 5248) (punctuation 5242 . 5243) (TEMPLATE 5234 . 5242) (punctuation 5033 . 5034) (punctuation 5032 . 5033) (punctuation 5031 . 5032) (punctuation 5029 . 5030) (symbol 5009 . 5029) (punctuation 5008 . 5009) (symbol 5003 . 5008) (punctuation 5002 . 5003) (symbol 4999 . 5002) (TEMPLATE 4990 . 4998) (punctuation 4989 . 4990) (punctuation 4988 . 4989) (symbol 4979 . 4988) (TYPENAME 4970 . 4978) (punctuation 4966 . 4967) (symbol 4948 . 4966) (punctuation 4947 . 4948) (TEMPLATE 4939 . 4947) (punctuation 4718 . 4719) (punctuation 4717 . 4718) (punctuation 4716 . 4717) (punctuation 4714 . 4715) (punctuation 4713 . 4714) (symbol 4712 . 4713) (punctuation 4710 . 4711) (punctuation 4709 . 4710) (symbol 4708 . 4709) (punctuation 4706 . 4707) (punctuation 4705 . 4706) (symbol 4704 . 4705) (punctuation 4703 . 4704) (symbol 4698 . 4703) (punctuation 4697 . 4698) (symbol 4694 . 4697) (TEMPLATE 4685 . 4693) (punctuation 4684 . 4685) (punctuation 4683 . 4684) (symbol 4674 . 4683) (TYPENAME 4665 . 4673) (punctuation 4661 . 4662) (symbol 4660 . 4661) (CLASS 4654 . 4659) (punctuation 4652 . 4653) (symbol 4651 . 4652) (CLASS 4645 . 4650) (punctuation 4643 . 4644) (symbol 4642 . 4643) (CLASS 4636 . 4641) (punctuation 4635 . 4636) (TEMPLATE 4627 . 4635) (punctuation 4440 . 4441) (punctuation 4439 . 4440) (punctuation 4438 . 4439) (punctuation 4436 . 4437) (punctuation 4435 . 4436) (symbol 4434 . 4435) (punctuation 4432 . 4433) (punctuation 4431 . 4432) (symbol 4430 . 4431) (punctuation 4429 . 4430) (symbol 4424 . 4429) (punctuation 4423 . 4424) (symbol 4420 . 4423) (TEMPLATE 4411 . 4419) (punctuation 4410 . 4411) (punctuation 4409 . 4410) (symbol 4400 . 4409) (TYPENAME 4391 . 4399) (punctuation 4387 . 4388) (symbol 4386 . 4387) (CLASS 4380 . 4385) (punctuation 4378 . 4379) (symbol 4377 . 4378) (CLASS 4371 . 4376) (punctuation 4370 . 4371) (TEMPLATE 4362 . 4370) (punctuation 4175 . 4176) (punctuation 4174 . 4175) (punctuation 4173 . 4174) (punctuation 4171 . 4172) (punctuation 4170 . 4171) (symbol 4169 . 4170) (punctuation 4168 . 4169) (symbol 4163 . 4168) (punctuation 4162 . 4163) (symbol 4159 . 4162) (TEMPLATE 4150 . 4158) (punctuation 4149 . 4150) (punctuation 4148 . 4149) (symbol 4139 . 4148) (TYPENAME 4130 . 4138) (punctuation 4126 . 4127) (symbol 4125 . 4126) (CLASS 4119 . 4124) (punctuation 4118 . 4119) (TEMPLATE 4110 . 4118) (punctuation 3894 . 3895) (punctuation 3893 . 3894) (punctuation 3892 . 3893) (symbol 3883 . 3892) (punctuation 3882 . 3883) (symbol 3879 . 3882) (TEMPLATE 3870 . 3878) (punctuation 3869 . 3870) (punctuation 3868 . 3869) (symbol 3859 . 3868) (TYPENAME 3845 . 3853) (TYPEDEF 3837 . 3844) (punctuation 3642 . 3643) (punctuation 3641 . 3642) (punctuation 3640 . 3641) (symbol 3631 . 3640) (punctuation 3630 . 3631) (punctuation 3629 . 3630) (symbol 3622 . 3629) (TYPENAME 3613 . 3621) (punctuation 3612 . 3613) (symbol 3609 . 3612) (TEMPLATE 3593 . 3601) (punctuation 3592 . 3593) (punctuation 3591 . 3592) (symbol 3582 . 3591) (TYPENAME 3573 . 3581) (TYPEDEF 3565 . 3572) (punctuation 3347 . 3348) (punctuation 3346 . 3347) (punctuation 3332 . 3333))
    :lexical-table 
        '(("cnull_type" (spp-arg-list nil 890 . 892) . 
              ((symbol "detail" 893 . 899) (punctuation ":" 899 . 900) (punctuation ":" 900 . 901) (symbol "constant_null_type" 901 . 919)))
          ("BOOST_LAMBDA_LAMBDA_FUNCTORS_HPP")
          )

    )
   (semanticdb-table "ret.hpp"
    :major-mode 'c++-mode
    :tags 
        '( ("BOOST_LAMBDA_RET_HPP" variable (:constant-flag t) nil [387 407])
            ("boost" type
               (:members 
                  ( ("lambda" type
                       (:members 
                          ( ("ret" function
                               (:template 
                                  ( ("RET" type (:type "class") nil nil)
                                    ("Arg" type (:type "class") nil nil))                                  
                                :type ("lambda_functor" type
                                     (:template-specifier 
                                        ( ("lambda_functor_base" type nil nil nil))                                        
                                      :type "class")
                                      nil nil)
                                :arguments 
                                  ( ("a1" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("lambda_functor" type
                                             (:template-specifier 
                                                ( ("Arg" type nil nil nil))                                                
                                              :type "class")
                                              nil nil))
                                        (reparse-symbol arg-sub-list) [1251 1281]))                                  
                                :constant-flag t
                                :typemodifiers ("inline"))
                                (reparse-symbol namespacesubparts) [1085 1442])
                            ("protect" function
                               (:template 
                                  ( ("T" type (:type "class") nil nil))                                  
                                :type ("T" type (:type "class") nil nil)
                                :arguments 
                                  ( ("t" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("T" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [1576 1587]))                                  
                                :constant-flag t
                                :typemodifiers ("inline"))
                                (reparse-symbol namespacesubparts) [1533 1601])
                            ("protect" function
                               (:template 
                                  ( ("Arg" type (:type "class") nil nil))                                  
                                :type ("lambda_functor" type
                                     (:template-specifier 
                                        ( ("lambda_functor_base" type nil nil nil))                                        
                                      :type "class")
                                      nil nil)
                                :arguments 
                                  ( ("a1" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("lambda_functor" type
                                             (:template-specifier 
                                                ( ("Arg" type nil nil nil))                                                
                                              :type "class")
                                              nil nil))
                                        (reparse-symbol arg-sub-list) [1744 1774]))                                  
                                :constant-flag t
                                :typemodifiers ("inline"))
                                (reparse-symbol namespacesubparts) [1603 1924])
                            ("non_lambda_functor" type
                               (:template 
                                  ( ("LambdaFunctor" type (:type "class") nil nil))                                  
                                :type "class"
                                :members 
                                  ( ("lf" variable (:type ("LambdaFunctor" type (:type "class") nil nil)) (reparse-symbol classsubparts) [2451 2468])
                                    ("public" label nil (reparse-symbol classsubparts) [2469 2476])
                                    ("sig" type
                                       (:template 
                                          ( ("SigArgs" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :members 
                                          ( ("type" variable (:type ("type" type (:type "class") nil nil)) (reparse-symbol classsubparts) [2748 2758]))                                          )
                                        (reparse-symbol classsubparts) [2603 2763])
                                    ("non_lambda_functor" function
                                       (:constructor-flag t
                                        :arguments 
                                          ( ("a" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("LambdaFunctor" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [2795 2818]))                                          
                                        :type ("explicit" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [2767 2829])
                                    ("()" function
                                       (:operator-flag t
                                        :typemodifiers ("typename")
                                        :type ("LambdaFunctor::nullary_return_type" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [2833 3052])
                                    ("()" function
                                       (:operator-flag t
                                        :arguments 
                                          ( ("a" variable
                                               (:reference 1
                                                :type ("A" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [3147 3152]))                                          
                                        :type ("type" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [3128 3298])
                                    ("()" function
                                       (:operator-flag t
                                        :arguments 
                                          ( ("a" variable
                                               (:reference 1
                                                :type ("A" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [3406 3411])
                                            ("b" variable
                                               (:reference 1
                                                :type ("B" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [3412 3417]))                                          
                                        :type ("type" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [3387 3556])
                                    ("()" function
                                       (:operator-flag t
                                        :arguments 
                                          ( ("a" variable
                                               (:reference 1
                                                :type ("A" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [3677 3682])
                                            ("b" variable
                                               (:reference 1
                                                :type ("B" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [3683 3688])
                                            ("c" variable
                                               (:reference 1
                                                :type ("C" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [3689 3694]))                                          
                                        :type ("type" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [3658 3825]))                                  )
                                (reparse-symbol namespacesubparts) [2391 3828])
                            ("unlambda" function
                               (:template 
                                  ( ("Arg" type (:type "class") nil nil))                                  
                                :type ("Arg" type (:type "class") nil nil)
                                :arguments 
                                  ( ("a" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("Arg" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [3878 3891]))                                  
                                :constant-flag t
                                :typemodifiers ("inline"))
                                (reparse-symbol namespacesubparts) [3830 3905])
                            ("unlambda" function
                               (:template 
                                  ( ("Arg" type (:type "class") nil nil))                                  
                                :type ("non_lambda_functor" type
                                     (:template-specifier 
                                        ( ("lambda_functor" type nil nil nil))                                        
                                      :type "class")
                                      nil nil)
                                :arguments 
                                  ( ("a" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("lambda_functor" type
                                             (:template-specifier 
                                                ( ("Arg" type nil nil nil))                                                
                                              :type "class")
                                              nil nil))
                                        (reparse-symbol arg-sub-list) [3992 4021]))                                  
                                :constant-flag t
                                :typemodifiers ("inline"))
                                (reparse-symbol namespacesubparts) [3907 4079])
                            ("const_incorrect_lambda_functor" type
                               (:template 
                                  ( ("LambdaFunctor" type (:type "class") nil nil))                                  
                                :type "struct"
                                :members 
                                  ( ("lf" variable (:type ("LambdaFunctor" type (:type "class") nil nil)) (reparse-symbol classsubparts) [4820 4837])
                                    ("public" label nil (reparse-symbol classsubparts) [4838 4845])
                                    ("const_incorrect_lambda_functor" function
                                       (:constructor-flag t
                                        :arguments 
                                          ( ("a" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("LambdaFunctor" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [4889 4912]))                                          
                                        :type ("explicit" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [4849 4923])
                                    ("sig" type
                                       (:template 
                                          ( ("SigArgs" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :members 
                                          ( ("type" variable (:type ("type" type (:type "class") nil nil)) (reparse-symbol classsubparts) [5070 5080]))                                          )
                                        (reparse-symbol classsubparts) [4927 5085])
                                    ("()" function
                                       (:operator-flag t
                                        :arguments 
                                          ( ("a" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("A" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [5271 5282]))                                          
                                        :type ("type" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [5253 5455])
                                    ("()" function
                                       (:operator-flag t
                                        :arguments 
                                          ( ("a" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("A" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [5574 5585])
                                            ("b" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("B" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [5586 5597]))                                          
                                        :type ("type" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [5556 5779])
                                    ("()" function
                                       (:operator-flag t
                                        :arguments 
                                          ( ("a" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("A" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [5911 5922])
                                            ("b" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("B" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [5923 5934])
                                            ("c" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("C" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [5935 5946]))                                          
                                        :type ("type" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [5893 6136]))                                  )
                                (reparse-symbol namespacesubparts) [4747 6139])
                            ("const_parameter_lambda_functor" type
                               (:template 
                                  ( ("LambdaFunctor" type (:type "class") nil nil))                                  
                                :type "struct"
                                :members 
                                  ( ("lf" variable (:type ("LambdaFunctor" type (:type "class") nil nil)) (reparse-symbol classsubparts) [6586 6603])
                                    ("public" label nil (reparse-symbol classsubparts) [6604 6611])
                                    ("const_parameter_lambda_functor" function
                                       (:constructor-flag t
                                        :arguments 
                                          ( ("a" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("LambdaFunctor" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [6655 6678]))                                          
                                        :type ("explicit" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [6615 6689])
                                    ("sig" type
                                       (:template 
                                          ( ("SigArgs" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :members 
                                          ( ("type" variable (:type ("type" type (:type "class") nil nil)) (reparse-symbol classsubparts) [6836 6846]))                                          )
                                        (reparse-symbol classsubparts) [6693 6851])
                                    ("()" function
                                       (:operator-flag t
                                        :arguments 
                                          ( ("a" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("A" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [7038 7049]))                                          
                                        :type ("type" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [7020 7212])
                                    ("()" function
                                       (:operator-flag t
                                        :arguments 
                                          ( ("a" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("A" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [7343 7354])
                                            ("b" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("B" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [7355 7366]))                                          
                                        :type ("type" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [7325 7528])
                                    ("()" function
                                       (:operator-flag t
                                        :arguments 
                                          ( ("a" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("A" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [7678 7689])
                                            ("b" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("B" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [7690 7701])
                                            ("c" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("C" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [7702 7713]))                                          
                                        :type ("type" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [7660 7873]))                                  )
                                (reparse-symbol namespacesubparts) [6513 7876])
                            ("break_const" function
                               (:template 
                                  ( ("Arg" type (:type "class") nil nil))                                  
                                :type ("const_incorrect_lambda_functor" type
                                     (:template-specifier 
                                        ( ("lambda_functor" type nil nil nil))                                        
                                      :type "class")
                                      nil nil)
                                :arguments 
                                  ( ("lf" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("lambda_functor" type
                                             (:template-specifier 
                                                ( ("Arg" type nil nil nil))                                                
                                              :type "class")
                                              nil nil))
                                        (reparse-symbol arg-sub-list) [7977 8007]))                                  
                                :constant-flag t
                                :typemodifiers ("inline"))
                                (reparse-symbol namespacesubparts) [7878 8078])
                            ("const_parameters" function
                               (:template 
                                  ( ("Arg" type (:type "class") nil nil))                                  
                                :type ("const_parameter_lambda_functor" type
                                     (:template-specifier 
                                        ( ("lambda_functor" type nil nil nil))                                        
                                      :type "class")
                                      nil nil)
                                :arguments 
                                  ( ("lf" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("lambda_functor" type
                                             (:template-specifier 
                                                ( ("Arg" type nil nil nil))                                                
                                              :type "class")
                                              nil nil))
                                        (reparse-symbol arg-sub-list) [8185 8215]))                                  
                                :constant-flag t
                                :typemodifiers ("inline"))
                                (reparse-symbol namespacesubparts) [8081 8286])
                            ("voidifier_action" type
                               (:members 
                                  ( ("apply" function
                                       (:template 
                                          ( ("Ret" type (:type "class") nil nil)
                                            ("A" type (:type "class") nil nil))                                          
                                        :type "void"
                                        :arguments 
                                          ( ("" variable
                                               (:reference 1
                                                :type ("A" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [8775 8778]))                                          
                                        :typemodifiers ("static"))
                                        (reparse-symbol classsubparts) [8728 8781]))                                  
                                :type "struct")
                                (reparse-symbol namespacesubparts) [8700 8784])
                            ("return_type_N" type
                               (:template 
                                  ( ("Args" type (:type "class") nil nil))                                  
                                :type "struct"
                                :members 
                                  ( ("type" type
                                       (:typedef ("void")
                                        :superclasses "void"
                                        :type "typedef")
                                        (reparse-symbol classsubparts) [8856 8874]))                                  
                                :template-specifier 
                                  ( ("voidifier_action" type nil nil nil)
                                    ("Args" type nil nil nil))                                  )
                                (reparse-symbol namespacesubparts) [8786 8877])
                            ("make_void" function
                               (:template 
                                  ( ("Arg1" type (:type "class") nil nil))                                  
                                :type ("lambda_functor" type
                                     (:template-specifier 
                                        ( ("lambda_functor_base" type nil nil nil))                                        
                                      :type "class")
                                      nil nil)
                                :arguments 
                                  ( ("a1" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("lambda_functor" type
                                             (:template-specifier 
                                                ( ("Arg1" type nil nil nil))                                                
                                              :type "class")
                                              nil nil))
                                        (reparse-symbol arg-sub-list) [9037 9068]))                                  
                                :constant-flag t
                                :typemodifiers ("inline"))
                                (reparse-symbol namespacesubparts) [8879 9222])
                            ("make_void" function
                               (:template 
                                  ( ("Arg1" type (:type "class") nil nil))                                  
                                :type ("lambda_functor" type
                                     (:template-specifier 
                                        ( ("lambda_functor_base" type nil nil nil))                                        
                                      :type "class")
                                      nil nil)
                                :arguments 
                                  ( ("a1" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("Arg1" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [9439 9454]))                                  
                                :constant-flag t
                                :typemodifiers ("inline"))
                                (reparse-symbol namespacesubparts) [9322 9524])
                            ("result_type_to_sig" type
                               (:template 
                                  ( ("T" type (:type "class") nil nil))                                  
                                :type "struct"
                                :members 
                                  ( ("sig" type
                                       (:template 
                                          ( ("Args" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :members 
                                          ( ("type" type
                                               (:typedef ("T::result_type" type (:type "class") nil nil)
                                                :superclasses "T::result_type"
                                                :type "typedef")
                                                (reparse-symbol classsubparts) [10153 10190]))                                          )
                                        (reparse-symbol classsubparts) [10119 10193])
                                    ("result_type_to_sig" function
                                       (:constructor-flag t
                                        :arguments 
                                          ( ("t" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("T" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [10215 10226]))                                          
                                        :type ("result_type_to_sig" type (:type "struct") nil nil))
                                        (reparse-symbol classsubparts) [10196 10236]))                                  
                                :superclasses 
                                  ( ("T" type
                                       (:protection "public"
                                        :type "class")
                                        nil nil))                                  )
                                (reparse-symbol namespacesubparts) [10060 10239])
                            ("std_functor" function
                               (:template 
                                  ( ("F" type (:type "class") nil nil))                                  
                                :type ("result_type_to_sig" type
                                     (:template-specifier 
                                        ( ("F" type nil nil nil))                                        
                                      :type "class")
                                      nil nil)
                                :arguments 
                                  ( ("f" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("F" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [10300 10311]))                                  
                                :typemodifiers ("inline"))
                                (reparse-symbol namespacesubparts) [10241 10325]))                          
                        :type "namespace")
                        (reparse-symbol namespacesubparts) [428 10329]))                  
                :type "namespace")
                nil [409 10352]))          
    :file "ret.hpp"
    :pointmax 10387
    :fsize 10386
    :lastmodtime '(17765 48449)
    :unmatched-syntax '((punctuation 7659 . 7660) (punctuation 7658 . 7659) (punctuation 7657 . 7658) (punctuation 7655 . 7656) (punctuation 7654 . 7655) (symbol 7653 . 7654) (CONST 7647 . 7652) (punctuation 7645 . 7646) (punctuation 7644 . 7645) (symbol 7643 . 7644) (CONST 7637 . 7642) (punctuation 7635 . 7636) (punctuation 7634 . 7635) (symbol 7633 . 7634) (CONST 7627 . 7632) (punctuation 7625 . 7626) (symbol 7595 . 7625) (CONST 7589 . 7594) (punctuation 7588 . 7589) (symbol 7583 . 7588) (punctuation 7582 . 7583) (symbol 7579 . 7582) (TYPENAME 7570 . 7578) (punctuation 7566 . 7567) (symbol 7565 . 7566) (CLASS 7559 . 7564) (punctuation 7557 . 7558) (symbol 7556 . 7557) (CLASS 7550 . 7555) (punctuation 7548 . 7549) (symbol 7547 . 7548) (CLASS 7541 . 7546) (punctuation 7540 . 7541) (TEMPLATE 7532 . 7540) (punctuation 7324 . 7325) (punctuation 7323 . 7324) (punctuation 7322 . 7323) (punctuation 7320 . 7321) (punctuation 7319 . 7320) (symbol 7318 . 7319) (CONST 7312 . 7317) (punctuation 7310 . 7311) (punctuation 7309 . 7310) (symbol 7308 . 7309) (CONST 7302 . 7307) (punctuation 7300 . 7301) (symbol 7270 . 7300) (CONST 7264 . 7269) (punctuation 7263 . 7264) (symbol 7258 . 7263) (punctuation 7257 . 7258) (symbol 7254 . 7257) (TYPENAME 7245 . 7253) (punctuation 7241 . 7242) (symbol 7240 . 7241) (CLASS 7234 . 7239) (punctuation 7232 . 7233) (symbol 7231 . 7232) (CLASS 7225 . 7230) (punctuation 7224 . 7225) (TEMPLATE 7216 . 7224) (punctuation 7019 . 7020) (punctuation 7018 . 7019) (punctuation 7017 . 7018) (punctuation 7015 . 7016) (punctuation 7014 . 7015) (symbol 7013 . 7014) (CONST 7007 . 7012) (punctuation 7005 . 7006) (symbol 6975 . 7005) (CONST 6969 . 6974) (punctuation 6968 . 6969) (symbol 6963 . 6968) (punctuation 6962 . 6963) (symbol 6959 . 6962) (TYPENAME 6950 . 6958) (punctuation 6946 . 6947) (symbol 6945 . 6946) (CLASS 6939 . 6944) (punctuation 6938 . 6939) (TEMPLATE 6930 . 6938) (punctuation 6835 . 6836) (punctuation 6834 . 6835) (punctuation 6833 . 6834) (symbol 6824 . 6833) (punctuation 6823 . 6824) (punctuation 6822 . 6823) (symbol 6815 . 6822) (TYPENAME 6806 . 6814) (punctuation 6805 . 6806) (symbol 6802 . 6805) (TEMPLATE 6784 . 6792) (punctuation 6783 . 6784) (punctuation 6782 . 6783) (symbol 6773 . 6782) (punctuation 6772 . 6773) (punctuation 6771 . 6772) (symbol 6758 . 6771) (TYPENAME 6743 . 6751) (TYPEDEF 6735 . 6742) (punctuation 5892 . 5893) (punctuation 5891 . 5892) (punctuation 5890 . 5891) (punctuation 5888 . 5889) (punctuation 5887 . 5888) (symbol 5886 . 5887) (punctuation 5884 . 5885) (punctuation 5883 . 5884) (symbol 5882 . 5883) (punctuation 5880 . 5881) (punctuation 5879 . 5880) (symbol 5878 . 5879) (punctuation 5876 . 5877) (symbol 5846 . 5876) (CONST 5840 . 5845) (punctuation 5839 . 5840) (symbol 5834 . 5839) (punctuation 5833 . 5834) (symbol 5830 . 5833) (TYPENAME 5821 . 5829) (punctuation 5817 . 5818) (symbol 5816 . 5817) (CLASS 5810 . 5815) (punctuation 5808 . 5809) (symbol 5807 . 5808) (CLASS 5801 . 5806) (punctuation 5799 . 5800) (symbol 5798 . 5799) (CLASS 5792 . 5797) (punctuation 5791 . 5792) (TEMPLATE 5783 . 5791) (punctuation 5555 . 5556) (punctuation 5554 . 5555) (punctuation 5553 . 5554) (punctuation 5551 . 5552) (punctuation 5550 . 5551) (symbol 5549 . 5550) (punctuation 5547 . 5548) (punctuation 5546 . 5547) (symbol 5545 . 5546) (punctuation 5543 . 5544) (symbol 5513 . 5543) (CONST 5507 . 5512) (punctuation 5506 . 5507) (symbol 5501 . 5506) (punctuation 5500 . 5501) (symbol 5497 . 5500) (TYPENAME 5488 . 5496) (punctuation 5484 . 5485) (symbol 5483 . 5484) (CLASS 5477 . 5482) (punctuation 5475 . 5476) (symbol 5474 . 5475) (CLASS 5468 . 5473) (punctuation 5467 . 5468) (TEMPLATE 5459 . 5467) (punctuation 5252 . 5253) (punctuation 5251 . 5252) (punctuation 5250 . 5251) (punctuation 5248 . 5249) (punctuation 5247 . 5248) (symbol 5246 . 5247) (punctuation 5244 . 5245) (symbol 5214 . 5244) (CONST 5208 . 5213) (punctuation 5207 . 5208) (symbol 5202 . 5207) (punctuation 5201 . 5202) (symbol 5198 . 5201) (TYPENAME 5189 . 5197) (punctuation 5185 . 5186) (symbol 5184 . 5185) (CLASS 5178 . 5183) (punctuation 5177 . 5178) (TEMPLATE 5169 . 5177) (punctuation 5069 . 5070) (punctuation 5068 . 5069) (punctuation 5067 . 5068) (symbol 5058 . 5067) (punctuation 5057 . 5058) (punctuation 5056 . 5057) (symbol 5049 . 5056) (TYPENAME 5040 . 5048) (punctuation 5039 . 5040) (symbol 5036 . 5039) (TEMPLATE 5018 . 5026) (punctuation 5017 . 5018) (punctuation 5016 . 5017) (symbol 5007 . 5016) (punctuation 5006 . 5007) (punctuation 5005 . 5006) (symbol 4992 . 5005) (TYPENAME 4977 . 4985) (TYPEDEF 4969 . 4976) (punctuation 3657 . 3658) (punctuation 3656 . 3657) (punctuation 3655 . 3656) (punctuation 3653 . 3654) (punctuation 3652 . 3653) (symbol 3651 . 3652) (punctuation 3649 . 3650) (punctuation 3648 . 3649) (symbol 3647 . 3648) (punctuation 3645 . 3646) (punctuation 3644 . 3645) (symbol 3643 . 3644) (punctuation 3641 . 3642) (symbol 3623 . 3641) (CONST 3617 . 3622) (punctuation 3616 . 3617) (symbol 3611 . 3616) (punctuation 3610 . 3611) (symbol 3607 . 3610) (TYPENAME 3598 . 3606) (punctuation 3594 . 3595) (symbol 3593 . 3594) (CLASS 3587 . 3592) (punctuation 3585 . 3586) (symbol 3584 . 3585) (CLASS 3578 . 3583) (punctuation 3576 . 3577) (symbol 3575 . 3576) (CLASS 3569 . 3574) (punctuation 3568 . 3569) (TEMPLATE 3560 . 3568) (punctuation 3386 . 3387) (punctuation 3385 . 3386) (punctuation 3384 . 3385) (punctuation 3382 . 3383) (punctuation 3381 . 3382) (symbol 3380 . 3381) (punctuation 3378 . 3379) (punctuation 3377 . 3378) (symbol 3376 . 3377) (punctuation 3374 . 3375) (symbol 3356 . 3374) (CONST 3350 . 3355) (punctuation 3349 . 3350) (symbol 3344 . 3349) (punctuation 3343 . 3344) (symbol 3340 . 3343) (TYPENAME 3331 . 3339) (punctuation 3327 . 3328) (symbol 3326 . 3327) (CLASS 3320 . 3325) (punctuation 3318 . 3319) (symbol 3317 . 3318) (CLASS 3311 . 3316) (punctuation 3310 . 3311) (TEMPLATE 3302 . 3310) (punctuation 3127 . 3128) (punctuation 3126 . 3127) (punctuation 3125 . 3126) (punctuation 3123 . 3124) (punctuation 3122 . 3123) (symbol 3121 . 3122) (punctuation 3119 . 3120) (symbol 3101 . 3119) (CONST 3095 . 3100) (punctuation 3094 . 3095) (symbol 3089 . 3094) (punctuation 3088 . 3089) (symbol 3085 . 3088) (TYPENAME 3076 . 3084) (punctuation 3072 . 3073) (symbol 3071 . 3072) (CLASS 3065 . 3070) (punctuation 3064 . 3065) (TEMPLATE 3056 . 3064) (punctuation 2747 . 2748) (punctuation 2746 . 2747) (punctuation 2745 . 2746) (symbol 2736 . 2745) (punctuation 2735 . 2736) (punctuation 2734 . 2735) (symbol 2727 . 2734) (TYPENAME 2718 . 2726) (punctuation 2717 . 2718) (symbol 2714 . 2717) (TEMPLATE 2705 . 2713) (punctuation 2694 . 2695) (punctuation 2693 . 2694) (symbol 2684 . 2693) (punctuation 2683 . 2684) (punctuation 2682 . 2683) (symbol 2669 . 2682) (TYPENAME 2653 . 2661) (TYPEDEF 2645 . 2652))
    :lexical-table 
        '(("BOOST_LAMBDA_RET_HPP")
          )

    )
   (semanticdb-table "is_instance_of.hpp"
    :major-mode 'c++-mode
    :tags 
        '( ("BOOST_LAMBDA_IS_INSTANCE_OF" variable (:constant-flag t) nil [447 474])
            ("boost/config.hpp" include nil nil [476 503])
            ("boost/type_traits/conversion_traits.hpp" include nil nil [533 583])
            ("boost/preprocessor/enum_shifted_params.hpp" include nil nil [606 659])
            ("boost/preprocessor/repeat_2nd.hpp" include nil nil [660 704])
            ("BOOST_LAMBDA_CLASS" variable (:constant-flag t) nil [1554 1572])
            ("BOOST_LAMBDA_CLASS_ARG" variable (:constant-flag t) nil [1616 1638])
            ("BOOST_LAMBDA_ARG" variable (:constant-flag t) nil [1688 1704])
            ("BOOST_LAMBDA_CLASS_LIST" variable (:constant-flag t) nil [1749 1772])
            ("BOOST_LAMBDA_CLASS_ARG_LIST" variable (:constant-flag t) nil [1836 1863])
            ("BOOST_LAMBDA_ARG_LIST" variable (:constant-flag t) nil [1931 1952])
            ("boost" type
               (:members 
                  ( ("lambda" type
                       (:members 
                          ( ("BOOST_LAMBDA_IS_INSTANCE_OF_TEMPLATE" variable (:constant-flag t) (reparse-symbol namespacesubparts) [2052 2088])
                            ("BOOST_LAMBDA_HELPER" variable (:constant-flag t) (reparse-symbol namespacesubparts) [3929 3948]))                          
                        :type "namespace")
                        (reparse-symbol namespacesubparts) [2024 4362]))                  
                :type "namespace")
                nil [2006 4374]))          
    :file "is_instance_of.hpp"
    :pointmax 4397
    :fsize 4396
    :lastmodtime '(17765 48449)
    :unmatched-syntax '((semantic-list 4085 . 4112) (symbol 4066 . 4085) (number 4086 . 4087))
    :lexical-table 
        '(("BOOST_LAMBDA_IS_INSTANCE_OF")
          )

    )
   )
  :file "!usr!include!boost!lambda!detail!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.0"
  )
