;; Object aux_/
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "aux_/"
  :tables (list 
   (semanticdb-table "nested_type_wknd.hpp"
    :major-mode 'c++-mode
    :tags 
        '( ("BOOST_MPL_AUX_NESTED_TYPE_WKND_HPP_INCLUDED" variable (:constant-flag t) nil [62 105])
            ("boost/mpl/aux_/config/gcc.hpp" include (:system-flag t) nil [494 534])
            ("boost/mpl/aux_/config/workaround.hpp" include (:system-flag t) nil [535 582])
            ("boost" type
               (:members 
                  ( ("mpl" type
                       (:members 
                          ( ("aux" type
                               (:members 
                                  ( ("nested_type_wknd" type
                                       (:template 
                                          ( ("T" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :superclasses 
                                          ( ("T::type" type
                                               (:protection "unspecified"
                                                :type "class")
                                                nil nil))                                          )
                                        (reparse-symbol namespacesubparts) [886 951]))                                  
                                :type "namespace")
                                (reparse-symbol namespacesubparts) [870 953]))                          
                        :type "namespace")
                        (reparse-symbol namespacesubparts) [854 954]))                  
                :type "namespace")
                nil [836 955])
            ("BOOST_MPL_AUX_NESTED_TYPE_WKND" variable (:constant-flag t) nil [1022 1052]))          
    :file "nested_type_wknd.hpp"
    :pointmax 1358
    :fsize 1357
    :lastmodtime '(17765 48453)
    :unmatched-syntax 'nil
    :lexical-table 
        '(("BOOST_MPL_AUX_NESTED_TYPE_WKND" (spp-arg-list ("T") 1052 . 1055) . 
              ((symbol "aux" 1062 . 1065) (punctuation ":" 1065 . 1066) (punctuation ":" 1066 . 1067) (symbol "nested_type_wknd" 1067 . 1083) (punctuation "<" 1083 . 1084) (symbol "T" 1084 . 1085) (punctuation ">" 1085 . 1086)))
          ("BOOST_MPL_AUX_NESTED_TYPE_WKND_HPP_INCLUDED")
          )

    )
   (semanticdb-table "na_spec.hpp"
    :major-mode 'c++-mode
    :tags 
        '( ("BOOST_MPL_AUX_NA_SPEC_HPP_INCLUDED" variable (:constant-flag t) nil [53 87])
            ("boost/mpl/lambda_fwd.hpp" include (:system-flag t) nil [510 548])
            ("boost/mpl/int.hpp" include (:system-flag t) nil [549 580])
            ("boost/mpl/bool.hpp" include (:system-flag t) nil [581 613])
            ("boost/mpl/aux_/na.hpp" include (:system-flag t) nil [614 649])
            ("boost/mpl/aux_/arity.hpp" include (:system-flag t) nil [650 688])
            ("boost/mpl/aux_/template_arity_fwd.hpp" include (:system-flag t) nil [689 740])
            ("boost/mpl/aux_/preprocessor/params.hpp" include (:system-flag t) nil [749 798])
            ("boost/mpl/aux_/preprocessor/enum.hpp" include (:system-flag t) nil [799 846])
            ("boost/mpl/aux_/preprocessor/def_params_tail.hpp" include (:system-flag t) nil [847 905])
            ("boost/mpl/aux_/lambda_arity_param.hpp" include (:system-flag t) nil [906 954])
            ("boost/mpl/aux_/config/dtp.hpp" include (:system-flag t) nil [955 995])
            ("boost/mpl/aux_/config/eti.hpp" include (:system-flag t) nil [996 1036])
            ("boost/mpl/aux_/nttp_decl.hpp" include (:system-flag t) nil [1037 1076])
            ("boost/mpl/aux_/config/ttp.hpp" include (:system-flag t) nil [1077 1117])
            ("boost/mpl/aux_/config/lambda.hpp" include (:system-flag t) nil [1118 1161])
            ("boost/mpl/aux_/config/overload_resolution.hpp" include (:system-flag t) nil [1162 1218])
            ("BOOST_MPL_AUX_NA_PARAMS" variable (:constant-flag t) nil [1229 1252])
            ("BOOST_MPL_AUX_NA_SPEC_ARITY" variable (:constant-flag t) nil [1657 1684])
            ("BOOST_MPL_AUX_NA_SPEC_MAIN" variable (:constant-flag t) nil [1715 1741])
            ("BOOST_MPL_AUX_NA_SPEC_LAMBDA" variable (:constant-flag t) nil [2573 2601])
            ("BOOST_MPL_AUX_NA_SPEC_TEMPLATE_ARITY" variable (:constant-flag t) nil [3126 3162])
            ("BOOST_MPL_AUX_NA_SPEC_ETI" variable (:constant-flag t) nil [3788 3813])
            ("BOOST_MPL_AUX_NA_PARAM" variable (:constant-flag t) nil [3844 3866])
            ("BOOST_MPL_AUX_NA_SPEC_NO_ETI" variable (:constant-flag t) nil [3894 3922])
            ("BOOST_MPL_AUX_NA_SPEC" variable (:constant-flag t) nil [4116 4137])
            ("BOOST_MPL_AUX_NA_SPEC2" variable (:constant-flag t) nil [4240 4262]))          
    :file "na_spec.hpp"
    :pointmax 4534
    :fsize 4533
    :lastmodtime '(17765 48454)
    :unmatched-syntax 'nil
    :lexical-table 
        '(("BOOST_MPL_AUX_NA_PARAM" (spp-arg-list ("param") 3866 . 3873) . 
              ((symbol "param" 3874 . 3879) (punctuation "=" 3880 . 3881) (symbol "na" 3882 . 3884)))
          ("BOOST_MPL_AUX_NA_SPEC_ARITY" (spp-arg-list ("i" "name") 1684 . 1693))
          ("BOOST_MPL_AUX_NA_SPEC_HPP_INCLUDED")
          ("BOOST_MPL_AUX_NA_SPEC_LAMBDA" (spp-arg-list ("i" "name") 2601 . 2610) . 
              ((TEMPLATE "template" 2613 . 2621) (punctuation "<" 2621 . 2622) (TYPENAME "typename" 2623 . 2631) (symbol "Tag" 2632 . 2635) (punctuation ">" 2636 . 2637) (STRUCT "struct" 2640 . 2646) (symbol "lambda" 2647 . 2653) (punctuation "<" 2653 . 2654) (symbol "name" 2663 . 2667) (punctuation "<" 2667 . 2668) (symbol "BOOST_MPL_AUX_NA_PARAMS" 2669 . 2692) (semantic-list "(i)" 2692 . 2695) (punctuation ">" 2696 . 2697) (punctuation "," 2704 . 2705) (symbol "Tag" 2706 . 2709) (symbol "BOOST_MPL_AUX_LAMBDA_ARITY_PARAM" 2716 . 2748) (semantic-list "(int_<-1>)" 2748 . 2758) (punctuation ">" 2765 . 2766) (semantic-list "{ \\
    typedef false_ is_le; \\
    typedef name< BOOST_MPL_AUX_NA_PARAMS(i) > result_; \\
    typedef name< BOOST_MPL_AUX_NA_PARAMS(i) > type; \\
}" 2769 . 2915) (punctuation ";" 2915 . 2916)))
          ("BOOST_MPL_AUX_NA_SPEC2" (spp-arg-list ("i" "j" "name") 4262 . 4274) . 
              ((symbol "BOOST_MPL_AUX_NA_SPEC_MAIN" 4277 . 4303) (semantic-list "(i, name)" 4303 . 4312) (symbol "BOOST_MPL_AUX_NA_SPEC_ETI" 4315 . 4340) (semantic-list "(i, name)" 4340 . 4349) (symbol "BOOST_MPL_AUX_NA_SPEC_LAMBDA" 4352 . 4380) (semantic-list "(i, name)" 4380 . 4389) (symbol "BOOST_MPL_AUX_NA_SPEC_ARITY" 4392 . 4419) (semantic-list "(i, name)" 4419 . 4428) (symbol "BOOST_MPL_AUX_NA_SPEC_TEMPLATE_ARITY" 4431 . 4467) (semantic-list "(i, j, name)" 4467 . 4479)))
          ("BOOST_MPL_AUX_NA_PARAMS" (spp-arg-list ("i") 1252 . 1255) . ((symbol "BOOST_MPL_PP_ENUM" 1262 . 1279) (semantic-list "(i, na)" 1279 . 1286)))
          ("BOOST_MPL_AUX_NA_SPEC" (spp-arg-list ("i" "name") 4137 . 4146) . 
              ((symbol "BOOST_MPL_AUX_NA_SPEC_NO_ETI" 4149 . 4177) (semantic-list "(i, name)" 4177 . 4186) (symbol "BOOST_MPL_AUX_NA_SPEC_ETI" 4189 . 4214) (semantic-list "(i, name)" 4214 . 4223)))
          ("BOOST_MPL_AUX_NA_SPEC_TEMPLATE_ARITY" (spp-arg-list ("i" "j" "name") 3162 . 3174) . 
              ((NAMESPACE "namespace" 3177 . 3186) (symbol "aux" 3187 . 3190) (semantic-list "{ \\
template< BOOST_MPL_PP_PARAMS(j, typename T) > \\
struct template_arity< \\
          name< BOOST_MPL_PP_PARAMS(j, T) > \\
        > \\
    : int_<j> \\
{ \\
}; \\
\\
template<> \\
struct template_arity< \\
          name< BOOST_MPL_PP_ENUM(i, na) > \\
        > \\
    : int_<-1> \\
{ \\
}; \\
}" 3191 . 3476)))
          ("BOOST_MPL_AUX_NA_SPEC_MAIN" (spp-arg-list ("i" "name") 1741 . 1750) . 
              ((TEMPLATE "template" 1753 . 1761) (punctuation "<" 1761 . 1762) (punctuation ">" 1762 . 1763) (STRUCT "struct" 1766 . 1772) (symbol "name" 1773 . 1777) (punctuation "<" 1777 . 1778) (symbol "BOOST_MPL_AUX_NA_PARAMS" 1779 . 1802) (semantic-list "(i)" 1802 . 1805) (punctuation ">" 1806 . 1807) (semantic-list "{ \\
    template< \\
          BOOST_MPL_PP_PARAMS(i, typename T) \\
        BOOST_MPL_PP_NESTED_DEF_PARAMS_TAIL(i, typename T, na) \\
        > \\
    struct apply \\
        : name< BOOST_MPL_PP_PARAMS(i, T) > \\
    { \\
    }; \\
}" 1810 . 2037) (punctuation ";" 2037 . 2038)))
          ("BOOST_MPL_AUX_NA_SPEC_NO_ETI" (spp-arg-list ("i" "name") 3922 . 3931) . 
              ((symbol "BOOST_MPL_AUX_NA_SPEC_MAIN" 3934 . 3960) (semantic-list "(i, name)" 3960 . 3969) (symbol "BOOST_MPL_AUX_NA_SPEC_LAMBDA" 3972 . 4000) (semantic-list "(i, name)" 4000 . 4009) (symbol "BOOST_MPL_AUX_NA_SPEC_ARITY" 4012 . 4039) (semantic-list "(i, name)" 4039 . 4048) (symbol "BOOST_MPL_AUX_NA_SPEC_TEMPLATE_ARITY" 4051 . 4087) (semantic-list "(i, i, name)" 4087 . 4099)))
          ("BOOST_MPL_AUX_NA_SPEC_ETI" (spp-arg-list ("i" "name") 3813 . 3822))
          )

    )
   (semanticdb-table "lambda_support.hpp"
    :major-mode 'c++-mode
    :tags 
        '( ("BOOST_MPL_AUX_LAMBDA_SUPPORT_HPP_INCLUDED" variable (:constant-flag t) nil [60 101])
            ("boost/mpl/aux_/config/lambda.hpp" include (:system-flag t) nil [489 532])
            ("BOOST_MPL_AUX_LAMBDA_SUPPORT_SPEC" variable (:constant-flag t) nil [597 630])
            ("BOOST_MPL_AUX_LAMBDA_SUPPORT" variable (:constant-flag t) nil [664 692]))          
    :file "lambda_support.hpp"
    :pointmax 5439
    :fsize 5438
    :lastmodtime '(17765 48453)
    :unmatched-syntax 'nil
    :lexical-table 
        '(("BOOST_MPL_AUX_LAMBDA_SUPPORT_HPP_INCLUDED")
          ("BOOST_MPL_AUX_LAMBDA_SUPPORT_SPEC" (spp-arg-list ("i" "name" "params") 630 . 647))
          ("BOOST_MPL_AUX_LAMBDA_SUPPORT" (spp-arg-list ("i" "name" "params") 692 . 707))
          )

    )
   (semanticdb-table "include_preprocessed.hpp"
    :major-mode 'c++-mode
    :tags 
        '( ("boost/mpl/aux_/config/compiler.hpp" include (:system-flag t) nil [462 507])
            ("boost/mpl/aux_/config/preprocessor.hpp" include (:system-flag t) nil [508 557])
            ("boost/preprocessor/cat.hpp" include (:system-flag t) nil [558 595])
            ("boost/preprocessor/stringize.hpp" include (:system-flag t) nil [596 639])
            ("AUX_PREPROCESSED_HEADER" variable (:constant-flag t) nil [718 741]))          
    :file "include_preprocessed.hpp"
    :pointmax 1104
    :fsize 1103
    :lastmodtime '(17765 48454)
    :unmatched-syntax '((semantic-list 978 . 1031) (symbol 960 . 978) (punctuation 1006 . 1007) (punctuation 993 . 994) (punctuation 988 . 989) (punctuation 984 . 985) (symbol 952 . 959) (punctuation 1006 . 1007) (punctuation 993 . 994) (punctuation 988 . 989) (punctuation 984 . 985) (punctuation 948 . 949))
    )
   (semanticdb-table "value_wknd.hpp"
    :major-mode 'c++-mode
    :tags 
        '( ("BOOST_MPL_AUX_VALUE_WKND_HPP_INCLUDED" variable (:constant-flag t) nil [56 93])
            ("boost/mpl/aux_/static_cast.hpp" include (:system-flag t) nil [477 518])
            ("boost/mpl/aux_/config/integral.hpp" include (:system-flag t) nil [519 564])
            ("boost/mpl/aux_/config/eti.hpp" include (:system-flag t) nil [565 605])
            ("boost/mpl/aux_/config/workaround.hpp" include (:system-flag t) nil [606 653])
            ("boost/mpl/int.hpp" include (:system-flag t) nil [754 785])
            ("boost" type
               (:members 
                  ( ("mpl" type
                       (:members 
                          ( ("aux" type
                               (:members 
                                  ( ("value_wknd" type
                                       (:template 
                                          ( ("C_" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :superclasses 
                                          ( ("C_" type
                                               (:protection "unspecified"
                                                :type "class")
                                                nil nil))                                          )
                                        (reparse-symbol namespacesubparts) [837 892]))                                  
                                :type "namespace")
                                (reparse-symbol namespacesubparts) [821 1024]))                          
                        :type "namespace")
                        (reparse-symbol namespacesubparts) [805 1025]))                  
                :type "namespace")
                nil [787 1026])
            ("BOOST_MPL_AUX_VALUE_WKND" variable (:constant-flag t) nil [1084 1108])
            ("BOOST_MPL_AUX_MSVC_VALUE_WKND" variable (:constant-flag t) nil [1197 1226])
            ("BOOST_MPL_AUX_NESTED_VALUE_WKND" variable (:constant-flag t) nil [1605 1636])
            ("boost" type
               (:members 
                  ( ("mpl" type
                       (:members 
                          ( ("aux" type
                               (:members 
                                  ( ("value_type_wknd" type
                                       (:template 
                                          ( ("T" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :members 
                                          ( ("type" type
                                               (:typedef ("T::value_type" type (:type "class") nil nil)
                                                :superclasses "T::value_type"
                                                :type "typedef")
                                                (reparse-symbol classsubparts) [1910 1946]))                                          )
                                        (reparse-symbol namespacesubparts) [1858 1949]))                                  
                                :type "namespace")
                                (reparse-symbol namespacesubparts) [1841 2066]))                          
                        :type "namespace")
                        (reparse-symbol namespacesubparts) [1825 2067]))                  
                :type "namespace")
                nil [1807 2068]))          
    :file "value_wknd.hpp"
    :pointmax 2118
    :fsize 2117
    :lastmodtime '(17765 48453)
    :unmatched-syntax 'nil
    :lexical-table 
        '(("BOOST_MPL_AUX_VALUE_WKND" (spp-arg-list ("C") 1108 . 1111) . 
              ((punctuation ":" 1118 . 1119) (punctuation ":" 1119 . 1120) (symbol "BOOST_MPL_AUX_ADL_BARRIER_NAMESPACE" 1120 . 1155) (punctuation ":" 1155 . 1156) (punctuation ":" 1156 . 1157) (symbol "aux" 1157 . 1160) (punctuation ":" 1160 . 1161) (punctuation ":" 1161 . 1162) (symbol "value_wknd" 1162 . 1172) (punctuation "<" 1172 . 1173) (symbol "C" 1174 . 1175) (punctuation ">" 1176 . 1177)))
          ("BOOST_MPL_AUX_MSVC_VALUE_WKND" (spp-arg-list ("C") 1226 . 1229) . ((symbol "BOOST_MPL_AUX_VALUE_WKND" 1230 . 1254) (semantic-list "(C)" 1254 . 1257)))
          ("BOOST_MPL_AUX_VALUE_WKND_HPP_INCLUDED")
          ("BOOST_MPL_AUX_NESTED_VALUE_WKND" (spp-arg-list ("T" "C") 1636 . 1642) . ((symbol "BOOST_MPL_AUX_STATIC_CAST" 1649 . 1674) (semantic-list "(T, C::value)" 1674 . 1687)))
          )

    )
   (semanticdb-table "static_cast.hpp"
    :major-mode 'c++-mode
    :tags 
        '( ("BOOST_MPL_AUX_STATIC_CAST_HPP_INCLUDED" variable (:constant-flag t) nil [57 95])
            ("boost/mpl/aux_/config/workaround.hpp" include (:system-flag t) nil [479 526])
            ("BOOST_MPL_AUX_STATIC_CAST" variable (:constant-flag t) nil [682 707]))          
    :file "static_cast.hpp"
    :pointmax 857
    :fsize 856
    :lastmodtime '(17765 48453)
    :unmatched-syntax 'nil
    :lexical-table 
        '(("BOOST_MPL_AUX_STATIC_CAST_HPP_INCLUDED")
          ("BOOST_MPL_AUX_STATIC_CAST" (spp-arg-list ("T" "expr") 707 . 716) . ((semantic-list "(T)" 717 . 720) (semantic-list "(expr)" 720 . 726)))
          )

    )
   (semanticdb-table "na.hpp"
    :major-mode 'c++-mode
    :tags 
        '( ("BOOST_MPL_AUX_NA_HPP_INCLUDED" variable (:constant-flag t) nil [48 77])
            ("boost/mpl/bool.hpp" include (:system-flag t) nil [452 481])
            ("boost/mpl/aux_/na_fwd.hpp" include (:system-flag t) nil [482 518])
            ("boost/mpl/aux_/config/msvc.hpp" include (:system-flag t) nil [519 560])
            ("boost/mpl/aux_/config/ctps.hpp" include (:system-flag t) nil [561 602])
            ("boost" type
               (:members 
                  ( ("mpl" type
                       (:members 
                          ( ("is_na" type
                               (:template 
                                  ( ("T" type (:type "class") nil nil))                                  
                                :type "struct"
                                :members 
                                  ( ("false_::value" variable (:type "int") (reparse-symbol classsubparts) [741 755]))                                  
                                :superclasses 
                                  ( ("false_" type
                                       (:protection "unspecified"
                                        :type "class")
                                        nil nil))                                  )
                                (reparse-symbol namespacesubparts) [639 765])
                            ("is_na" type
                               (:type "struct"
                                :members 
                                  ( ("true_::value" variable (:type "int") (reparse-symbol classsubparts) [860 873]))                                  
                                :superclasses 
                                  ( ("true_" type
                                       (:protection "unspecified"
                                        :type "class")
                                        nil nil))                                  
                                :template-specifier 
                                  ( ("na" type nil nil nil))                                  )
                                (reparse-symbol namespacesubparts) [767 883])
                            ("is_not_na" type
                               (:template 
                                  ( ("T" type (:type "class") nil nil))                                  
                                :type "struct"
                                :members 
                                  ( ("true_::value" variable (:type "int") (reparse-symbol classsubparts) [990 1003]))                                  
                                :superclasses 
                                  ( ("true_" type
                                       (:protection "unspecified"
                                        :type "class")
                                        nil nil))                                  )
                                (reparse-symbol namespacesubparts) [885 1013])
                            ("is_not_na" type
                               (:type "struct"
                                :members 
                                  ( ("false_::value" variable (:type "int") (reparse-symbol classsubparts) [1113 1127]))                                  
                                :superclasses 
                                  ( ("false_" type
                                       (:protection "unspecified"
                                        :type "class")
                                        nil nil))                                  
                                :template-specifier 
                                  ( ("na" type nil nil nil))                                  )
                                (reparse-symbol namespacesubparts) [1015 1137])
                            ("if_na" type
                               (:template 
                                  ( ("T" type (:type "class") nil nil)
                                    ("U" type (:type "class") nil nil))                                  
                                :type "struct"
                                :members 
                                  ( ("type" type
                                       (:typedef ("T" type (:type "class") nil nil)
                                        :superclasses "T"
                                        :type "typedef")
                                        (reparse-symbol classsubparts) [1248 1263]))                                  )
                                (reparse-symbol namespacesubparts) [1194 1266])
                            ("if_na" type
                               (:template 
                                  ( ("U" type (:type "class") nil nil))                                  
                                :type "struct"
                                :members 
                                  ( ("type" type
                                       (:typedef ("U" type (:type "class") nil nil)
                                        :superclasses "U"
                                        :type "typedef")
                                        (reparse-symbol classsubparts) [1316 1331]))                                  
                                :template-specifier 
                                  ( ("na" type nil nil nil)
                                    ("U" type nil nil nil))                                  )
                                (reparse-symbol namespacesubparts) [1268 1334]))                          
                        :type "namespace")
                        (reparse-symbol namespacesubparts) [622 1682]))                  
                :type "namespace")
                nil [604 1683]))          
    :file "na.hpp"
    :pointmax 1725
    :fsize 1724
    :lastmodtime '(17765 48454)
    :unmatched-syntax '((USING 1107 . 1112) (USING 984 . 989) (USING 854 . 859) (USING 735 . 740))
    :lexical-table 
        '(("BOOST_MPL_AUX_NA_HPP_INCLUDED")
          )

    )
   (semanticdb-table "arity.hpp"
    :major-mode 'c++-mode
    :tags 
        '( ("BOOST_MPL_AUX_ARITY_HPP_INCLUDED" variable (:constant-flag t) nil [51 83])
            ("boost/mpl/aux_/config/dtp.hpp" include (:system-flag t) nil [461 501]))          
    :file "arity.hpp"
    :pointmax 1178
    :fsize 1177
    :lastmodtime '(17765 48454)
    :unmatched-syntax 'nil
    :lexical-table 
        '(("BOOST_MPL_AUX_ARITY_HPP_INCLUDED")
          )

    )
   (semanticdb-table "template_arity_fwd.hpp"
    :major-mode 'c++-mode
    :tags 
        '( ("BOOST_MPL_AUX_TEMPLATE_ARITY_FWD_HPP_INCLUDED" variable (:constant-flag t) nil [64 109])
            ("boost" type
               (:members 
                  ( ("mpl" type
                       (:members 
                          ( ("aux" type
                               (:members 
                                  ( ("template_arity" type
                                       (:template 
                                          ( ("F" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :prototype t)
                                        (reparse-symbol namespacesubparts) [551 596]))                                  
                                :type "namespace")
                                (reparse-symbol namespacesubparts) [534 599]))                          
                        :type "namespace")
                        (reparse-symbol namespacesubparts) [518 600]))                  
                :type "namespace")
                nil [500 601]))          
    :file "template_arity_fwd.hpp"
    :pointmax 659
    :fsize 658
    :lastmodtime '(17765 48454)
    :unmatched-syntax 'nil
    :lexical-table 
        '(("BOOST_MPL_AUX_TEMPLATE_ARITY_FWD_HPP_INCLUDED")
          )

    )
   (semanticdb-table "lambda_arity_param.hpp"
    :major-mode 'c++-mode
    :tags 
        '( ("BOOST_MPL_AUX_LAMBDA_ARITY_PARAM_HPP_INCLUDED" variable (:constant-flag t) nil [64 109])
            ("boost/mpl/aux_/config/ttp.hpp" include (:system-flag t) nil [500 540])
            ("BOOST_MPL_AUX_LAMBDA_ARITY_PARAM" variable (:constant-flag t) nil [619 651]))          
    :file "lambda_arity_param.hpp"
    :pointmax 792
    :fsize 791
    :lastmodtime '(17765 48453)
    :unmatched-syntax 'nil
    :lexical-table 
        '(("BOOST_MPL_AUX_LAMBDA_ARITY_PARAM_HPP_INCLUDED")
          ("BOOST_MPL_AUX_LAMBDA_ARITY_PARAM" (spp-arg-list ("param") 651 . 658))
          )

    )
   (semanticdb-table "nttp_decl.hpp"
    :major-mode 'c++-mode
    :tags 
        '( ("BOOST_MPL_AUX_NTTP_DECL_HPP_INCLUDED" variable (:constant-flag t) nil [55 91])
            ("boost/mpl/aux_/config/nttp.hpp" include (:system-flag t) nil [473 514])
            ("BOOST_MPL_AUX_NTTP_DECL" variable (:constant-flag t) nil [836 859]))          
    :file "nttp_decl.hpp"
    :pointmax 931
    :fsize 930
    :lastmodtime '(17765 48453)
    :unmatched-syntax 'nil
    :lexical-table 
        '(("BOOST_MPL_AUX_NTTP_DECL" (spp-arg-list ("T" "x") 859 . 865) . ((symbol "T" 866 . 867) (symbol "x" 868 . 869)))
          ("BOOST_MPL_AUX_NTTP_DECL_HPP_INCLUDED")
          )

    )
   (semanticdb-table "adl_barrier.hpp"
    :major-mode 'c++-mode
    :tags 
        '( ("BOOST_MPL_AUX_ADL_BARRIER_HPP_INCLUDED" variable (:constant-flag t) nil [57 95])
            ("boost/mpl/aux_/config/adl.hpp" include (:system-flag t) nil [479 519])
            ("boost/mpl/aux_/config/gcc.hpp" include (:system-flag t) nil [520 560])
            ("boost/mpl/aux_/config/workaround.hpp" include (:system-flag t) nil [561 608])
            ("BOOST_MPL_AUX_ADL_BARRIER_NAMESPACE" variable (:constant-flag t) nil [675 710])
            ("BOOST_MPL_AUX_ADL_BARRIER_NAMESPACE_OPEN" variable (:constant-flag t) nil [727 767])
            ("BOOST_MPL_AUX_ADL_BARRIER_NAMESPACE_CLOSE" variable (:constant-flag t) nil [796 837])
            ("BOOST_MPL_AUX_ADL_BARRIER_DECL" variable (:constant-flag t) nil [851 881])
            ("mpl_" type
               (:members 
                  ( ("aux" type (:type "namespace") (reparse-symbol namespacesubparts) [1094 1110]))                  
                :type "namespace")
                nil [1046 1112])
            ("boost" type
               (:members 
                  ( ("mpl" type
                       (:members 
                          ( ("mpl_" using (:type ("mpl_" type
                                 (:prototype t
                                  :type "namespace")
                                  nil nil)) (reparse-symbol namespacesubparts) [1147 1199])
                            ("aux" type
                               (:members 
                                  ( ("mpl_::aux" using (:type ("mpl_::aux" type
                                         (:prototype t
                                          :type "namespace")
                                          nil nil)) (reparse-symbol namespacesubparts) [1217 1274]))                                  
                                :type "namespace")
                                (reparse-symbol namespacesubparts) [1201 1276]))                          
                        :type "namespace")
                        (reparse-symbol namespacesubparts) [1131 1278]))                  
                :type "namespace")
                nil [1113 1279]))          
    :file "adl_barrier.hpp"
    :pointmax 1648
    :fsize 1647
    :lastmodtime '(17765 48453)
    :unmatched-syntax 'nil
    :lexical-table 
        '(("BOOST_MPL_AUX_ADL_BARRIER_NAMESPACE_OPEN" . 
              ((NAMESPACE "namespace" 768 . 777) (symbol "mpl_" 778 . 782) (semantic-list "{" 783 . 784)))
          ("BOOST_MPL_AUX_ADL_BARRIER_DECL" (spp-arg-list ("type") 881 . 887) . 
              ((NAMESPACE "namespace" 894 . 903) (symbol "boost" 904 . 909) (semantic-list "{ namespace mpl { \\
    using ::BOOST_MPL_AUX_ADL_BARRIER_NAMESPACE::type; \\
    } }" 910 . 994)))
          ("BOOST_MPL_AUX_ADL_BARRIER_NAMESPACE" . ((symbol "mpl_" 711 . 715)))
          ("BOOST_MPL_AUX_ADL_BARRIER_NAMESPACE_CLOSE" . ((close-paren "}" 838 . 839)))
          ("BOOST_MPL_AUX_ADL_BARRIER_HPP_INCLUDED")
          )

    )
   (semanticdb-table "integral_wrapper.hpp"
    :major-mode 'c++-mode
    :tags 
        '( ("boost/mpl/integral_c_tag.hpp" include (:system-flag t) nil [460 499])
            ("boost/mpl/aux_/static_cast.hpp" include (:system-flag t) nil [500 541])
            ("boost/mpl/aux_/nttp_decl.hpp" include (:system-flag t) nil [542 581])
            ("boost/mpl/aux_/config/static_constant.hpp" include (:system-flag t) nil [582 634])
            ("boost/mpl/aux_/config/workaround.hpp" include (:system-flag t) nil [635 682])
            ("boost/preprocessor/cat.hpp" include (:system-flag t) nil [684 721])
            ("AUX_WRAPPER_NAME" variable (:constant-flag t) nil [765 781])
            ("AUX_WRAPPER_PARAMS" variable (:constant-flag t) nil [873 891])
            ("AUX_WRAPPER_INST" variable (:constant-flag t) nil [1047 1063])
            ("value" variable (:type "int") nil [3408 3414]))          
    :file "integral_wrapper.hpp"
    :pointmax 3570
    :fsize 3569
    :lastmodtime '(17765 48453)
    :unmatched-syntax '((symbol 3423 . 3464) (punctuation 3407 . 3408) (punctuation 3406 . 3407) (punctuation ">" 3387 . 3406) (symbol "N" 3387 . 3406) (punctuation "<" 3387 . 3406) (semantic-list "(AUX_WRAPPER_VALUE_TYPE,_)" 3387 . 3406) (symbol "BOOST_PP_CAT" 3387 . 3406) (CONST 3381 . 3386) (symbol 3358 . 3380) (punctuation 3356 . 3357) (semantic-list #("(AUX_WRAPPER_VALUE_TYPE, N)" 0 1 (macros (("N" symbol "N" 3353 . 3354)))) 3334 . 3355) (symbol "BOOST_MPL_AUX_NTTP_DECL" 3334 . 3355) (punctuation 3332 . 3333) (TEMPLATE 3324 . 3332) (punctuation 3268 . 3269) (semantic-list 1327 . 3268) (semantic-list "(AUX_WRAPPER_VALUE_TYPE,_)" 1310 . 1326) (symbol "BOOST_PP_CAT" 1310 . 1326) (STRUCT 1303 . 1309) (punctuation 1301 . 1302) (semantic-list #("(AUX_WRAPPER_VALUE_TYPE, N)" 0 1 (macros (("N" symbol "N" 1298 . 1299)))) 1279 . 1300) (symbol "BOOST_MPL_AUX_NTTP_DECL" 1279 . 1300) (punctuation 1277 . 1278) (TEMPLATE 1269 . 1277) (symbol 1227 . 1267))
    :lexical-table 
        '(("N" . (nil))
          )

    )
   (semanticdb-table "na_fwd.hpp"
    :major-mode 'c++-mode
    :tags 
        '( ("BOOST_MPL_AUX_NA_FWD_HPP_INCLUDED" variable (:constant-flag t) nil [52 85])
            ("boost/mpl/aux_/adl_barrier.hpp" include (:system-flag t) nil [464 505])
            ("na" type
               (:members 
                  ( ("type" type
                       (:typedef ("na" type (:type "class") nil nil)
                        :superclasses "na"
                        :type "typedef")
                        (reparse-symbol classsubparts) [590 606])
                    ("" type
                       (:members 
                          ( ("value" variable
                               (:constant-flag t
                                :default-value (626 627)
                                :type "int")
                                (reparse-symbol enumsubparts) [618 627]))                          
                        :type "enum")
                        (reparse-symbol classsubparts) [611 630]))                  
                :type "struct")
                nil [574 633]))          
    :file "na_fwd.hpp"
    :pointmax 757
    :fsize 756
    :lastmodtime '(17765 48453)
    :unmatched-syntax '((semantic-list 707 . 711) (symbol 677 . 707) (symbol 635 . 676) (symbol 507 . 547))
    :lexical-table 
        '(("BOOST_MPL_AUX_NA_FWD_HPP_INCLUDED")
          )

    )
   (semanticdb-table "arity_spec.hpp"
    :major-mode 'c++-mode
    :tags 
        '( ("BOOST_MPL_AUX_ARITY_SPEC_HPP_INCLUDED" variable (:constant-flag t) nil [56 93])
            ("boost/mpl/int.hpp" include (:system-flag t) nil [476 504])
            ("boost/mpl/limits/arity.hpp" include (:system-flag t) nil [505 542])
            ("boost/mpl/aux_/config/dtp.hpp" include (:system-flag t) nil [543 583])
            ("boost/mpl/aux_/preprocessor/params.hpp" include (:system-flag t) nil [584 633])
            ("boost/mpl/aux_/arity.hpp" include (:system-flag t) nil [634 669])
            ("boost/mpl/aux_/template_arity_fwd.hpp" include (:system-flag t) nil [670 718])
            ("boost/mpl/aux_/config/ttp.hpp" include (:system-flag t) nil [719 759])
            ("boost/mpl/aux_/config/lambda.hpp" include (:system-flag t) nil [760 803])
            ("boost/mpl/aux_/config/static_constant.hpp" include (:system-flag t) nil [804 856])
            ("BOOST_MPL_AUX_NONTYPE_ARITY_SPEC" variable (:constant-flag t) nil [1295 1327])
            ("BOOST_MPL_AUX_ARITY_SPEC" variable (:constant-flag t) nil [1365 1389])
            ("BOOST_MPL_AUX_TEMPLATE_ARITY_SPEC" variable (:constant-flag t) nil [1595 1628]))          
    :file "arity_spec.hpp"
    :pointmax 1920
    :fsize 1919
    :lastmodtime '(17765 48454)
    :unmatched-syntax 'nil
    :lexical-table 
        '(("BOOST_MPL_AUX_ARITY_SPEC" (spp-arg-list ("i" "name") 1389 . 1397) . ((symbol "BOOST_MPL_AUX_NONTYPE_ARITY_SPEC" 1404 . 1436) (semantic-list "(i,typename,name)" 1436 . 1453)))
          ("BOOST_MPL_AUX_NONTYPE_ARITY_SPEC" (spp-arg-list ("i" "type" "name") 1327 . 1340))
          ("BOOST_MPL_AUX_TEMPLATE_ARITY_SPEC" (spp-arg-list ("i" "name") 1628 . 1637) . 
              ((NAMESPACE "namespace" 1640 . 1649) (symbol "aux" 1650 . 1653) (semantic-list "{ \\
template< BOOST_MPL_PP_PARAMS(i,typename T) > \\
struct template_arity< name<BOOST_MPL_PP_PARAMS(i,T)> > \\
    : int_<i> \\
{ \\
}; \\
}" 1654 . 1790)))
          ("BOOST_MPL_AUX_ARITY_SPEC_HPP_INCLUDED")
          )

    )
   (semanticdb-table "na_assert.hpp"
    :major-mode 'c++-mode
    :tags 
        '( ("BOOST_MPL_AUX_NA_ASSERT_HPP_INCLUDED" variable (:constant-flag t) nil [55 91])
            ("boost/mpl/aux_/na.hpp" include (:system-flag t) nil [473 505])
            ("boost/mpl/aux_/config/msvc.hpp" include (:system-flag t) nil [506 547])
            ("boost/mpl/aux_/config/workaround.hpp" include (:system-flag t) nil [548 595])
            ("boost/mpl/assert.hpp" include (:system-flag t) nil [703 737])
            ("BOOST_MPL_AUX_ASSERT_NOT_NA" variable (:constant-flag t) nil [749 776]))          
    :file "na_assert.hpp"
    :pointmax 1045
    :fsize 1044
    :lastmodtime '(17765 48454)
    :unmatched-syntax 'nil
    :lexical-table 
        '(("BOOST_MPL_AUX_NA_ASSERT_HPP_INCLUDED")
          ("BOOST_MPL_AUX_ASSERT_NOT_NA" (spp-arg-list ("x") 776 . 779) . ((symbol "BOOST_MPL_ASSERT_NOT" 786 . 806) (semantic-list "((boost::mpl::is_na<type>))" 806 . 833)))
          )

    )
   (semanticdb-table "arg_typedef.hpp"
    :major-mode 'c++-mode
    :tags 
        '( ("BOOST_MPL_AUX_ARG_TYPEDEF_HPP_INCLUDED" variable (:constant-flag t) nil [57 95])
            ("boost/mpl/aux_/config/lambda.hpp" include (:system-flag t) nil [479 522])
            ("boost/mpl/aux_/config/workaround.hpp" include (:system-flag t) nil [523 570])
            ("BOOST_MPL_AUX_ARG_TYPEDEF" variable (:constant-flag t) nil [697 722]))          
    :file "arg_typedef.hpp"
    :pointmax 865
    :fsize 864
    :lastmodtime '(17765 48453)
    :unmatched-syntax 'nil
    :lexical-table 
        '(("BOOST_MPL_AUX_ARG_TYPEDEF_HPP_INCLUDED")
          ("BOOST_MPL_AUX_ARG_TYPEDEF" (spp-arg-list ("T" "name") 722 . 731) . 
              ((TYPEDEF "typedef" 732 . 739) (symbol "T" 740 . 741) (symbol "name" 742 . 746) (punctuation ";" 746 . 747)))
          )

    )
   (semanticdb-table "has_apply.hpp"
    :major-mode 'c++-mode
    :tags 
        '( ("BOOST_MPL_AUX_HAS_APPLY_HPP_INCLUDED" variable (:constant-flag t) nil [55 91])
            ("boost/mpl/has_xxx.hpp" include (:system-flag t) nil [468 500])
            ("boost/mpl/aux_/config/has_apply.hpp" include (:system-flag t) nil [501 547])
            ("boost" type
               (:members 
                  ( ("mpl" type
                       (:members 
                          ( ("aux" type (:type "namespace") (reparse-symbol namespacesubparts) [583 803]))                          
                        :type "namespace")
                        (reparse-symbol namespacesubparts) [567 804]))                  
                :type "namespace")
                nil [549 805]))          
    :file "has_apply.hpp"
    :pointmax 854
    :fsize 853
    :lastmodtime '(17765 48454)
    :unmatched-syntax '((semantic-list 673 . 698) (symbol 640 . 673))
    :lexical-table 
        '(("BOOST_MPL_AUX_HAS_APPLY_HPP_INCLUDED")
          )

    )
   (semanticdb-table "msvc_never_true.hpp"
    :major-mode 'c++-mode
    :tags 
        '( ("BOOST_MPL_AUX_MSVC_NEVER_TRUE_HPP_INCLUDED" variable (:constant-flag t) nil [61 103])
            ("boost/mpl/aux_/config/msvc.hpp" include (:system-flag t) nil [491 532])
            ("boost/mpl/aux_/config/workaround.hpp" include (:system-flag t) nil [533 580])
            ("boost" type
               (:members 
                  ( ("mpl" type
                       (:members 
                          ( ("aux" type
                               (:members 
                                  ( ("msvc_never_true" type
                                       (:template 
                                          ( ("T" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :members 
                                          ( ("" type
                                               (:members 
                                                  ( ("value" variable
                                                       (:constant-flag t
                                                        :default-value (743 750)
                                                        :type "int")
                                                        (reparse-symbol enumsubparts) [735 750]))                                                  
                                                :type "enum")
                                                (reparse-symbol classsubparts) [728 751]))                                          )
                                        (reparse-symbol namespacesubparts) [676 754]))                                  
                                :type "namespace")
                                (reparse-symbol namespacesubparts) [659 757]))                          
                        :type "namespace")
                        (reparse-symbol namespacesubparts) [643 758]))                  
                :type "namespace")
                nil [625 759]))          
    :file "msvc_never_true.hpp"
    :pointmax 836
    :fsize 835
    :lastmodtime '(17765 48453)
    :unmatched-syntax 'nil
    :lexical-table 
        '(("BOOST_MPL_AUX_MSVC_NEVER_TRUE_HPP_INCLUDED")
          )

    )
   (semanticdb-table "msvc_dtw.hpp"
    :major-mode 'c++-mode
    :tags 
        '( ("boost/mpl/aux_/preprocessor/params.hpp" include (:system-flag t) nil [451 500])
            ("AUX778076_DTW_PARAMS" variable (:constant-flag t) nil [564 584])
            ("AUX778076_DTW_ORIGINAL_NAME" variable (:constant-flag t) nil [667 694])
            ("AUX778076_MSVC_DTW_NAME" type
               (:template 
                  ( ("F" type (:type "class") nil nil))                  
                :type "struct"
                :members 
                  ( ("f_" type
                       (:template 
                          ( ("bool" type nil nil nil))                          
                        :type "struct"
                        :superclasses 
                          ( ("F" type
                               (:protection "unspecified"
                                :type "class")
                                nil nil))                          )
                        (reparse-symbol classsubparts) [898 932])
                    ("f_" type
                       (:type "struct"
                        :members 
                          ( ("AUX778076_DTW_ORIGINAL_NAME" type
                               (:members 
                                  ( ("type" type
                                       (:typedef ("int")
                                        :superclasses "int"
                                        :type "typedef")
                                        (reparse-symbol classsubparts) [1113 1130]))                                  
                                :type "struct")
                                (reparse-symbol classsubparts) [1056 1141]))                          
                        :template-specifier 
                          ( ("true" type nil nil nil))                          )
                        (reparse-symbol classsubparts) [937 1148]))                  )
                nil [839 1487])
            ("AUX778076_MSVC_DTW_ORIGINAL_NAME" variable (:type "int") nil [1607 1649]))          
    :file "msvc_dtw.hpp"
    :pointmax 1828
    :fsize 1827
    :lastmodtime '(17765 48454)
    :unmatched-syntax '((punctuation 1658 . 1659) (close-paren 1657 . 1658) (TEMPLATE 1598 . 1606) (punctuation 1597 . 1598) (punctuation 1596 . 1597) (punctuation 1582 . 1583) (symbol 1576 . 1581) (punctuation 1575 . 1576) (punctuation 1574 . 1575) (punctuation 1573 . 1574) (symbol 1572 . 1573) (punctuation 1571 . 1572) (symbol 1556 . 1571) (punctuation 1555 . 1556) (punctuation 1554 . 1555) (symbol 1551 . 1554) (punctuation 1549 . 1550) (symbol 1547 . 1549) (punctuation 1545 . 1546) (symbol 1529 . 1536) (STRUCT 1522 . 1528) (punctuation 1520 . 1521) (INT 1516 . 1519) (punctuation 1514 . 1515) (symbol 1512 . 1513) (TYPENAME 1503 . 1511) (punctuation 1501 . 1502) (TEMPLATE 1493 . 1501) (punctuation 1350 . 1351) (semantic-list 1343 . 1350) (punctuation 1337 . 1338) (semantic-list 1333 . 1336) (symbol 1313 . 1333) (punctuation 1311 . 1312) (symbol 1284 . 1311) (TEMPLATE 1275 . 1283) (punctuation 1274 . 1275) (punctuation 1273 . 1274) (punctuation 1259 . 1260) (symbol 1253 . 1258) (punctuation 1252 . 1253) (punctuation 1251 . 1252) (punctuation 1250 . 1251) (symbol 1249 . 1250) (punctuation 1248 . 1249) (symbol 1233 . 1248) (punctuation 1232 . 1233) (punctuation 1231 . 1232) (symbol 1228 . 1231) (punctuation 1226 . 1227) (symbol 1224 . 1226) (punctuation 1222 . 1223) (symbol 1206 . 1213) (STRUCT 1199 . 1205) (punctuation 1197 . 1198) (semantic-list 1184 . 1196) (symbol 1164 . 1184) (punctuation 1162 . 1163) (TEMPLATE 1154 . 1162) (punctuation 1054 . 1055) (semantic-list 1041 . 1053) (symbol 1021 . 1041) (punctuation 1019 . 1020) (TEMPLATE 1011 . 1019))
    )
   (semanticdb-table "full_lambda.hpp"
    :major-mode 'c++-mode
    :tags 
        '( ("BOOST_MPL_AUX_FULL_LAMBDA_HPP_INCLUDED" variable (:constant-flag t) nil [113 151])
            ("boost/mpl/lambda_fwd.hpp" include (:system-flag t) nil [579 617])
            ("boost/mpl/bind_fwd.hpp" include (:system-flag t) nil [618 654])
            ("boost/mpl/protect.hpp" include (:system-flag t) nil [655 690])
            ("boost/mpl/quote.hpp" include (:system-flag t) nil [691 724])
            ("boost/mpl/arg.hpp" include (:system-flag t) nil [725 756])
            ("boost/mpl/bool.hpp" include (:system-flag t) nil [757 789])
            ("boost/mpl/int_fwd.hpp" include (:system-flag t) nil [790 825])
            ("boost/mpl/aux_/template_arity.hpp" include (:system-flag t) nil [826 873])
            ("boost/mpl/aux_/na_spec.hpp" include (:system-flag t) nil [874 914])
            ("boost/mpl/aux_/config/ttp.hpp" include (:system-flag t) nil [915 958])
            ("boost/mpl/aux_/lambda_arity_param.hpp" include (:system-flag t) nil [1080 1128])
            ("boost/mpl/aux_/config/use_preprocessed.hpp" include (:system-flag t) nil [1129 1182])
            ("BOOST_MPL_PREPROCESSED_HEADER" variable (:constant-flag t) nil [1296 1325])
            ("boost/mpl/aux_/include_preprocessed.hpp" include (:system-flag t) nil [1342 1395])
            ("i_" variable (:constant-flag t) nil [5738 5740])
            ("aux" type
               (:members 
                  ( ("AUX778076_RESULT" variable (:constant-flag t) (reparse-symbol namespacesubparts) [5810 5826])
                    ("AUX778076_TYPE" variable (:constant-flag t) (reparse-symbol namespacesubparts) [5951 5965])
                    ("BOOST_PP_CAT" function
                       (:arguments 
                          ( ("" variable (:type ("le_result" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [6258 6268])
                            ("" variable (:type ("i_" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [6268 6271]))                          
                        :type "int")
                        (reparse-symbol namespacesubparts) [6245 6393]))                  
                :type "namespace")
                nil [5782 6873])
            ("AUX778076_LAMBDA_TYPEDEF" variable (:constant-flag t) nil [6904 6928])
            ("AUX778076_IS_LE_TYPEDEF" variable (:constant-flag t) nil [7070 7093])
            ("AUX778076_IS_LAMBDA_EXPR" variable (:constant-flag t) nil [7245 7269]))          
    :file "full_lambda.hpp"
    :pointmax 8713
    :fsize 8712
    :lastmodtime '(17765 48454)
    :unmatched-syntax '((punctuation 8668 . 8669) (semantic-list 8499 . 8668) (punctuation 8497 . 8498) (semantic-list 8464 . 8488) (symbol 8443 . 8464) (punctuation 8486 . 8487) (semantic-list 8482 . 8486) (punctuation 8469 . 8470) (symbol 8431 . 8434) (punctuation 8486 . 8487) (semantic-list 8482 . 8486) (punctuation 8469 . 8470) (punctuation 8429 . 8430) (punctuation 8419 . 8420) (semantic-list 8412 . 8419) (symbol 8389 . 8412) (symbol 8387 . 8388) (punctuation 8386 . 8387) (semantic-list 8377 . 8386) (symbol 8365 . 8377) (punctuation 8353 . 8354) (symbol 8347 . 8353) (STRUCT 8340 . 8346) (punctuation 8338 . 8339) (symbol 8330 . 8333) (TYPENAME 8321 . 8329) (punctuation 8319 . 8320) (semantic-list 8298 . 8314) (symbol 8275 . 8298) (symbol 8273 . 8274) (TYPENAME 8264 . 8272) (punctuation 8256 . 8257) (TEMPLATE 8248 . 8256) (punctuation 8121 . 8122) (semantic-list 7648 . 8121) (punctuation 7646 . 7647) (semantic-list 7627 . 7637) (symbol 7606 . 7627) (symbol 7594 . 7597) (punctuation 7592 . 7593) (punctuation 7582 . 7583) (semantic-list 7575 . 7582) (symbol 7552 . 7575) (punctuation 7551 . 7552) (symbol 7550 . 7551) (punctuation 7537 . 7538) (symbol 7531 . 7537) (STRUCT 7524 . 7530) (punctuation 7522 . 7523) (symbol 7514 . 7517) (TYPENAME 7505 . 7513) (punctuation 7503 . 7504) (semantic-list 7482 . 7498) (symbol 7459 . 7482) (punctuation 7457 . 7458) (symbol 7451 . 7452) (CLASS 7445 . 7450) (punctuation 7443 . 7444) (semantic-list 7426 . 7442) (symbol 7403 . 7426) (punctuation 7401 . 7402) (TEMPLATE 7393 . 7401) (punctuation 7385 . 7386) (TEMPLATE 7377 . 7385) (punctuation 6816 . 6817) (semantic-list 6623 . 6816) (punctuation 6621 . 6622) (semantic-list 6613 . 6620) (symbol 6590 . 6613) (punctuation 6589 . 6590) (symbol 6588 . 6589) (punctuation 6587 . 6588) (symbol 6584 . 6587) (punctuation 6583 . 6584) (symbol 6578 . 6583) (punctuation 6576 . 6577) (semantic-list 6562 . 6576) (symbol 6550 . 6562) (STRUCT 6543 . 6549) (close-paren 6575 . 6576) (symbol 6573 . 6575) (punctuation 6572 . 6573) (symbol 6563 . 6572) (open-paren 6562 . 6563) (close-paren 6575 . 6576) (symbol 6573 . 6575) (punctuation 6572 . 6573) (symbol 6563 . 6572) (open-paren 6562 . 6563) (punctuation 6541 . 6542) (semantic-list 6520 . 6536) (symbol 6497 . 6520) (punctuation 6495 . 6496) (symbol 6489 . 6490) (CLASS 6483 . 6488) (punctuation 6481 . 6482) (semantic-list 6464 . 6480) (symbol 6441 . 6464) (punctuation 6439 . 6440) (TEMPLATE 6431 . 6439) (punctuation 6429 . 6430) (symbol 6421 . 6424) (TYPENAME 6412 . 6420) (punctuation 6404 . 6405) (TEMPLATE 6396 . 6404) (punctuation 6393 . 6394) (STRUCT 6238 . 6244) (close-paren 6270 . 6271) (symbol 6268 . 6270) (punctuation 6267 . 6268) (symbol 6258 . 6267) (open-paren 6257 . 6258) (close-paren 6270 . 6271) (symbol 6268 . 6270) (punctuation 6267 . 6268) (symbol 6258 . 6267) (open-paren 6257 . 6258) (punctuation 6236 . 6237) (semantic-list 6215 . 6231) (symbol 6192 . 6215) (punctuation 6190 . 6191) (symbol 6184 . 6185) (CLASS 6178 . 6183) (punctuation 6176 . 6177) (semantic-list 6159 . 6175) (symbol 6136 . 6159) (punctuation 6134 . 6135) (TEMPLATE 6126 . 6134) (punctuation 6124 . 6125) (symbol 6116 . 6119) (TYPENAME 6107 . 6115) (punctuation 6105 . 6106) (symbol 6101 . 6105) (TYPENAME 6092 . 6100) (punctuation 6084 . 6085) (TEMPLATE 6076 . 6084))
    :lexical-table 
        '(("BOOST_MPL_PREPROCESSED_HEADER" . 
              ((symbol "full_lambda" 1326 . 1337) (punctuation "." 1337 . 1338) (symbol "hpp" 1338 . 1341)))
          ("BOOST_MPL_AUX_FULL_LAMBDA_HPP_INCLUDED")
          )

    )
   (semanticdb-table "type_wrapper.hpp"
    :major-mode 'c++-mode
    :tags 
        '( ("BOOST_MPL_AUX_TYPE_WRAPPER_HPP_INCLUDED" variable (:constant-flag t) nil [58 97])
            ("boost/mpl/aux_/config/ctps.hpp" include (:system-flag t) nil [517 558])
            ("boost" type
               (:members 
                  ( ("mpl" type
                       (:members 
                          ( ("aux" type
                               (:members 
                                  ( ("type_wrapper" type
                                       (:template 
                                          ( ("T" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :members 
                                          ( ("type" type
                                               (:typedef ("T" type (:type "class") nil nil)
                                                :superclasses "T"
                                                :type "typedef")
                                                (reparse-symbol classsubparts) [660 675]))                                          )
                                        (reparse-symbol namespacesubparts) [611 678])
                                    ("wrapped_type" type
                                       (:template 
                                          ( ("T" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :prototype t)
                                        (reparse-symbol namespacesubparts) [987 1030])
                                    ("wrapped_type" type
                                       (:template 
                                          ( ("T" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :members 
                                          ( ("type" type
                                               (:typedef ("T" type (:type "class") nil nil)
                                                :superclasses "T"
                                                :type "typedef")
                                                (reparse-symbol classsubparts) [1100 1115]))                                          
                                        :template-specifier 
                                          ( ("type_wrapper" type nil nil nil))                                          )
                                        (reparse-symbol namespacesubparts) [1032 1118]))                                  
                                :type "namespace")
                                (reparse-symbol namespacesubparts) [594 1217]))                          
                        :type "namespace")
                        (reparse-symbol namespacesubparts) [578 1218]))                  
                :type "namespace")
                nil [560 1219]))          
    :file "type_wrapper.hpp"
    :pointmax 1271
    :fsize 1270
    :lastmodtime '(17765 48453)
    :unmatched-syntax 'nil
    :lexical-table 
        '(("BOOST_MPL_AUX_TYPE_WRAPPER_HPP_INCLUDED")
          )

    )
   (semanticdb-table "yes_no.hpp"
    :major-mode 'c++-mode
    :tags 
        '( ("BOOST_MPL_AUX_YES_NO_HPP_INCLUDED" variable (:constant-flag t) nil [52 85])
            ("boost/mpl/aux_/nttp_decl.hpp" include (:system-flag t) nil [464 503])
            ("boost/mpl/aux_/config/arrays.hpp" include (:system-flag t) nil [504 547])
            ("boost/mpl/aux_/config/msvc.hpp" include (:system-flag t) nil [548 589])
            ("boost/mpl/aux_/config/workaround.hpp" include (:system-flag t) nil [590 637])
            ("boost" type
               (:members 
                  ( ("mpl" type
                       (:members 
                          ( ("aux" type
                               (:members 
                                  ( ("yes_no_tag" type
                                       (:template 
                                          ( ("bool" type nil nil nil))                                          
                                        :type "struct"
                                        :members 
                                          ( ("type" type
                                               (:typedef ("no_tag" type (:type "class") nil nil)
                                                :superclasses "no_tag"
                                                :type "typedef")
                                                (reparse-symbol classsubparts) [791 811]))                                          )
                                        (reparse-symbol namespacesubparts) [747 814])
                                    ("yes_no_tag" type
                                       (:type "struct"
                                        :members 
                                          ( ("type" type
                                               (:typedef ("yes_tag" type (:type "class") nil nil)
                                                :superclasses "yes_tag"
                                                :type "typedef")
                                                (reparse-symbol classsubparts) [857 878]))                                          
                                        :template-specifier 
                                          ( ("true" type nil nil nil))                                          )
                                        (reparse-symbol namespacesubparts) [816 881])
                                    ("weighted_tag" type (:type "struct") (reparse-symbol namespacesubparts) [929 1086]))                                  
                                :type "namespace")
                                (reparse-symbol namespacesubparts) [674 1217]))                          
                        :type "namespace")
                        (reparse-symbol namespacesubparts) [658 1218]))                  
                :type "namespace")
                nil [640 1219]))          
    :file "yes_no.hpp"
    :pointmax 1265
    :fsize 1264
    :lastmodtime '(17765 48454)
    :unmatched-syntax '((punctuation 1021 . 1022) (semantic-list 1018 . 1021) (semantic-list 1011 . 1018) (CHAR 1006 . 1010) (TYPEDEF 998 . 1005) (punctuation 927 . 928) (semantic-list 917 . 926) (symbol 894 . 917) (punctuation 892 . 893) (TEMPLATE 884 . 892) (punctuation 744 . 745) (semantic-list 741 . 744) (semantic-list 731 . 741) (CHAR 726 . 730) (TYPEDEF 718 . 725) (punctuation 716 . 717) (semantic-list 713 . 716) (semantic-list 704 . 713) (CHAR 699 . 703) (TYPEDEF 691 . 698))
    :lexical-table 
        '(("BOOST_MPL_AUX_YES_NO_HPP_INCLUDED")
          )

    )
   (semanticdb-table "template_arity.hpp"
    :major-mode 'c++-mode
    :tags 
        '( ("BOOST_MPL_AUX_TEMPLATE_ARITY_HPP_INCLUDED" variable (:constant-flag t) nil [116 157])
            ("boost/mpl/aux_/config/ttp.hpp" include (:system-flag t) nil [545 585])
            ("boost/mpl/aux_/config/lambda.hpp" include (:system-flag t) nil [586 629])
            ("boost/mpl/aux_/template_arity_fwd.hpp" include (:system-flag t) nil [674 725])
            ("boost/mpl/int.hpp" include (:system-flag t) nil [726 757])
            ("boost/mpl/aux_/config/static_constant.hpp" include (:system-flag t) nil [1015 1067])
            ("boost/mpl/aux_/config/use_preprocessed.hpp" include (:system-flag t) nil [1068 1121])
            ("BOOST_MPL_PREPROCESSED_HEADER" variable (:constant-flag t) nil [1235 1264])
            ("boost/mpl/aux_/include_preprocessed.hpp" include (:system-flag t) nil [1284 1337]))          
    :file "template_arity.hpp"
    :pointmax 4809
    :fsize 4808
    :lastmodtime '(17765 48454)
    :unmatched-syntax 'nil
    :lexical-table 
        '(("BOOST_MPL_AUX_TEMPLATE_ARITY_HPP_INCLUDED")
          ("BOOST_MPL_PREPROCESSED_HEADER" . 
              ((symbol "template_arity" 1265 . 1279) (punctuation "." 1279 . 1280) (symbol "hpp" 1280 . 1283)))
          )

    )
   (semanticdb-table "has_type.hpp"
    :major-mode 'c++-mode
    :tags 
        '( ("BOOST_MPL_AUX_HAS_TYPE_HPP_INCLUDED" variable (:constant-flag t) nil [54 89])
            ("boost/mpl/has_xxx.hpp" include (:system-flag t) nil [470 502])
            ("boost" type
               (:members 
                  ( ("mpl" type
                       (:members 
                          ( ("aux" type (:type "namespace") (reparse-symbol namespacesubparts) [538 611]))                          
                        :type "namespace")
                        (reparse-symbol namespacesubparts) [522 612]))                  
                :type "namespace")
                nil [504 613]))          
    :file "has_type.hpp"
    :pointmax 661
    :fsize 660
    :lastmodtime '(17765 48454)
    :unmatched-syntax '((semantic-list 587 . 609) (symbol 554 . 587))
    :lexical-table 
        '(("BOOST_MPL_AUX_HAS_TYPE_HPP_INCLUDED")
          )

    )
   (semanticdb-table "common_name_wknd.hpp"
    :major-mode 'c++-mode
    :tags 
        '( ("BOOST_MPL_AUX_COMMON_NAME_WKND_HPP_INCLUDED" variable (:constant-flag t) nil [62 105])
            ("boost/mpl/aux_/config/workaround.hpp" include (:system-flag t) nil [494 541])
            ("BOOST_MPL_AUX_COMMON_NAME_WKND" variable (:constant-flag t) nil [717 747]))          
    :file "common_name_wknd.hpp"
    :pointmax 967
    :fsize 966
    :lastmodtime '(17765 48453)
    :unmatched-syntax 'nil
    :lexical-table 
        '(("BOOST_MPL_AUX_COMMON_NAME_WKND" (spp-arg-list ("name") 747 . 753) . 
              ((NAMESPACE "namespace" 756 . 765) (spp-symbol-merge ((symbol "name_" 766 . 771) (symbol "wknd" 773 . 777)) 766 . 777) (semantic-list "{ \\
template< typename > void name(); \\
}" 778 . 819)))
          ("BOOST_MPL_AUX_COMMON_NAME_WKND_HPP_INCLUDED")
          )

    )
   )
  :file "!usr!include!boost!mpl!aux_!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.0"
  )
