;; Object config/
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "config/"
  :tables (list 
   (semanticdb-table "static_constant.hpp"
    :major-mode 'c++-mode
    :tags 
        '( ("BOOST_MPL_AUX_CONFIG_STATIC_CONSTANT_HPP_INCLUDED" variable (:constant-flag t) nil [68 117])
            ("boost/config.hpp" include (:system-flag t) nil [597 627]))          
    :file "static_constant.hpp"
    :pointmax 780
    :fsize 779
    :lastmodtime '(18399 46989)
    :unmatched-syntax 'nil
    :lexical-table 
        '(("BOOST_MPL_AUX_CONFIG_STATIC_CONSTANT_HPP_INCLUDED")
          )

    )
   (semanticdb-table "lambda.hpp"
    :major-mode 'c++-mode
    :tags 
        '( ("BOOST_MPL_AUX_CONFIG_LAMBDA_HPP_INCLUDED" variable (:constant-flag t) nil [59 99])
            ("boost/mpl/aux_/config/ttp.hpp" include (:system-flag t) nil [485 525])
            ("boost/mpl/aux_/config/ctps.hpp" include (:system-flag t) nil [526 567])
            ("BOOST_MPL_CFG_NO_FULL_LAMBDA_SUPPORT" variable (:constant-flag t) nil [904 940]))          
    :file "lambda.hpp"
    :pointmax 1001
    :fsize 1000
    :lastmodtime '(18399 46989)
    :unmatched-syntax 'nil
    :lexical-table 
        '(("BOOST_MPL_AUX_CONFIG_LAMBDA_HPP_INCLUDED")
          ("BOOST_MPL_CFG_NO_FULL_LAMBDA_SUPPORT")
          )

    )
   (semanticdb-table "overload_resolution.hpp"
    :major-mode 'c++-mode
    :tags 
        '( ("BOOST_MPL_AUX_CONFIG_OVERLOAD_RESOLUTION_HPP_INCLUDED" variable (:constant-flag t) nil [72 125])
            ("boost/mpl/aux_/config/workaround.hpp" include (:system-flag t) nil [524 571])
            ("BOOST_MPL_CFG_BROKEN_OVERLOAD_RESOLUTION" variable (:constant-flag t) nil [808 848]))          
    :file "overload_resolution.hpp"
    :pointmax 922
    :fsize 921
    :lastmodtime '(18399 46989)
    :unmatched-syntax 'nil
    :lexical-table 
        '(("BOOST_MPL_AUX_CONFIG_OVERLOAD_RESOLUTION_HPP_INCLUDED")
          ("BOOST_MPL_CFG_BROKEN_OVERLOAD_RESOLUTION")
          )

    )
   (semanticdb-table "ctps.hpp"
    :major-mode 'c++-mode
    :tags 
        '( ("BOOST_MPL_AUX_CONFIG_CTPS_HPP_INCLUDED" variable (:constant-flag t) nil [57 95])
            ("boost/mpl/aux_/config/workaround.hpp" include (:system-flag t) nil [479 526])
            ("boost/config.hpp" include (:system-flag t) nil [527 554])
            ("BOOST_MPL_CFG_NO_NONTYPE_TEMPLATE_PARTIAL_SPEC" variable (:constant-flag t) nil [730 776]))          
    :file "ctps.hpp"
    :pointmax 913
    :fsize 912
    :lastmodtime '(18399 46989)
    :unmatched-syntax 'nil
    :lexical-table 
        '(("BOOST_MPL_CFG_NO_NONTYPE_TEMPLATE_PARTIAL_SPEC")
          ("BOOST_MPL_AUX_CONFIG_CTPS_HPP_INCLUDED")
          )

    )
   (semanticdb-table "workaround.hpp"
    :major-mode 'c++-mode
    :tags 
        '( ("BOOST_MPL_AUX_CONFIG_WORKAROUND_HPP_INCLUDED" variable (:constant-flag t) nil [63 107])
            ("boost/detail/workaround.hpp" include (:system-flag t) nil [497 535]))          
    :file "workaround.hpp"
    :pointmax 592
    :fsize 591
    :lastmodtime '(18399 46989)
    :unmatched-syntax 'nil
    :lexical-table 
        '(("BOOST_MPL_AUX_CONFIG_WORKAROUND_HPP_INCLUDED")
          )

    )
   (semanticdb-table "preprocessor.hpp"
    :major-mode 'c++-mode
    :tags 
        '( ("BOOST_MPL_AUX_CONFIG_PREPROCESSOR_HPP_INCLUDED" variable (:constant-flag t) nil [65 111])
            ("boost/mpl/aux_/config/workaround.hpp" include (:system-flag t) nil [503 550])
            ("BOOST_MPL_CFG_BROKEN_PP_MACRO_EXPANSION" variable (:constant-flag t) nil [815 854])
            ("BOOST_MPL_CFG_NO_OWN_PP_PRIMITIVES" variable (:constant-flag t) nil [924 958])
            ("BOOST_NEEDS_TOKEN_PASTING_OP_FOR_TOKENS_JUXTAPOSING" variable (:constant-flag t) nil [1103 1154]))          
    :file "preprocessor.hpp"
    :pointmax 1221
    :fsize 1220
    :lastmodtime '(18399 46989)
    :unmatched-syntax 'nil
    :lexical-table 
        '(("BOOST_MPL_CFG_BROKEN_PP_MACRO_EXPANSION")
          ("BOOST_MPL_AUX_CONFIG_PREPROCESSOR_HPP_INCLUDED")
          ("BOOST_MPL_CFG_NO_OWN_PP_PRIMITIVES")
          ("BOOST_NEEDS_TOKEN_PASTING_OP_FOR_TOKENS_JUXTAPOSING")
          )

    )
   (semanticdb-table "ttp.hpp"
    :major-mode 'c++-mode
    :tags 
        '( ("BOOST_MPL_AUX_CONFIG_TTP_HPP_INCLUDED" variable (:constant-flag t) nil [56 93])
            ("boost/mpl/aux_/config/msvc.hpp" include (:system-flag t) nil [476 517])
            ("boost/mpl/aux_/config/gcc.hpp" include (:system-flag t) nil [518 558])
            ("boost/mpl/aux_/config/workaround.hpp" include (:system-flag t) nil [559 606])
            ("BOOST_MPL_CFG_NO_TEMPLATE_TEMPLATE_PARAMETERS" variable (:constant-flag t) nil [726 771])
            ("BOOST_MPL_CFG_EXTENDED_TEMPLATE_PARAMETERS_MATCHING" variable (:constant-flag t) nil [1050 1101]))          
    :file "ttp.hpp"
    :pointmax 1159
    :fsize 1158
    :lastmodtime '(18399 46989)
    :unmatched-syntax 'nil
    :lexical-table 
        '(("BOOST_MPL_AUX_CONFIG_TTP_HPP_INCLUDED")
          ("BOOST_MPL_CFG_EXTENDED_TEMPLATE_PARAMETERS_MATCHING")
          ("BOOST_MPL_CFG_NO_TEMPLATE_TEMPLATE_PARAMETERS")
          )

    )
   (semanticdb-table "adl.hpp"
    :major-mode 'c++-mode
    :tags 
        '( ("BOOST_MPL_AUX_CONFIG_ADL_HPP_INCLUDED" variable (:constant-flag t) nil [56 93])
            ("boost/mpl/aux_/config/msvc.hpp" include (:system-flag t) nil [476 517])
            ("boost/mpl/aux_/config/intel.hpp" include (:system-flag t) nil [518 560])
            ("boost/mpl/aux_/config/gcc.hpp" include (:system-flag t) nil [561 601])
            ("boost/mpl/aux_/config/workaround.hpp" include (:system-flag t) nil [602 649])
            ("BOOST_MPL_CFG_NO_ADL_BARRIER_NAMESPACE" variable (:constant-flag t) nil [1393 1431]))          
    :file "adl.hpp"
    :pointmax 1489
    :fsize 1488
    :lastmodtime '(18399 46990)
    :unmatched-syntax 'nil
    :lexical-table 
        '(("BOOST_MPL_CFG_NO_ADL_BARRIER_NAMESPACE")
          ("BOOST_MPL_AUX_CONFIG_ADL_HPP_INCLUDED")
          )

    )
   (semanticdb-table "gcc.hpp"
    :major-mode 'c++-mode
    :tags 
        '( ("BOOST_MPL_AUX_CONFIG_GCC_HPP_INCLUDED" variable (:constant-flag t) nil [56 93])
            ("BOOST_MPL_CFG_GCC" variable (:constant-flag t) nil [533 550]))          
    :file "gcc.hpp"
    :pointmax 679
    :fsize 678
    :lastmodtime '(18399 46989)
    :unmatched-syntax 'nil
    :lexical-table 
        '(("BOOST_MPL_AUX_CONFIG_GCC_HPP_INCLUDED")
          ("BOOST_MPL_CFG_GCC" . ((semantic-list "((__GNUC__ << 8) | __GNUC_MINOR__)" 551 . 585)))
          )

    )
   (semanticdb-table "msvc.hpp"
    :major-mode 'c++-mode
    :tags 
        '( ("BOOST_MPL_AUX_CONFIG_MSVC_HPP_INCLUDED" variable (:constant-flag t) nil [57 95])
            ("boost/config.hpp" include (:system-flag t) nil [511 538]))          
    :file "msvc.hpp"
    :pointmax 589
    :fsize 588
    :lastmodtime '(18399 46990)
    :unmatched-syntax 'nil
    :lexical-table 
        '(("BOOST_MPL_AUX_CONFIG_MSVC_HPP_INCLUDED")
          )

    )
   (semanticdb-table "nttp.hpp"
    :major-mode 'c++-mode
    :tags 
        '( ("BOOST_MPL_AUX_CONFIG_NTTP_HPP_INCLUDED" variable (:constant-flag t) nil [57 95])
            ("boost/mpl/aux_/config/msvc.hpp" include (:system-flag t) nil [479 520])
            ("boost/mpl/aux_/config/workaround.hpp" include (:system-flag t) nil [521 568])
            ("BOOST_MPL_CFG_NTTP_BUG" variable (:constant-flag t) nil [1017 1039]))          
    :file "nttp.hpp"
    :pointmax 1098
    :fsize 1097
    :lastmodtime '(18399 46989)
    :unmatched-syntax 'nil
    :lexical-table 
        '(("BOOST_MPL_AUX_CONFIG_NTTP_HPP_INCLUDED")
          ("BOOST_MPL_CFG_NTTP_BUG")
          )

    )
   (semanticdb-table "intel.hpp"
    :major-mode 'c++-mode
    :tags 
        '( ("BOOST_MPL_AUX_CONFIG_INTEL_HPP_INCLUDED" variable (:constant-flag t) nil [58 97])
            ("boost/config.hpp" include (:system-flag t) nil [522 549]))          
    :file "intel.hpp"
    :pointmax 601
    :fsize 600
    :lastmodtime '(18399 46989)
    :unmatched-syntax 'nil
    :lexical-table 
        '(("BOOST_MPL_AUX_CONFIG_INTEL_HPP_INCLUDED")
          )

    )
   )
  :file "!usr!include!boost!mpl!aux_!config!semantic.cache"
  :semantic-tag-version "2.0pre7"
  :semanticdb-version "2.0pre7"
  )
