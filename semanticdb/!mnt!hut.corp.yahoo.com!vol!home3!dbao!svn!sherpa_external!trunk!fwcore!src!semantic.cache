;; Object src/
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "src/"
  :tables (list 
   (semanticdb-table "StringUtilsCore.cc"
    :major-mode 'c++-mode
    :tags 
        '( ("memory" include (:system-flag t) nil [60 77])
            ("log4cpp/Category.hh" include (:system-flag t) nil [93 123])
            ("yax/hash.h" include (:system-flag t) nil [124 145])
            ("yax/urlhtml.h" include (:system-flag t) nil [146 170])
            ("dht/StringUtilsCore.h" include (:system-flag t) nil [171 203])
            ("dht/SchemaNames.h" include (:system-flag t) nil [204 232])
            ("dht/LogUtils.h" include (:system-flag t) nil [233 258])
            ("log" variable
               (:typemodifiers ("static")
                :default-value "log4cpp::Category::getInstance(\"dht.fwcore.\" __FILE__)"
                :type ("log4cpp::Category" type (:type "class") nil nil))
                nil [260 354])
            ("StringUtilsCore::EMPTY_STRING" variable
               (:constant-flag t
                :default-value "\"\""
                :type ("std::string" type (:type "class") nil nil))
                nil [356 409])
            ("urlEscape" function
               (:parent "StringUtilsCore"
                :arguments 
                  ( ("input" variable
                       (:reference 1
                        :constant-flag t
                        :type ("std::string" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [1437 1463])
                    ("output" variable
                       (:reference 1
                        :type ("std::string" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [1464 1485]))                  
                :type "void")
                nil [1404 1707])
            ("urlEscape" function
               (:parent "StringUtilsCore"
                :arguments 
                  ( ("input" variable
                       (:reference 1
                        :constant-flag t
                        :type ("std::string" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [1749 1775]))                  
                :type ("std::string" type (:type "class") nil nil))
                nil [1709 2008])
            ("urlUnescape" function
               (:parent "StringUtilsCore"
                :arguments 
                  ( ("input" variable
                       (:reference 1
                        :constant-flag t
                        :type ("std::string" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [2045 2071])
                    ("output" variable
                       (:reference 1
                        :type ("std::string" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [2072 2093]))                  
                :type "bool")
                nil [2010 2379])
            ("buildTopicName" function
               (:parent "StringUtilsCore"
                :arguments 
                  ( ("table" variable
                       (:reference 1
                        :constant-flag t
                        :type ("std::string" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [2426 2451])
                    ("tablet" variable
                       (:reference 1
                        :constant-flag t
                        :type ("std::string" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [2467 2493]))                  
                :type ("std::string" type (:type "class") nil nil))
                nil [2381 2580])
            ("buildTopicName" function
               (:parent "StringUtilsCore"
                :arguments 
                  ( ("table" variable
                       (:reference 1
                        :constant-flag t
                        :type ("std::string" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [2620 2645])
                    ("tablet" variable
                       (:reference 1
                        :constant-flag t
                        :type ("std::string" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [2661 2687])
                    ("topic" variable
                       (:reference 1
                        :type ("std::string" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [2703 2722]))                  
                :type "void")
                nil [2582 3109])
            ("parseTopicName" function
               (:parent "StringUtilsCore"
                :arguments 
                  ( ("topic" variable
                       (:reference 1
                        :constant-flag t
                        :type ("std::string" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [3215 3240])
                    ("table" variable
                       (:reference 1
                        :type ("std::string" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [3256 3275])
                    ("tablet" variable
                       (:reference 1
                        :type ("std::string" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [3291 3311]))                  
                :type "bool")
                nil [3177 4500])
            ("convertHexStringToUI32" function
               (:parent "StringUtilsCore"
                :arguments 
                  ( ("value" variable
                       (:reference 1
                        :constant-flag t
                        :type ("std::string" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [4566 4591])
                    ("out" variable
                       (:reference 1
                        :type ("uint32_t" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [4592 4606]))                  
                :type ("CrCode::ResponseCode" type (:type "class") nil nil))
                nil [4504 4873])
            ("convertHexStringToUI64" function
               (:parent "StringUtilsCore"
                :arguments 
                  ( ("value" variable
                       (:reference 1
                        :constant-flag t
                        :type ("std::string" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [4937 4962])
                    ("out" variable
                       (:reference 1
                        :type ("uint64_t" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [4963 4977]))                  
                :type ("CrCode::ResponseCode" type (:type "class") nil nil))
                nil [4875 5249])
            ("convertUI64ToHexString" function
               (:parent "StringUtilsCore"
                :arguments 
                  ( ("val" variable (:type ("uint64_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5305 5319]))                  
                :type ("std::string" type (:type "class") nil nil))
                nil [5251 5358])
            ("convertUI32ToHexString" function
               (:parent "StringUtilsCore"
                :arguments 
                  ( ("val" variable (:type ("uint32_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5414 5428]))                  
                :type ("std::string" type (:type "class") nil nil))
                nil [5360 5467])
            ("convertUI32ToMinimalHexString" function
               (:parent "StringUtilsCore"
                :arguments 
                  ( ("val" variable (:type ("uint32_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5530 5544]))                  
                :type ("std::string" type (:type "class") nil nil))
                nil [5469 5590])
            ("crc32_table" variable
               (:dereference 1
                :typemodifiers ("static")
                :default-value "{
    0x0,        0x4c11db7,  0x9823b6e,  0xd4326d9,
    0x130476dc, 0x17c56b6b, 0x1a864db2, 0x1e475005,
    0x2608edb8, 0x22c9f00f, 0x2f8ad6d6, 0x2b4bcb61,
    0x350c9b64, 0x31cd86d3, 0x3c8ea00a, 0x384fbdbd,
    0x4c11db70, 0x48d0c6c7, 0x4593e01e, 0x4152fda9,
    0x5f15adac, 0x5bd4b01b, 0x569796c2, 0x52568b75,
    0x6a1936c8, 0x6ed82b7f, 0x639b0da6, 0x675a1011,
    0x791d4014, 0x7ddc5da3, 0x709f7b7a, 0x745e66cd,
    0x9823b6e0, 0x9ce2ab57, 0x91a18d8e, 0x95609039,
    0x8b27c03c, 0x8fe6dd8b, 0x82a5fb52, 0x8664e6e5,
    0xbe2b5b58, 0xbaea46ef, 0xb7a96036, 0xb3687d81,
    0xad2f2d84, 0xa9ee3033, 0xa4ad16ea, 0xa06c0b5d,
    0xd4326d90, 0xd0f37027, 0xddb056fe, 0xd9714b49,
    0xc7361b4c, 0xc3f706fb, 0xceb42022, 0xca753d95,
    0xf23a8028, 0xf6fb9d9f, 0xfbb8bb46, 0xff79a6f1,
    0xe13ef6f4, 0xe5ffeb43, 0xe8bccd9a, 0xec7dd02d,
    0x34867077, 0x30476dc0, 0x3d044b19, 0x39c556ae,
    0x278206ab, 0x23431b1c, 0x2e003dc5, 0x2ac12072,
    0x128e9dcf, 0x164f8078, 0x1b0ca6a1, 0x1fcdbb16,
    0x18aeb13,  0x54bf6a4,  0x808d07d,  0xcc9cdca,
    0x7897ab07, 0x7c56b6b0, 0x71159069, 0x75d48dde,
    0x6b93dddb, 0x6f52c06c, 0x6211e6b5, 0x66d0fb02,
    0x5e9f46bf, 0x5a5e5b08, 0x571d7dd1, 0x53dc6066,
    0x4d9b3063, 0x495a2dd4, 0x44190b0d, 0x40d816ba,
    0xaca5c697, 0xa864db20, 0xa527fdf9, 0xa1e6e04e,
    0xbfa1b04b, 0xbb60adfc, 0xb6238b25, 0xb2e29692,
    0x8aad2b2f, 0x8e6c3698, 0x832f1041, 0x87ee0df6,
    0x99a95df3, 0x9d684044, 0x902b669d, 0x94ea7b2a,
    0xe0b41de7, 0xe4750050, 0xe9362689, 0xedf73b3e,
    0xf3b06b3b, 0xf771768c, 0xfa325055, 0xfef34de2,
    0xc6bcf05f, 0xc27dede8, 0xcf3ecb31, 0xcbffd686,
    0xd5b88683, 0xd1799b34, 0xdc3abded, 0xd8fba05a,
    0x690ce0ee, 0x6dcdfd59, 0x608edb80, 0x644fc637,
    0x7a089632, 0x7ec98b85, 0x738aad5c, 0x774bb0eb,
    0x4f040d56, 0x4bc510e1, 0x46863638, 0x42472b8f,
    0x5c007b8a, 0x58c1663d, 0x558240e4, 0x51435d53,
    0x251d3b9e, 0x21dc2629, 0x2c9f00f0, 0x285e1d47,
    0x36194d42, 0x32d850f5, 0x3f9b762c, 0x3b5a6b9b,
    0x315d626,  0x7d4cb91,  0xa97ed48,  0xe56f0ff,
    0x1011a0fa, 0x14d0bd4d, 0x19939b94, 0x1d528623,
    0xf12f560e, 0xf5ee4bb9, 0xf8ad6d60, 0xfc6c70d7,
    0xe22b20d2, 0xe6ea3d65, 0xeba91bbc, 0xef68060b,
    0xd727bbb6, 0xd3e6a601, 0xdea580d8, 0xda649d6f,
    0xc423cd6a, 0xc0e2d0dd, 0xcda1f604, 0xc960ebb3,
    0xbd3e8d7e, 0xb9ff90c9, 0xb4bcb610, 0xb07daba7,
    0xae3afba2, 0xaafbe615, 0xa7b8c0cc, 0xa379dd7b,
    0x9b3660c6, 0x9ff77d71, 0x92b45ba8, 0x9675461f,
    0x8832161a, 0x8cf30bad, 0x81b02d74, 0x857130c3,
    0x5d8a9099, 0x594b8d2e, 0x5408abf7, 0x50c9b640,
    0x4e8ee645, 0x4a4ffbf2, 0x470cdd2b, 0x43cdc09c,
    0x7b827d21, 0x7f436096, 0x7200464f, 0x76c15bf8,
    0x68860bfd, 0x6c47164a, 0x61043093, 0x65c52d24,
    0x119b4be9, 0x155a565e, 0x18197087, 0x1cd86d30,
    0x29f3d35,  0x65e2082,  0xb1d065b,  0xfdc1bec,
    0x3793a651, 0x3352bbe6, 0x3e119d3f, 0x3ad08088,
    0x2497d08d, 0x2056cd3a, 0x2d15ebe3, 0x29d4f654,
    0xc5a92679, 0xc1683bce, 0xcc2b1d17, 0xc8ea00a0,
    0xd6ad50a5, 0xd26c4d12, 0xdf2f6bcb, 0xdbee767c,
    0xe3a1cbc1, 0xe760d676, 0xea23f0af, 0xeee2ed18,
    0xf0a5bd1d, 0xf464a0aa, 0xf9278673, 0xfde69bc4,
    0x89b8fd09, 0x8d79e0be, 0x803ac667, 0x84fbdbd0,
    0x9abc8bd5, 0x9e7d9662, 0x933eb0bb, 0x97ffad0c,
    0xafb010b1, 0xab710d06, 0xa6322bdf, 0xa2f33668,
    0xbcb4666d, 0xb8757bda, 0xb5365d03, 0xb1f740b4,
}"
                :type ("uint32_t" type (:type "class") nil nil))
                nil [5592 8956])
            ("crcHash" function
               (:parent "StringUtilsCore"
                :arguments 
                  ( ("buf" variable
                       (:pointer 1
                        :constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [8993 9010])
                    ("len" variable (:type ("uint32_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [9011 9024]))                  
                :type ("uint32_t" type (:type "class") nil nil))
                nil [8958 9237])
            ("toPrintable" function
               (:parent "StringUtilsCore"
                :arguments 
                  ( ("str" variable
                       (:pointer 1
                        :constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [9281 9297])
                    ("len" variable (:type ("size_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [9298 9309]))                  
                :type ("std::string" type (:type "class") nil nil))
                nil [9239 9741]))          
    :file "StringUtilsCore.cc"
    :pointmax 9945
    :fsize 9945
    :lastmodtime '(20550 20335)
    :unmatched-syntax 'nil
    )
   (semanticdb-table "BrokerMessage.cc"
    :major-mode 'c++-mode
    :tags 
        '( ("dht/BrokerMessage.h" include nil nil [60 90])
            ("dht/UtilityBuffer.h" include nil nil [91 121])
            ("dht/CompressionUtils.h" include nil nil [122 155])
            ("dht/LogUtils.h" include nil nil [156 181])
            ("log4cpp/Category.hh" include (:system-flag t) nil [182 212])
            ("log" variable
               (:typemodifiers ("static")
                :default-value "log4cpp::Category::getInstance(\"dht.fwcore.\" __FILE__)"
                :type ("log4cpp::Category" type (:type "class") nil nil))
                nil [214 308])
            ("BrokerMessage::API_VERSION" variable
               (:constant-flag t
                :default-value "\"2\""
                :type ("std::string" type (:type "class") nil nil))
                nil [596 647])
            ("BrokerMessage::HEADER_API_VERSION" variable
               (:constant-flag t
                :default-value "\"FWB-AV\""
                :type ("std::string" type (:type "class") nil nil))
                nil [719 800])
            ("BrokerMessage::HEADER_BAD_REGION" variable
               (:constant-flag t
                :default-value "\"FWB-BREG\""
                :type ("std::string" type (:type "class") nil nil))
                nil [801 884])
            ("BrokerMessage::HEADER_CLIENT_APP_ID" variable
               (:constant-flag t
                :default-value "\"FWB-CAI\""
                :type ("std::string" type (:type "class") nil nil))
                nil [885 967])
            ("BrokerMessage::HEADER_CHECKSUM" variable
               (:constant-flag t
                :default-value "\"FWB-CKSM\""
                :type ("std::string" type (:type "class") nil nil))
                nil [968 1051])
            ("BrokerMessage::HEADER_COMPRESSED" variable
               (:constant-flag t
                :default-value "\"FWB-COMP\""
                :type ("std::string" type (:type "class") nil nil))
                nil [1052 1135])
            ("BrokerMessage::HEADER_COPY_REGIONS" variable
               (:constant-flag t
                :default-value "\"FWB-CREG\""
                :type ("std::string" type (:type "class") nil nil))
                nil [1136 1219])
            ("BrokerMessage::HEADER_DESTINATION_REGION" variable
               (:constant-flag t
                :default-value "\"FWB-DREG\""
                :type ("std::string" type (:type "class") nil nil))
                nil [1220 1303])
            ("BrokerMessage::HEADER_DESTINATION_SU" variable
               (:constant-flag t
                :default-value "\"FWB-DSU\""
                :type ("std::string" type (:type "class") nil nil))
                nil [1304 1386])
            ("BrokerMessage::HEADER_GOOD_REGION" variable
               (:constant-flag t
                :default-value "\"FWB-GREG\""
                :type ("std::string" type (:type "class") nil nil))
                nil [1387 1470])
            ("BrokerMessage::HEADER_INDEX_RECORD" variable
               (:constant-flag t
                :default-value "\"FWB-IREC\""
                :type ("std::string" type (:type "class") nil nil))
                nil [1471 1554])
            ("BrokerMessage::HEADER_INDEX_TABLE" variable
               (:constant-flag t
                :default-value "\"FWB-ITAB\""
                :type ("std::string" type (:type "class") nil nil))
                nil [1555 1638])
            ("BrokerMessage::HEADER_IS_MAJOR_OVERRIDE" variable
               (:constant-flag t
                :default-value "\"FWB-MAJOV\""
                :type ("std::string" type (:type "class") nil nil))
                nil [1639 1723])
            ("BrokerMessage::HEADER_NEW_JSON_PARSER" variable
               (:constant-flag t
                :default-value "\"FWB-NWJP\""
                :type ("std::string" type (:type "class") nil nil))
                nil [1724 1807])
            ("BrokerMessage::HEADER_NOTIFICATION" variable
               (:constant-flag t
                :default-value "\"FWB-NOTF\""
                :type ("std::string" type (:type "class") nil nil))
                nil [1808 1891])
            ("BrokerMessage::HEADER_NOTIFICATION_PAYLOAD" variable
               (:constant-flag t
                :default-value "\"FWB-NPAY\""
                :type ("std::string" type (:type "class") nil nil))
                nil [1892 1975])
            ("BrokerMessage::HEADER_OVERRIDE_ISSUE_TIMESTAMP" variable
               (:constant-flag t
                :default-value "\"FWB-OVTIM\""
                :type ("std::string" type (:type "class") nil nil))
                nil [1976 2060])
            ("BrokerMessage::HEADER_PUBLISHER_REGION" variable
               (:constant-flag t
                :default-value "\"FWB-PREG\""
                :type ("std::string" type (:type "class") nil nil))
                nil [2061 2144])
            ("BrokerMessage::HEADER_PUBLISH_TIME" variable
               (:constant-flag t
                :default-value "\"FWB-PTIM\""
                :type ("std::string" type (:type "class") nil nil))
                nil [2145 2228])
            ("BrokerMessage::HEADER_PUBLISHER" variable
               (:constant-flag t
                :default-value "\"FWB-PUB\""
                :type ("std::string" type (:type "class") nil nil))
                nil [2229 2311])
            ("BrokerMessage::HEADER_RECIPIENTS" variable
               (:constant-flag t
                :default-value "\"FWB-RCPS\""
                :type ("std::string" type (:type "class") nil nil))
                nil [2312 2395])
            ("BrokerMessage::HEADER_RECORD" variable
               (:constant-flag t
                :default-value "\"FWB-REC\""
                :type ("std::string" type (:type "class") nil nil))
                nil [2396 2478])
            ("BrokerMessage::HEADER_REPUBLISH" variable
               (:constant-flag t
                :default-value "\"FWB-REPUB\""
                :type ("std::string" type (:type "class") nil nil))
                nil [2479 2563])
            ("BrokerMessage::HEADER_RESTORE_ID" variable
               (:constant-flag t
                :default-value "\"FWB-RESID\""
                :type ("std::string" type (:type "class") nil nil))
                nil [2564 2648])
            ("BrokerMessage::HEADER_SEQUENCE_ID" variable
               (:constant-flag t
                :default-value "\"FWB-SEQ\""
                :type ("std::string" type (:type "class") nil nil))
                nil [2653 2735])
            ("BrokerMessage::HEADER_SNAPSHOT_ID" variable
               (:constant-flag t
                :default-value "\"FWB-SNID\""
                :type ("std::string" type (:type "class") nil nil))
                nil [2736 2819])
            ("BrokerMessage::HEADER_SPLIT_ID" variable
               (:constant-flag t
                :default-value "\"FWB-SPID\""
                :type ("std::string" type (:type "class") nil nil))
                nil [2820 2903])
            ("BrokerMessage::HEADER_SPLIT_COORDINATOR" variable
               (:constant-flag t
                :default-value "\"FWB-SPCO\""
                :type ("std::string" type (:type "class") nil nil))
                nil [2908 2991])
            ("BrokerMessage::HEADER_SPLIT_POINT" variable
               (:constant-flag t
                :default-value "\"FWB-SPPT\""
                :type ("std::string" type (:type "class") nil nil))
                nil [2992 3075])
            ("BrokerMessage::HEADER_SPLIT_LIST_OF_REGIONS" variable
               (:constant-flag t
                :default-value "\"FWB-SPLR\""
                :type ("std::string" type (:type "class") nil nil))
                nil [3076 3159])
            ("BrokerMessage::HEADER_IS_PROXY_EOT" variable
               (:constant-flag t
                :default-value "\"FWB-SPPX\""
                :type ("std::string" type (:type "class") nil nil))
                nil [3160 3243])
            ("BrokerMessage::HEADER_USE_SSL" variable
               (:constant-flag t
                :default-value "\"FWB-SSL\""
                :type ("std::string" type (:type "class") nil nil))
                nil [3244 3326])
            ("BrokerMessage::HEADER_SOURCE_SU" variable
               (:constant-flag t
                :default-value "\"FWB-SSU\""
                :type ("std::string" type (:type "class") nil nil))
                nil [3327 3409])
            ("BrokerMessage::HEADER_IS_STUB" variable
               (:constant-flag t
                :default-value "\"FWB-STUB\""
                :type ("std::string" type (:type "class") nil nil))
                nil [3410 3493])
            ("BrokerMessage::HEADER_SU_TO_ACTIVATE" variable
               (:constant-flag t
                :default-value "\"FWB-SUTA\""
                :type ("std::string" type (:type "class") nil nil))
                nil [3494 3577])
            ("BrokerMessage::HEADER_TABLE" variable
               (:constant-flag t
                :default-value "\"FWB-TAB\""
                :type ("std::string" type (:type "class") nil nil))
                nil [3578 3660])
            ("BrokerMessage::HEADER_TABLET" variable
               (:constant-flag t
                :default-value "\"FWB-TBT\""
                :type ("std::string" type (:type "class") nil nil))
                nil [3661 3743])
            ("BrokerMessage::HEADER_TRIGGER" variable
               (:constant-flag t
                :default-value "\"FWB-TRIG\""
                :type ("std::string" type (:type "class") nil nil))
                nil [3744 3827])
            ("BrokerMessage::HEADER_USER_INPUT" variable
               (:constant-flag t
                :default-value "\"FWB-UINP\""
                :type ("std::string" type (:type "class") nil nil))
                nil [3828 3911])
            ("BrokerMessage::HEADER_UNCERTAIN_RECORD_MARK_COUNTER" variable
               (:constant-flag t
                :default-value "\"FWB-URMC\""
                :type ("std::string" type (:type "class") nil nil))
                nil [3912 3995])
            ("std" using (:type ("std" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [3997 4017])
            ("getHdrNames" function
               (:parent "BrokerMessage"
                :arguments 
                  ( ("hdrNames" variable
                       (:reference 1
                        :type ("std::vector" type
                             (:template-specifier 
                                ( ("std::string" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol arg-sub-list) [4052 4091]))                  
                :type "void")
                nil [4019 5915])
            ("getHdrDescriptor" function
               (:parent "BrokerMessage"
                :arguments 
                  ( ("desc" variable
                       (:reference 1
                        :type ("HeaderDescriptor" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [5955 5979]))                  
                :type "void")
                nil [5917 8744])
            ("BrokerMessage::CONFLICT_RESOLUTION" variable
               (:constant-flag t
                :default-value "\"conflict_resolution\""
                :type ("std::string" type (:type "class") nil nil))
                nil [8746 8823])
            ("BrokerMessage::MASTERED_BAD_CONFLICT" variable
               (:constant-flag t
                :default-value "\"mastered_bad_conflict\""
                :type ("std::string" type (:type "class") nil nil))
                nil [8824 8905])
            ("BrokerMessage::MERGING_MAJOR_CONFLICT" variable
               (:constant-flag t
                :default-value "\"merging_major_conflict\""
                :type ("std::string" type (:type "class") nil nil))
                nil [8906 8989])
            ("BrokerMessage::TRUE_STR" variable
               (:constant-flag t
                :default-value "\"true\""
                :type ("std::string" type (:type "class") nil nil))
                nil [8991 9042])
            ("BrokerMessage::FALSE_STR" variable
               (:constant-flag t
                :default-value "\"false\""
                :type ("std::string" type (:type "class") nil nil))
                nil [9043 9096])
            ("BrokerMessage" function
               (:constructor-flag t
                :parent "BrokerMessage"
                :type ("BrokerMessage" type (:type "class") nil nil))
                nil [9098 9227])
            ("BrokerMessage" function
               (:constructor-flag t
                :parent "BrokerMessage"
                :arguments 
                  ( ("bmsg" variable
                       (:reference 1
                        :constant-flag t
                        :type ("BrokerMessage" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [9259 9285]))                  
                :type ("BrokerMessage" type (:type "class") nil nil))
                nil [9229 9334])
            ("BrokerMessage" function
               (:destructor-flag t
                :parent "BrokerMessage"
                :type "void")
                nil [9336 9372])
            ("copy" function
               (:pointer 1
                :parent "BrokerMessage"
                :type ("BrokerMessage" type (:type "class") nil nil))
                nil [9374 9458])
            ("isApiVersion1OrHigher" function
               (:parent "BrokerMessage"
                :type "bool")
                nil [9460 9671])
            ("attachBody" function
               (:parent "BrokerMessage"
                :arguments 
                  ( ("buf" variable
                       (:pointer 1
                        :type "char")
                        (reparse-symbol arg-sub-list) [9705 9715])
                    ("size" variable (:type ("size_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [9716 9728])
                    ("shouldOwn" variable (:type "bool") (reparse-symbol arg-sub-list) [9729 9744])
                    ("compressionUtils" variable
                       (:reference 1
                        :type ("CompressionUtils" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [9745 9781])
                    ("testHookCompFailEnabled" variable (:type "bool") (reparse-symbol arg-sub-list) [9782 9811]))                  
                :type "void")
                nil [9673 11767])
            ("checksumCompare" function
               (:parent "BrokerMessage"
                :arguments 
                  ( ("compareWith" variable (:type ("uint32_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [11822 11843]))                  
                :type ("CrCode::ResponseCode" type (:type "class") nil nil))
                nil [11769 12354])
            ("deserializeBody" function
               (:parent "BrokerMessage"
                :arguments 
                  ( ("data" variable
                       (:pointer 1
                        :constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [12409 12426])
                    ("bodySize" variable (:type ("size_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [12427 12443])
                    ("overallSize" variable (:type ("uint32_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [12444 12465]))                  
                :type ("CrCode::ResponseCode" type (:type "class") nil nil))
                nil [12356 12550])
            ("deserializeBody" function
               (:parent "BrokerMessage"
                :arguments 
                  ( ("data" variable
                       (:pointer 1
                        :constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [12605 12622])
                    ("bodySize" variable (:type ("size_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [12623 12639])
                    ("overallSize" variable (:type ("uint32_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [12640 12661])
                    ("shouldCopy" variable (:type "bool") (reparse-symbol arg-sub-list) [12662 12678]))                  
                :type ("CrCode::ResponseCode" type (:type "class") nil nil))
                nil [12552 12797])
            ("isApiVersion2OrHigher" function
               (:parent "BrokerMessage"
                :type "bool")
                nil [12799 13047])
            ("getTable" function
               (:parent "BrokerMessage"
                :constant-flag t
                :type ("std::string" type (:type "class") nil nil))
                nil [13049 13155])
            ("setTable" function
               (:parent "BrokerMessage"
                :arguments 
                  ( ("table" variable
                       (:reference 1
                        :constant-flag t
                        :type ("std::string" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [13186 13211]))                  
                :type "void")
                nil [13157 13312])
            ("getIndexTable" function
               (:parent "BrokerMessage"
                :constant-flag t
                :type ("std::string" type (:type "class") nil nil))
                nil [13314 13431])
            ("setIndexTable" function
               (:parent "BrokerMessage"
                :arguments 
                  ( ("index_table" variable
                       (:reference 1
                        :constant-flag t
                        :type ("std::string" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [13467 13498]))                  
                :type "void")
                nil [13433 13618])
            ("getIndexRecord" function
               (:parent "BrokerMessage"
                :constant-flag t
                :type ("std::string" type (:type "class") nil nil))
                nil [13620 13739])
            ("setIndexRecord" function
               (:parent "BrokerMessage"
                :arguments 
                  ( ("index_record" variable
                       (:reference 1
                        :constant-flag t
                        :type ("std::string" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [13776 13808]))                  
                :type "void")
                nil [13741 13931])
            ("getTablet" function
               (:parent "BrokerMessage"
                :constant-flag t
                :type ("std::string" type (:type "class") nil nil))
                nil [13933 14040])
            ("setTablet" function
               (:parent "BrokerMessage"
                :arguments 
                  ( ("tablet" variable
                       (:reference 1
                        :constant-flag t
                        :type ("std::string" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [14072 14098]))                  
                :type "void")
                nil [14042 14202])
            ("getRecord" function
               (:parent "BrokerMessage"
                :constant-flag t
                :type ("std::string" type (:type "class") nil nil))
                nil [14204 14312])
            ("setRecord" function
               (:parent "BrokerMessage"
                :arguments 
                  ( ("record" variable
                       (:reference 1
                        :constant-flag t
                        :type ("std::string" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [14344 14370]))                  
                :type "void")
                nil [14314 14474])
            ("getTopic" function
               (:parent "BrokerMessage"
                :constant-flag t
                :type ("std::string" type (:type "class") nil nil))
                nil [14476 14548])
            ("setTopic" function
               (:parent "BrokerMessage"
                :arguments 
                  ( ("topic" variable
                       (:constant-flag t
                        :type ("std::string" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [14579 14603]))                  
                :type "void")
                nil [14550 14627])
            ("getPublisher" function
               (:parent "BrokerMessage"
                :constant-flag t
                :type ("std::string" type (:type "class") nil nil))
                nil [14629 14741])
            ("setPublisher" function
               (:parent "BrokerMessage"
                :arguments 
                  ( ("publisher" variable
                       (:reference 1
                        :constant-flag t
                        :type ("std::string" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [14776 14805]))                  
                :type "void")
                nil [14743 14919])
            ("getPublishTime" function
               (:parent "BrokerMessage"
                :constant-flag t
                :type ("std::string" type (:type "class") nil nil))
                nil [14921 15039])
            ("setPublishTime" function
               (:parent "BrokerMessage"
                :arguments 
                  ( ("hextimestring" variable
                       (:reference 1
                        :constant-flag t
                        :type ("std::string" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [15077 15110]))                  
                :type "void")
                nil [15041 15234])
            ("setMessageId" function
               (:parent "BrokerMessage"
                :arguments 
                  ( ("smsgId" variable
                       (:reference 1
                        :constant-flag t
                        :type ("std::string" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [15286 15312]))                  
                :type ("CrCode::ResponseCode" type (:type "class") nil nil))
                nil [15236 15355])
            ("getMessageId" function
               (:parent "BrokerMessage"
                :constant-flag t
                :type ("std::string" type (:type "class") nil nil))
                nil [15357 15450])
            ("clearInternal" function
               (:parent "BrokerMessage"
                :type "void")
                nil [15452 15509])
            ("clear" function
               (:parent "BrokerMessage"
                :type "void")
                nil [15511 15663])
            ("setRecipients" function
               (:parent "BrokerMessage"
                :arguments 
                  ( ("recipients" variable
                       (:reference 1
                        :constant-flag t
                        :type ("std::string" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [15700 15731]))                  
                :type "void")
                nil [15665 15818])
            ("getRecipients" function
               (:parent "BrokerMessage"
                :constant-flag t
                :type ("std::string" type (:type "class") nil nil))
                nil [15820 15922])
            ("getTrigger" function
               (:parent "BrokerMessage"
                :arguments 
                  ( ("trigger" variable
                       (:reference 1
                        :type ("MessageTrigger" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [15972 15996]))                  
                :type ("CrCode::ResponseCode" type (:type "class") nil nil))
                nil [15924 16551])
            ("setTrigger" function
               (:parent "BrokerMessage"
                :arguments 
                  ( ("trigger" variable
                       (:constant-flag t
                        :type ("MessageTrigger" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [16585 16614]))                  
                :type "void")
                nil [16553 16730])
            ("setTabletSplitInfo" function
               (:parent "BrokerMessage"
                :arguments 
                  ( ("splitId" variable
                       (:reference 1
                        :constant-flag t
                        :type ("std::string" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [16772 16799])
                    ("coordinator" variable
                       (:reference 1
                        :constant-flag t
                        :type ("std::string" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [16799 16830])
                    ("splitPoint" variable
                       (:reference 1
                        :constant-flag t
                        :type ("std::string" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [16850 16880])
                    ("listOfRegions" variable
                       (:reference 1
                        :constant-flag t
                        :type ("std::string" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [16880 16913]))                  
                :type "void")
                nil [16732 17295])
            ("<<" function
               (:operator-flag t
                :arguments 
                  ( ("ostr" variable
                       (:reference 1
                        :type ("std::ostream" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [17322 17341])
                    ("msg" variable
                       (:reference 1
                        :constant-flag t
                        :type ("BrokerMessage" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [17341 17366]))                  
                :type ("std::ostream" type (:type "class") nil nil))
                nil [17297 17535])
            ("decompressBodyAndChecksum" function
               (:parent "BrokerMessage"
                :arguments 
                  ( ("compressionUtils" variable
                       (:reference 1
                        :type ("CompressionUtils" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [17600 17636])
                    ("testHookDecompFailEnabled" variable (:type "bool") (reparse-symbol arg-sub-list) [17637 17668]))                  
                :type ("CrCode::ResponseCode" type (:type "class") nil nil))
                nil [17537 19089]))          
    :file "BrokerMessage.cc"
    :pointmax 19277
    :fsize 19276
    :lastmodtime '(20550 20335)
    :unmatched-syntax 'nil
    )
   )
  :file "!mnt!hut.corp.yahoo.com!vol!home3!dbao!svn!sherpa_external!trunk!fwcore!src!semantic.cache"
  :semantic-tag-version "2.0pre7"
  :semanticdb-version "2.0pre7"
  )
