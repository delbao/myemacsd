;; Object simulator/
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "simulator/"
  :tables (list 
   (semanticdb-table "LbSimControllerTransport.h"
    :major-mode 'c++-mode
    :tags 
        '( ("LB_SIM_CONTROLLER_TRANSPORT_H" variable (:constant-flag t) nil [106 135])
            ("dht/ControllerTransport.h" include (:system-flag t) nil [137 173])
            ("dht/data.h" include (:system-flag t) nil [174 195])
            ("MySQLImpl.h" include nil nil [196 218])
            ("LbJobSchema.h" include (:system-flag t) nil [219 243])
            ("MapStrUI64" type
               (:typedef ("std::map" type
                     (:template-specifier 
                        ( ("std::string" type nil nil nil)
                          ("uint64_t" type nil nil nil))                        
                      :type "class")
                      nil nil)
                :superclasses "std::map"
                :type "typedef")
                nil [245 296])
            ("MapStrUI64Iter" type
               (:typedef ("std::map::iterator" type (:type "class") nil nil)
                :superclasses "std::map::iterator"
                :type "typedef")
                nil [297 362])
            ("MapStrUI64CIter" type
               (:typedef ("std::map::const_iterator" type (:type "class") nil nil)
                :superclasses "std::map::const_iterator"
                :type "typedef")
                nil [363 435])
            ("JobStatus" type
               (:members 
                  ( ("JOB_RUNNING" variable
                       (:constant-flag t
                        :default-value (472 473)
                        :type "int")
                        (reparse-symbol enumsubparts) [458 473])
                    ("JOB_DONE" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [479 488]))                  
                :type "enum")
                nil [437 491])
            ("LbSimControllerTransport" type
               (:superclasses 
                  ( ("ControllerTransport" type
                       (:protection "public"
                        :type "class")
                        nil nil))                  
                :members 
                  ( ("public" label nil (reparse-symbol classsubparts) [559 566])
                    ("s_copyRateMbPS" variable
                       (:typemodifiers ("static")
                        :constant-flag t
                        :type "double")
                        (reparse-symbol classsubparts) [571 606])
                    ("s_splitExecTime" variable
                       (:typemodifiers ("static")
                        :constant-flag t
                        :type ("uint64_t" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [611 649])
                    ("LbSimControllerTransport" function
                       (:prototype-flag t
                        :constructor-flag t
                        :type ("LbSimControllerTransport" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [655 682])
                    ("LbSimControllerTransport" function
                       (:prototype-flag t
                        :destructor-flag t
                        :typemodifiers ("virtual")
                        :type "void")
                        (reparse-symbol classsubparts) [688 724])
                    ("ping" function
                       (:prototype-flag t
                        :typemodifiers ("virtual")
                        :arguments 
                          ( ("forwardToPrimary" variable (:type "bool") (reparse-symbol arg-sub-list) [764 786])
                            ("response" variable
                               (:reference 1
                                :type ("DHT::Data" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [825 845]))                          
                        :type ("LbCode::ResponseCode" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [730 846])
                    ("getStorageUnits" function
                       (:prototype-flag t
                        :typemodifiers ("virtual")
                        :arguments 
                          ( ("bank" variable
                               (:reference 1
                                :constant-flag t
                                :type ("std::string" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [897 921])
                            ("response" variable
                               (:reference 1
                                :type ("DHT::Data" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [971 991]))                          
                        :type ("LbCode::ResponseCode" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [852 992])
                    ("getStorageTablets" function
                       (:prototype-flag t
                        :typemodifiers ("virtual")
                        :arguments 
                          ( ("storageUnit" variable
                               (:reference 1
                                :constant-flag t
                                :type ("std::string" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [1080 1111])
                            ("response" variable
                               (:reference 1
                                :type ("DHT::Data" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [1146 1166]))                          
                        :type ("LbCode::ResponseCode" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [998 1167])
                    ("getTCRegionName" function
                       (:prototype-flag t
                        :typemodifiers ("virtual")
                        :arguments 
                          ( ("region" variable
                               (:reference 1
                                :type ("std::string" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [1222 1242]))                          
                        :type ("FwCode::ResponseCode" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [1177 1243])
                    ("splitTablet" function
                       (:prototype-flag t
                        :typemodifiers ("virtual")
                        :arguments 
                          ( ("table" variable
                               (:reference 1
                                :constant-flag t
                                :type ("std::string" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [1290 1315])
                            ("tablet" variable
                               (:reference 1
                                :constant-flag t
                                :type ("std::string" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [1361 1387])
                            ("splitPoint" variable
                               (:reference 1
                                :constant-flag t
                                :type ("std::string" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [1433 1463])
                            ("response" variable
                               (:reference 1
                                :type ("DHT::Data" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [1509 1529]))                          
                        :type ("FwCode::ResponseCode" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [1249 1530])
                    ("copyTablet" function
                       (:prototype-flag t
                        :typemodifiers ("virtual")
                        :arguments 
                          ( ("table" variable
                               (:reference 1
                                :constant-flag t
                                :type ("std::string" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [1575 1600])
                            ("tablet" variable
                               (:reference 1
                                :constant-flag t
                                :type ("std::string" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [1645 1671])
                            ("src" variable
                               (:reference 1
                                :constant-flag t
                                :type ("std::string" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [1716 1739])
                            ("dest" variable
                               (:reference 1
                                :constant-flag t
                                :type ("std::string" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [1784 1808])
                            ("srcRegion" variable
                               (:reference 1
                                :constant-flag t
                                :type ("std::string" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [1853 1882])
                            ("copyType" variable
                               (:reference 1
                                :constant-flag t
                                :type ("std::string" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [1927 1955])
                            ("response" variable
                               (:reference 1
                                :type ("DHT::Data" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [2000 2020]))                          
                        :type ("FwCode::ResponseCode" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [1535 2021])
                    ("getCopyCompleted" function
                       (:prototype-flag t
                        :typemodifiers ("virtual")
                        :arguments 
                          ( ("snapshotId" variable
                               (:reference 1
                                :constant-flag t
                                :type ("std::string" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [2072 2102])
                            ("response" variable
                               (:reference 1
                                :type ("DHT::Data" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [2102 2122]))                          
                        :type ("FwCode::ResponseCode" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [2026 2123])
                    ("getSplitStatus" function
                       (:prototype-flag t
                        :typemodifiers ("virtual")
                        :arguments 
                          ( ("table" variable
                               (:reference 1
                                :constant-flag t
                                :type ("std::string" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [2168 2193])
                            ("tablet" variable
                               (:reference 1
                                :constant-flag t
                                :type ("std::string" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [2193 2219])
                            ("detailedInfo" variable (:type "bool") (reparse-symbol arg-sub-list) [2264 2282])
                            ("response" variable
                               (:reference 1
                                :type ("DHT::Data" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [2282 2302]))                          
                        :type ("FwCode::ResponseCode" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [2124 2303])
                    ("calcSplitPoint" function
                       (:prototype-flag t
                        :arguments 
                          ( ("table" variable
                               (:reference 1
                                :constant-flag t
                                :type ("std::string" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [2345 2370])
                            ("tablet" variable
                               (:reference 1
                                :constant-flag t
                                :type ("std::string" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [2371 2397])
                            ("splitPoint" variable
                               (:reference 1
                                :type ("std::string" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [2438 2462]))                          
                        :type ("LbCode::ResponseCode" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [2309 2463])
                    ("getSplitPoint" function
                       (:prototype-flag t
                        :arguments 
                          ( ("table" variable
                               (:reference 1
                                :constant-flag t
                                :type ("std::string" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [2503 2528])
                            ("tablet" variable
                               (:reference 1
                                :constant-flag t
                                :type ("std::string" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [2528 2554])
                            ("splitPoint" variable
                               (:reference 1
                                :type ("std::string" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [2594 2618]))                          
                        :type ("LbCode::ResponseCode" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [2468 2619])
                    ("getHashSplitPoint" function
                       (:prototype-flag t
                        :arguments 
                          ( ("table" variable
                               (:reference 1
                                :constant-flag t
                                :type ("std::string" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [2668 2693])
                            ("tablet" variable
                               (:reference 1
                                :constant-flag t
                                :type ("std::string" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [2737 2763])
                            ("splitPoint" variable
                               (:reference 1
                                :type ("std::string" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [2807 2831]))                          
                        :type ("LbCode::ResponseCode" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [2629 2832])
                    ("getOrderedSplitPoint" function
                       (:prototype-flag t
                        :arguments 
                          ( ("table" variable
                               (:reference 1
                                :constant-flag t
                                :type ("std::string" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [2880 2905])
                            ("tablet" variable
                               (:reference 1
                                :constant-flag t
                                :type ("std::string" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [2952 2978])
                            ("splitPoint" variable
                               (:reference 1
                                :type ("std::string" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [3025 3049]))                          
                        :type ("LbCode::ResponseCode" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [2838 3050])
                    ("isTaskInProgress" function
                       (:prototype-flag t
                        :arguments 
                          ( ("table" variable
                               (:reference 1
                                :constant-flag t
                                :type ("std::string" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [3082 3107])
                            ("tablet" variable
                               (:reference 1
                                :constant-flag t
                                :type ("std::string" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [3107 3133]))                          
                        :type "bool")
                        (reparse-symbol classsubparts) [3060 3134])
                    ("getChildrenNames" function
                       (:prototype-flag t
                        :arguments 
                          ( ("parent" variable
                               (:reference 1
                                :constant-flag t
                                :type ("std::string" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [3162 3188])
                            ("splitPoint" variable
                               (:reference 1
                                :constant-flag t
                                :type ("std::string" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [3189 3219])
                            ("leftChild" variable
                               (:reference 1
                                :type ("std::string" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [3246 3269])
                            ("rightChild" variable
                               (:reference 1
                                :type ("std::string" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [3269 3293]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [3140 3294])
                    ("getHashChildren" function
                       (:prototype-flag t
                        :arguments 
                          ( ("parent" variable
                               (:reference 1
                                :constant-flag t
                                :type ("std::string" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [3321 3347])
                            ("splitPoint" variable
                               (:reference 1
                                :constant-flag t
                                :type ("std::string" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [3348 3378])
                            ("leftChild" variable
                               (:reference 1
                                :type ("std::string" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [3404 3427])
                            ("rightChild" variable
                               (:reference 1
                                :type ("std::string" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [3427 3451]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [3300 3452])
                    ("getOrderedChildren" function
                       (:prototype-flag t
                        :arguments 
                          ( ("parent" variable
                               (:reference 1
                                :constant-flag t
                                :type ("std::string" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [3481 3507])
                            ("splitPoint" variable
                               (:reference 1
                                :constant-flag t
                                :type ("std::string" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [3508 3538])
                            ("leftChild" variable
                               (:reference 1
                                :type ("std::string" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [3567 3590])
                            ("rightChild" variable
                               (:reference 1
                                :type ("std::string" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [3590 3614]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [3457 3615])
                    ("private" label nil (reparse-symbol classsubparts) [3617 3625])
                    ("pendingSplits_" variable
                       (:typemodifiers ("static")
                        :type ("MapStrUI64" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [3773 3806])
                    ("mysql_" variable (:type ("MySQLImpl" type (:type "class") nil nil)) (reparse-symbol classsubparts) [3811 3829]))                  
                :type "class")
                nil [497 3832]))          
    :file "LbSimControllerTransport.h"
    :pointmax 4065
    :fsize 4064
    :lastmodtime '(20328 58301)
    :unmatched-syntax 'nil
    :lexical-table 
        '(("LB_SIM_CONTROLLER_TRANSPORT_H")
          )

    )
   (semanticdb-table "LbSimContext.cc"
    :major-mode 'c++-mode
    :tags 
        '( ("math.h" include (:system-flag t) nil [60 77])
            ("LoadBalancer.h" include nil nil [79 104])
            ("LbSimContext.h" include nil nil [105 130])
            ("LbSimControllerTransport.h" include (:system-flag t) nil [131 168])
            ("dht/test_wrappers.h" include (:system-flag t) nil [169 199])
            ("LB_CONFIG_FILE" variable (:constant-flag t) nil [269 283])
            ("LBSIM_CONFIG_FILE" variable (:constant-flag t) nil [346 363])
            ("LBSIM_CONFIG_SECTION" variable (:constant-flag t) nil [397 417])
            ("CONFIG_REGION" variable (:constant-flag t) nil [442 455])
            ("CONFIG_REGION_DEFAULT" variable (:constant-flag t) nil [473 494])
            ("CONFIG_TOTAL_BANK_COUNT" variable (:constant-flag t) nil [516 539])
            ("CONFIG_TOTAL_BANK_COUNT_DEFAULT" variable (:constant-flag t) nil [567 598])
            ("CONFIG_STORAGE_ENGINES" variable (:constant-flag t) nil [609 631])
            ("CONFIG_STORAGE_ENGINES_DEFAULT" variable (:constant-flag t) nil [658 688])
            ("CONFIG_MIN_SUS_PER_BANK" variable (:constant-flag t) nil [719 742])
            ("CONFIG_MIN_SUS_PER_BANK_DEFAULT" variable (:constant-flag t) nil [770 801])
            ("CONFIG_MAX_SUS_PER_BANK" variable (:constant-flag t) nil [812 835])
            ("CONFIG_MAX_SUS_PER_BANK_DEFAULT" variable (:constant-flag t) nil [863 894])
            ("CONFIG_MIN_TABLES_PER_BANK" variable (:constant-flag t) nil [906 932])
            ("CONFIG_MIN_TABLES_PER_BANK_DEFAULT" variable (:constant-flag t) nil [963 997])
            ("CONFIG_MAX_TABLES_PER_BANK" variable (:constant-flag t) nil [1008 1034])
            ("CONFIG_MAX_TABLES_PER_BANK_DEFAULT" variable (:constant-flag t) nil [1065 1099])
            ("CONFIG_MIN_TABLETS_PER_TABLE" variable (:constant-flag t) nil [1111 1139])
            ("CONFIG_MIN_TABLETS_PER_TABLE_DEFAULT" variable (:constant-flag t) nil [1172 1208])
            ("CONFIG_MAX_TABLETS_PER_TABLE" variable (:constant-flag t) nil [1219 1247])
            ("CONFIG_MAX_TABLETS_PER_TABLE_DEFAULT" variable (:constant-flag t) nil [1280 1316])
            ("CONFIG_MIN_HASHBITS_PER_TABLE" variable (:constant-flag t) nil [1328 1357])
            ("CONFIG_MIN_HASHBITS_PER_TABLE_DEFAULT" variable (:constant-flag t) nil [1391 1428])
            ("CONFIG_MAX_HASHBITS_PER_TABLE" variable (:constant-flag t) nil [1439 1468])
            ("CONFIG_MAX_HASHBITS_PER_TABLE_DEFAULT" variable (:constant-flag t) nil [1502 1539])
            ("CONFIG_MIN_NORMAL_TABLET_LOAD" variable (:constant-flag t) nil [1551 1580])
            ("CONFIG_MIN_NORMAL_TABLET_LOAD_DEFAULT" variable (:constant-flag t) nil [1614 1651])
            ("CONFIG_MAX_NORMAL_TABLET_LOAD" variable (:constant-flag t) nil [1664 1693])
            ("CONFIG_MAX_NORMAL_TABLET_LOAD_DEFAULT" variable (:constant-flag t) nil [1727 1764])
            ("CONFIG_MIN_COLD_TABLET_LOAD" variable (:constant-flag t) nil [1777 1804])
            ("CONFIG_MIN_COLD_TABLET_LOAD_DEFAULT" variable (:constant-flag t) nil [1836 1871])
            ("CONFIG_MAX_COLD_TABLET_LOAD" variable (:constant-flag t) nil [1884 1911])
            ("CONFIG_MAX_COLD_TABLET_LOAD_DEFAULT" variable (:constant-flag t) nil [1943 1978])
            ("CONFIG_MIN_HOT_TABLET_LOAD" variable (:constant-flag t) nil [1991 2017])
            ("CONFIG_MIN_HOT_TABLET_LOAD_DEFAULT" variable (:constant-flag t) nil [2048 2082])
            ("CONFIG_MAX_HOT_TABLET_LOAD" variable (:constant-flag t) nil [2095 2121])
            ("CONFIG_MAX_HOT_TABLET_LOAD_DEFAULT" variable (:constant-flag t) nil [2152 2186])
            ("CONFIG_MIN_HOT_SU" variable (:constant-flag t) nil [2200 2217])
            ("CONFIG_MIN_HOT_SU_DEFAULT" variable (:constant-flag t) nil [2239 2264])
            ("CONFIG_MAX_HOT_SU" variable (:constant-flag t) nil [2276 2293])
            ("CONFIG_MAX_HOT_SU_DEFAULT" variable (:constant-flag t) nil [2315 2340])
            ("CONFIG_MIN_COLD_SU" variable (:constant-flag t) nil [2352 2370])
            ("CONFIG_MIN_COLD_SU_DEFAULT" variable (:constant-flag t) nil [2393 2419])
            ("CONFIG_MAX_COLD_SU" variable (:constant-flag t) nil [2431 2449])
            ("CONFIG_MAX_COLD_SU_DEFAULT" variable (:constant-flag t) nil [2472 2498])
            ("CONFIG_MIN_EMPTY_SU" variable (:constant-flag t) nil [2510 2529])
            ("CONFIG_MIN_EMPTY_SU_DEFAULT" variable (:constant-flag t) nil [2553 2580])
            ("CONFIG_MAX_EMPTY_SU" variable (:constant-flag t) nil [2591 2610])
            ("CONFIG_MAX_EMPTY_SU_DEFAULT" variable (:constant-flag t) nil [2634 2661])
            ("CONFIG_MIN_HOT_TABLETS_PER_HOT_SU" variable (:constant-flag t) nil [2674 2707])
            ("CONFIG_MIN_HOT_TABLETS_PER_HOT_SU_DEFAULT" variable (:constant-flag t) nil [2745 2786])
            ("CONFIG_MAX_HOT_TABLETS_PER_HOT_SU" variable (:constant-flag t) nil [2798 2831])
            ("CONFIG_MAX_HOT_TABLETS_PER_HOT_SU_DEFAULT" variable (:constant-flag t) nil [2869 2910])
            ("CONFIG_MIN_HOT_TABLETS_PER_OTHER_SU" variable (:constant-flag t) nil [2922 2957])
            ("CONFIG_MIN_HOT_TABLETS_PER_OTHER_SU_DEFAULT" variable (:constant-flag t) nil [2997 3040])
            ("CONFIG_MAX_HOT_TABLETS_PER_OTHER_SU" variable (:constant-flag t) nil [3051 3086])
            ("CONFIG_MAX_HOT_TABLETS_PER_OTHER_SU_DEFAULT" variable (:constant-flag t) nil [3126 3169])
            ("CONFIG_MIN_COLD_TABLETS_PER_COLD_SU" variable (:constant-flag t) nil [3182 3217])
            ("CONFIG_MIN_COLD_TABLETS_PER_COLD_SU_DEFAULT" variable (:constant-flag t) nil [3257 3300])
            ("CONFIG_MAX_COLD_TABLETS_PER_COLD_SU" variable (:constant-flag t) nil [3312 3347])
            ("CONFIG_MAX_COLD_TABLETS_PER_COLD_SU_DEFAULT" variable (:constant-flag t) nil [3387 3430])
            ("CONFIG_MIN_COLD_TABLETS_PER_OTHER_SU" variable (:constant-flag t) nil [3442 3478])
            ("CONFIG_MIN_COLD_TABLETS_PER_OTHER_SU_DEFAULT" variable (:constant-flag t) nil [3519 3563])
            ("CONFIG_MAX_COLD_TABLETS_PER_OTHER_SU" variable (:constant-flag t) nil [3574 3610])
            ("CONFIG_MAX_COLD_TABLETS_PER_OTHER_SU_DEFAULT" variable (:constant-flag t) nil [3651 3695])
            ("CONFIG_MIN_NORMAL_TABLET_SIZE_IN_MEG" variable (:constant-flag t) nil [3708 3744])
            ("CONFIG_MIN_NORMAL_TABLET_SIZE_IN_MEG_DEFAULT" variable (:constant-flag t) nil [3785 3829])
            ("CONFIG_MAX_NORMAL_TABLET_SIZE_IN_MEG" variable (:constant-flag t) nil [3852 3888])
            ("CONFIG_MAX_NORMAL_TABLET_SIZE_IN_MEG_DEFAULT" variable (:constant-flag t) nil [3929 3973])
            ("CONFIG_MIN_BIG_TABLET_SIZE_IN_MEG" variable (:constant-flag t) nil [3996 4029])
            ("CONFIG_MIN_BIG_TABLET_SIZE_IN_MEG_DEFAULT" variable (:constant-flag t) nil [4067 4108])
            ("CONFIG_MAX_BIG_TABLET_SIZE_IN_MEG" variable (:constant-flag t) nil [4131 4164])
            ("CONFIG_MAX_BIG_TABLET_SIZE_IN_MEG_DEFAULT" variable (:constant-flag t) nil [4202 4243])
            ("CONFIG_MIN_BIG_TABLETS_PER_SU" variable (:constant-flag t) nil [4266 4295])
            ("CONFIG_MIN_BIG_TABLETS_PER_SU_DEFAULT" variable (:constant-flag t) nil [4329 4366])
            ("CONFIG_MAX_BIG_TABLETS_PER_SU" variable (:constant-flag t) nil [4377 4406])
            ("CONFIG_MAX_BIG_TABLETS_PER_SU_DEFAULT" variable (:constant-flag t) nil [4440 4477])
            ("CONFIG_AVERAGE_REQUEST_PER_SU" variable (:constant-flag t) nil [4489 4518])
            ("CONFIG_AVERAGE_REQUEST_PER_SU_DEFAULT" variable (:constant-flag t) nil [4552 4589])
            ("getSimInstance" function
               (:parent "LbSimContext"
                :type ("LbSimContext" type (:type "class") nil nil))
                nil [4595 4777])
            ("LbSimContext" function
               (:constructor-flag t
                :parent "LbSimContext"
                :type ("LbSimContext" type (:type "class") nil nil))
                nil [4779 4868])
            ("LbSimContext" function
               (:destructor-flag t
                :parent "LbSimContext"
                :type "void")
                nil [4870 4904])
            ("init" function
               (:parent "LbSimContext"
                :type ("LbCode::ResponseCode" type (:type "class") nil nil))
                nil [4906 15300])
            ("getRegionName" function
               (:parent "LbSimContext"
                :type ("std::string" type (:type "class") nil nil))
                nil [15302 15368])
            ("getStorageEngines" function
               (:parent "LbSimContext"
                :type ("std::string" type (:type "class") nil nil))
                nil [15370 15448])
            ("getBankCount" function
               (:parent "LbSimContext"
                :type ("uint32_t" type (:type "class") nil nil))
                nil [15450 15515])
            ("getSusPerBank" function
               (:parent "LbSimContext"
                :type ("uint32_t" type (:type "class") nil nil))
                nil [15559 15663])
            ("getTableCount" function
               (:parent "LbSimContext"
                :type ("uint32_t" type (:type "class") nil nil))
                nil [15703 15813])
            ("getTabletCount" function
               (:parent "LbSimContext"
                :type ("uint32_t" type (:type "class") nil nil))
                nil [15854 15971])
            ("getHashbits" function
               (:parent "LbSimContext"
                :type ("uint32_t" type (:type "class") nil nil))
                nil [16008 16124])
            ("getEmptySuCount" function
               (:parent "LbSimContext"
                :arguments 
                  ( ("suCount" variable (:type ("uint32_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [16195 16212]))                  
                :type ("uint32_t" type (:type "class") nil nil))
                nil [16155 16344])
            ("getHotSuCount" function
               (:parent "LbSimContext"
                :arguments 
                  ( ("suCount" variable (:type ("uint32_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [16411 16428]))                  
                :type ("uint32_t" type (:type "class") nil nil))
                nil [16373 16556])
            ("getColdSuCount" function
               (:parent "LbSimContext"
                :arguments 
                  ( ("suCount" variable (:type ("uint32_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [16625 16642]))                  
                :type ("uint32_t" type (:type "class") nil nil))
                nil [16586 16771])
            ("getHotSuHotTabletFraction" function
               (:parent "LbSimContext"
                :type "double")
                nil [16820 16958])
            ("getOtherSuHotTabletFraction" function
               (:parent "LbSimContext"
                :type "double")
                nil [17009 17153])
            ("getColdSuColdTabletFraction" function
               (:parent "LbSimContext"
                :type "double")
                nil [17204 17348])
            ("getOtherSuColdTabletFraction" function
               (:parent "LbSimContext"
                :type "double")
                nil [17400 17547])
            ("getBigTabletFraction" function
               (:parent "LbSimContext"
                :type "double")
                nil [17585 17712])
            ("getNormalTabletLoad" function
               (:parent "LbSimContext"
                :type "double")
                nil [17747 17870])
            ("getColdTabletLoad" function
               (:parent "LbSimContext"
                :type "double")
                nil [17903 18020])
            ("getHotTabletLoad" function
               (:parent "LbSimContext"
                :type "double")
                nil [18052 18166])
            ("getNormalTabletSize" function
               (:parent "LbSimContext"
                :type ("uint64_t" type (:type "class") nil nil))
                nil [18201 18333])
            ("getBigTabletSize" function
               (:parent "LbSimContext"
                :type ("uint64_t" type (:type "class") nil nil))
                nil [18365 18488])
            ("getControllerTransport" function
               (:parent "LbSimContext"
                :arguments 
                  ( ("ctrl" variable
                       (:reference 1
                        :type ("ControllerTransportAutoPtr" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [18549 18582]))                  
                :type ("LbCode::ResponseCode" type (:type "class") nil nil))
                nil [18490 18710])
            ("incrTimeval" function
               (:parent "LbSimContext"
                :arguments 
                  ( ("seconds" variable (:type "int") (reparse-symbol arg-sub-list) [18744 18756])
                    ("milliSeconds" variable (:type "long") (reparse-symbol arg-sub-list) [18756 18774]))                  
                :type "void")
                nil [18712 19148]))          
    :file "LbSimContext.cc"
    :pointmax 19335
    :fsize 19334
    :lastmodtime '(20328 58301)
    :unmatched-syntax 'nil
    :lexical-table 
        '(("CONFIG_MIN_NORMAL_TABLET_LOAD_DEFAULT" . ((number "0.5" 1652 . 1655)))
          ("CONFIG_MIN_COLD_TABLET_LOAD_DEFAULT" . ((number "0.1" 1872 . 1875)))
          ("CONFIG_MAX_COLD_SU_DEFAULT" . ((number "20" 2499 . 2501)))
          ("CONFIG_MIN_BIG_TABLETS_PER_SU" . ((string "\"min_big_tablets_per_su\"" 4296 . 4320)))
          ("CONFIG_MAX_NORMAL_TABLET_LOAD_DEFAULT" . ((number "1.0" 1765 . 1768)))
          ("CONFIG_TOTAL_BANK_COUNT" . ((string "\"total_bank_count\"" 540 . 558)))
          ("CONFIG_MIN_TABLES_PER_BANK" . ((string "\"min_tables_per_bank\"" 933 . 954)))
          ("CONFIG_MIN_TABLETS_PER_TABLE_DEFAULT" . ((number "1" 1209 . 1210)))
          ("CONFIG_MAX_HOT_TABLETS_PER_OTHER_SU_DEFAULT" . ((number "10" 3170 . 3172)))
          ("CONFIG_MAX_COLD_TABLETS_PER_OTHER_SU" . ((string "\"max_cold_tablets_per_other_su\"" 3611 . 3642)))
          ("LBSIM_CONFIG_FILE" . ((string "\"../conf/lb_sim.ini\"" 367 . 387)))
          ("CONFIG_STORAGE_ENGINES" . ((string "\"storage_engines\"" 632 . 649)))
          ("CONFIG_MIN_SUS_PER_BANK" . ((string "\"min_sus_per_bank\"" 743 . 761)))
          ("CONFIG_MIN_HOT_SU" . ((string "\"min_hot_su\"" 2218 . 2230)))
          ("CONFIG_MIN_NORMAL_TABLET_SIZE_IN_MEG" . ((string "\"min_normal_tablet_size_in_meg\"" 3745 . 3776)))
          ("CONFIG_MAX_BIG_TABLETS_PER_SU_DEFAULT" . ((number "10" 4478 . 4480)))
          ("CONFIG_REGION_DEFAULT" . ((string "\"TestRegion\"" 495 . 507)))
          ("CONFIG_MAX_COLD_TABLET_LOAD" . ((string "\"max_cold_tablet_load\"" 1912 . 1934)))
          ("CONFIG_MIN_HOT_TABLETS_PER_OTHER_SU_DEFAULT" . ((number "5" 3041 . 3042)))
          ("CONFIG_MAX_COLD_TABLETS_PER_COLD_SU" . ((string "\"max_cold_tablets_per_cold_su\"" 3348 . 3378)))
          ("CONFIG_MAX_SUS_PER_BANK" . ((string "\"max_sus_per_bank\"" 836 . 854)))
          ("CONFIG_MIN_COLD_TABLET_LOAD" . ((string "\"min_cold_tablet_load\"" 1805 . 1827)))
          ("CONFIG_MAX_HOT_TABLET_LOAD" . ((string "\"max_hot_tablet_load\"" 2122 . 2143)))
          ("CONFIG_MIN_COLD_SU_DEFAULT" . ((number "10" 2420 . 2422)))
          ("CONFIG_MIN_EMPTY_SU" . ((string "\"min_empty_su\"" 2530 . 2544)))
          ("CONFIG_MAX_HOT_TABLETS_PER_HOT_SU" . ((string "\"max_hot_tablets_per_hot_su\"" 2832 . 2860)))
          ("CONFIG_MIN_HOT_TABLETS_PER_OTHER_SU" . ((string "\"min_hot_tablets_per_other_su\"" 2958 . 2988)))
          ("CONFIG_MIN_COLD_TABLETS_PER_COLD_SU" . ((string "\"min_cold_tablets_per_cold_su\"" 3218 . 3248)))
          ("CONFIG_MIN_BIG_TABLETS_PER_SU_DEFAULT" . ((number "5" 4367 . 4368)))
          ("CONFIG_AVERAGE_REQUEST_PER_SU" . ((string "\"average_request_per_su\"" 4519 . 4543)))
          ("LB_CONFIG_FILE" . ((string "\"../conf/dht_load_balancer_test.ini\"" 287 . 323)))
          ("CONFIG_MAX_SUS_PER_BANK_DEFAULT" . ((number "4" 895 . 896)))
          ("CONFIG_MIN_HASHBITS_PER_TABLE_DEFAULT" . ((number "0" 1429 . 1430)))
          ("CONFIG_MAX_HASHBITS_PER_TABLE" . ((string "\"max_hashbits_per_table\"" 1469 . 1493)))
          ("CONFIG_MAX_HOT_SU" . ((string "\"max_hot_su\"" 2294 . 2306)))
          ("CONFIG_MAX_COLD_SU" . ((string "\"max_cold_su\"" 2450 . 2463)))
          ("CONFIG_MAX_EMPTY_SU" . ((string "\"max_empty_su\"" 2611 . 2625)))
          ("CONFIG_MIN_COLD_TABLETS_PER_OTHER_SU_DEFAULT" . ((number "5" 3564 . 3565)))
          ("CONFIG_MAX_COLD_TABLETS_PER_OTHER_SU_DEFAULT" . ((number "10" 3696 . 3698)))
          ("CONFIG_MIN_SUS_PER_BANK_DEFAULT" . ((number "2" 802 . 803)))
          ("CONFIG_MAX_TABLES_PER_BANK_DEFAULT" . ((number "10" 1100 . 1102)))
          ("CONFIG_MAX_TABLETS_PER_TABLE_DEFAULT" . ((number "16" 1317 . 1319)))
          ("CONFIG_MAX_HASHBITS_PER_TABLE_DEFAULT" . ((number "4" 1540 . 1541)))
          ("CONFIG_MIN_NORMAL_TABLET_LOAD" . ((string "\"min_normal_tablet_load\"" 1581 . 1605)))
          ("CONFIG_MAX_HOT_TABLET_LOAD_DEFAULT" . ((number "2.5" 2187 . 2190)))
          ("CONFIG_MIN_HOT_TABLETS_PER_HOT_SU" . ((string "\"min_hot_tablets_per_hot_su\"" 2708 . 2736)))
          ("CONFIG_MAX_HOT_TABLETS_PER_OTHER_SU" . ((string "\"max_hot_tablets_per_other_su\"" 3087 . 3117)))
          ("CONFIG_MAX_BIG_TABLET_SIZE_IN_MEG" . ((string "\"max_big_tablet_size_in_meg\"" 4165 . 4193)))
          ("CONFIG_REGION" . ((string "\"region\"" 456 . 464)))
          ("CONFIG_MIN_TABLETS_PER_TABLE" . ((string "\"min_tablets_per_table\"" 1140 . 1163)))
          ("CONFIG_MAX_HOT_TABLETS_PER_HOT_SU_DEFAULT" . ((number "50" 2911 . 2913)))
          ("CONFIG_MAX_NORMAL_TABLET_SIZE_IN_MEG" . ((string "\"max_normal_tablet_size_in_meg\"" 3889 . 3920)))
          ("CONFIG_MIN_BIG_TABLET_SIZE_IN_MEG_DEFAULT" . ((number "2048" 4109 . 4113)))
          ("CONFIG_MAX_BIG_TABLETS_PER_SU" . ((string "\"max_big_tablets_per_su\"" 4407 . 4431)))
          ("LBSIM_CONFIG_SECTION" . ((string "\"lb_simulator\"" 418 . 432)))
          ("CONFIG_MIN_HOT_SU_DEFAULT" . ((number "10" 2265 . 2267)))
          ("CONFIG_MIN_COLD_SU" . ((string "\"min_cold_su\"" 2371 . 2384)))
          ("CONFIG_MIN_COLD_TABLETS_PER_COLD_SU_DEFAULT" . ((number "10" 3301 . 3303)))
          ("CONFIG_MAX_COLD_TABLETS_PER_COLD_SU_DEFAULT" . ((number "20" 3431 . 3433)))
          ("CONFIG_MIN_NORMAL_TABLET_SIZE_IN_MEG_DEFAULT" . ((number "100" 3830 . 3833)))
          ("CONFIG_MAX_NORMAL_TABLET_SIZE_IN_MEG_DEFAULT" . ((number "1024" 3974 . 3978)))
          ("CONFIG_MIN_BIG_TABLET_SIZE_IN_MEG" . ((string "\"min_big_tablet_size_in_meg\"" 4030 . 4058)))
          ("CONFIG_TOTAL_BANK_COUNT_DEFAULT" . ((number "1" 599 . 600)))
          ("CONFIG_MAX_TABLETS_PER_TABLE" . ((string "\"max_tablets_per_table\"" 1248 . 1271)))
          ("CONFIG_MIN_HOT_TABLET_LOAD" . ((string "\"min_hot_tablet_load\"" 2018 . 2039)))
          ("CONFIG_MIN_HOT_TABLET_LOAD_DEFAULT" . ((number "1.5" 2083 . 2086)))
          ("CONFIG_MAX_HOT_SU_DEFAULT" . ((number "20" 2341 . 2343)))
          ("CONFIG_MAX_EMPTY_SU_DEFAULT" . ((number "10" 2662 . 2664)))
          ("CONFIG_MIN_HOT_TABLETS_PER_HOT_SU_DEFAULT" . ((number "40" 2787 . 2789)))
          ("CONFIG_MIN_COLD_TABLETS_PER_OTHER_SU" . ((string "\"min_cold_tablets_per_other_su\"" 3479 . 3510)))
          ("CONFIG_MAX_BIG_TABLET_SIZE_IN_MEG_DEFAULT" . ((number "5120" 4244 . 4248)))
          ("CONFIG_STORAGE_ENGINES_DEFAULT" . ((string "\"mysql,ordered_mysql\"" 689 . 710)))
          ("CONFIG_MIN_HASHBITS_PER_TABLE" . ((string "\"min_hashbits_per_table\"" 1358 . 1382)))
          ("CONFIG_MIN_EMPTY_SU_DEFAULT" . ((number "5" 2581 . 2582)))
          ("CONFIG_MIN_TABLES_PER_BANK_DEFAULT" . ((number "5" 998 . 999)))
          ("CONFIG_MAX_TABLES_PER_BANK" . ((string "\"max_tables_per_bank\"" 1035 . 1056)))
          ("CONFIG_MAX_NORMAL_TABLET_LOAD" . ((string "\"max_normal_tablet_load\"" 1694 . 1718)))
          ("CONFIG_MAX_COLD_TABLET_LOAD_DEFAULT" . ((number "0.5" 1979 . 1982)))
          ("CONFIG_AVERAGE_REQUEST_PER_SU_DEFAULT" . ((number "500" 4590 . 4593)))
          )

    )
   (semanticdb-table "MySQLImpl.cc"
    :major-mode 'c++-mode
    :tags 
        '( ("MySQLImpl.h" include nil nil [1 23])
            ("dht/LogUtils.h" include (:system-flag t) nil [24 49])
            ("dht/FwCode.h" include (:system-flag t) nil [50 73])
            ("mysql/mysql.h" include (:system-flag t) nil [75 99])
            ("mysql/errmsg.h" include (:system-flag t) nil [100 125])
            ("ycrypto/ycr/yCryptoCommon.h" include (:system-flag t) nil [127 165])
            ("ycrypto/keydb/keyDb.h" include (:system-flag t) nil [181 213])
            ("dht/StringUtils.h" include (:system-flag t) nil [232 260])
            ("MySQLImpl::s_instance" variable
               (:pointer 1
                :type ("MySQLImpl" type (:type "class") nil nil))
                nil [262 302])
            ("std" using (:type ("std" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [304 324])
            ("log" variable
               (:typemodifiers ("static")
                :type ("log4cpp::Category" type (:type "class") nil nil))
                nil [325 416])
            ("BEGIN_TRANSACTION" variable (:constant-flag t) nil [428 445])
            ("MY_SNPRINTF" variable (:constant-flag t) nil [576 587])
            ("MAX_QUERY_LOG_LEN" variable (:constant-flag t) nil [1099 1116])
            ("MYSQL_CONFIG_SECTION" variable (:constant-flag t) nil [1130 1150])
            ("CONFIG_DEFAULT_MYSQL_HOST" variable (:constant-flag t) nil [1167 1192])
            ("CONFIG_DEFAULT_MYSQL_ROOT_USER" variable (:constant-flag t) nil [1213 1243])
            ("CONFIG_DEFAULT_MYSQL_USER" variable (:constant-flag t) nil [1259 1284])
            ("CONFIG_DEFAULT_MYSQL_DBNAME" variable (:constant-flag t) nil [1302 1329])
            ("CONFIG_MYSQL_HOST" variable (:constant-flag t) nil [1411 1428])
            ("CONFIG_MYSQL_USER" variable (:constant-flag t) nil [1460 1477])
            ("CONFIG_MYSQL_DBNAME" variable (:constant-flag t) nil [1505 1524])
            ("KEYDB_TC_MYSQL_ROOTPW" variable (:constant-flag t) nil [1557 1578])
            ("KEYDB_TC_MYSQL_USERPW" variable (:constant-flag t) nil [1612 1633])
            ("MYSQL_CRIT" variable (:constant-flag t) nil [1668 1678])
            ("MYSQL_ERROR" variable (:constant-flag t) nil [1825 1836])
            ("instance" function
               (:parent "MySQLImpl"
                :type ("MySQLImpl" type (:type "class") nil nil))
                nil [1976 2107])
            ("MySQLImpl" function
               (:constructor-flag t
                :parent "MySQLImpl"
                :type ("MySQLImpl" type (:type "class") nil nil))
                nil [2109 2195])
            ("MySQLImpl" function
               (:destructor-flag t
                :parent "MySQLImpl"
                :type "void")
                nil [2197 2227])
            ("init" function
               (:parent "MySQLImpl"
                :type ("LbCode::ResponseCode" type (:type "class") nil nil))
                nil [2229 2733])
            ("initDb" function
               (:parent "MySQLImpl"
                :type ("LbCode::ResponseCode" type (:type "class") nil nil))
                nil [2735 5080])
            ("connect" function
               (:parent "MySQLImpl"
                :type ("LbCode::ResponseCode" type (:type "class") nil nil))
                nil [5082 5660])
            ("disconnect" function
               (:parent "MySQLImpl"
                :type "void")
                nil [5663 5855])
            ("ensureConnected" function
               (:parent "MySQLImpl"
                :type ("FwCode::ResponseCode" type (:type "class") nil nil))
                nil [5857 5991])
            ("executeSQL" function
               (:parent "MySQLImpl"
                :arguments 
                  ( ("queryStr" variable
                       (:pointer 1
                        :constant-flag t
                        :type "char")
                        (reparse-symbol arg-sub-list) [6037 6058])
                    ("queryStrLength" variable (:type ("size_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [6059 6081]))                  
                :type ("FwCode::ResponseCode" type (:type "class") nil nil))
                nil [5993 8101])
            ("executeSQL" function
               (:parent "MySQLImpl"
                :arguments 
                  ( ("query" variable
                       (:reference 1
                        :constant-flag t
                        :type ("std::string" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [8147 8172]))                  
                :type ("LbCode::ResponseCode" type (:type "class") nil nil))
                nil [8103 8230])
            ("sessionSettings" function
               (:parent "MySQLImpl"
                :type ("FwCode::ResponseCode" type (:type "class") nil nil))
                nil [8232 8776])
            ("beginTrans" function
               (:parent "MySQLImpl"
                :type ("FwCode::ResponseCode" type (:type "class") nil nil))
                nil [8778 9039])
            ("commitTrans" function
               (:parent "MySQLImpl"
                :type ("FwCode::ResponseCode" type (:type "class") nil nil))
                nil [9041 9366])
            ("abortTrans" function
               (:parent "MySQLImpl"
                :type ("FwCode::ResponseCode" type (:type "class") nil nil))
                nil [9368 9805])
            ("assertInTrans" function
               (:parent "MySQLImpl"
                :type "void")
                nil [9807 9922])
            ("getResult" function
               (:parent "MySQLImpl"
                :type ("MySQLResultAutoPtr" type (:type "class") nil nil))
                nil [9925 10151])
            ("readFirstRow" function
               (:parent "MySQLImpl"
                :arguments 
                  ( ("query" variable
                       (:reference 1
                        :constant-flag t
                        :type ("std::string" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [10201 10226])
                    ("firstRow" variable
                       (:reference 1
                        :type ("StrVec" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [10226 10243]))                  
                :type ("LbCode::ResponseCode" type (:type "class") nil nil))
                nil [10154 11158])
            ("execAndReadAllRows" function
               (:parent "MySQLImpl"
                :arguments 
                  ( ("query" variable
                       (:reference 1
                        :constant-flag t
                        :type ("std::string" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [11212 11237])
                    ("resultRows" variable
                       (:reference 1
                        :type ("std::vector" type
                             (:template-specifier 
                                ( ("StrVec" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol arg-sub-list) [11257 11289]))                  
                :type ("LbCode::ResponseCode" type (:type "class") nil nil))
                nil [11160 12435]))          
    :file "MySQLImpl.cc"
    :pointmax 12436
    :fsize 12435
    :lastmodtime '(20328 58301)
    :unmatched-syntax 'nil
    :lexical-table 
        '(("KEYDB_TC_MYSQL_ROOTPW" . ((string "\"sherpa.tc.mysql.rootpw\"" 1579 . 1603)))
          ("MAX_QUERY_LOG_LEN" . ((number "256" 1117 . 1120)))
          ("MYSQL_CONFIG_SECTION" . ((string "\"mysql\"" 1151 . 1158)))
          ("MYSQL_CRIT" (spp-arg-list ("x_handle") 1678 . 1688) . 
              ((symbol "DHT_CRIT_STREAM" 1695 . 1710) (semantic-list "()" 1710 . 1712) (punctuation "<" 1713 . 1714) (punctuation "<" 1714 . 1715) (string "\"EC:PSTORE: MySQL [\"" 1716 . 1736) (punctuation "<" 1737 . 1738) (punctuation "<" 1738 . 1739) (punctuation ":" 1740 . 1741) (punctuation ":" 1741 . 1742) (symbol "mysql_errno" 1742 . 1753) (semantic-list "(&x_handle)" 1753 . 1764) (punctuation "<" 1765 . 1766) (punctuation "<" 1766 . 1767) (string "\"] \"" 1774 . 1778) (punctuation "<" 1779 . 1780) (punctuation "<" 1780 . 1781) (punctuation ":" 1783 . 1784) (punctuation ":" 1784 . 1785) (symbol "mysql_error" 1785 . 1796) (semantic-list "(&x_handle)" 1796 . 1807) (punctuation "<" 1808 . 1809) (punctuation "<" 1809 . 1810) (string "\" \"" 1811 . 1814)))
          ("MYSQL_ERROR" (spp-arg-list ("x_handle") 1836 . 1846) . 
              ((symbol "DHT_ERROR_STREAM" 1853 . 1869) (semantic-list "()" 1869 . 1871) (punctuation "<" 1872 . 1873) (punctuation "<" 1873 . 1874) (string "\"EC:PSTORE: MySQL [\"" 1875 . 1895) (punctuation "<" 1896 . 1897) (punctuation "<" 1897 . 1898) (punctuation ":" 1899 . 1900) (punctuation ":" 1900 . 1901) (symbol "mysql_errno" 1901 . 1912) (semantic-list "(&x_handle)" 1912 . 1923) (punctuation "<" 1924 . 1925) (punctuation "<" 1925 . 1926) (string "\"] \"" 1933 . 1937) (punctuation "<" 1938 . 1939) (punctuation "<" 1939 . 1940) (punctuation ":" 1942 . 1943) (punctuation ":" 1943 . 1944) (symbol "mysql_error" 1944 . 1955) (semantic-list "(&x_handle)" 1955 . 1966) (punctuation "<" 1967 . 1968) (punctuation "<" 1968 . 1969) (string "\" \"" 1970 . 1973)))
          ("MY_SNPRINTF" (spp-arg-list ("x_numBytesWritten_x" "x_numBytesRemaining_x" "x_snprintf_call_x") 587 . 650) . ((semantic-list "{ \\
    int x_n_x = x_snprintf_call_x; \\
    if (x_n_x<0 || (unsigned)(x_n_x)>= x_numBytesRemaining_x){ \\
        BAD_CODE_ABORT(\"Array too small to construct query\"); \\
    } \\
    x_numBytesWritten_x += x_n_x; \\
    x_numBytesRemaining_x -= x_n_x; \\
}" 653 . 906)))
          ("CONFIG_MYSQL_DBNAME" . ((string "\"mysql_database\"" 1531 . 1547)))
          ("KEYDB_TC_MYSQL_USERPW" . ((string "\"sherpa.tc.mysql.userpw\"" 1634 . 1658)))
          ("CONFIG_DEFAULT_MYSQL_USER" . ((string "\"sherpa\"" 1285 . 1293)))
          ("BEGIN_TRANSACTION" . ((string "\"BEGIN\"" 446 . 453)))
          ("CONFIG_DEFAULT_MYSQL_HOST" . ((string "\"localhost\"" 1193 . 1204)))
          ("CONFIG_DEFAULT_MYSQL_DBNAME" . ((string "\"lb\"" 1330 . 1334)))
          ("CONFIG_DEFAULT_MYSQL_ROOT_USER" . ((string "\"root\"" 1244 . 1250)))
          ("CONFIG_MYSQL_USER" . ((string "\"mysql_user\"" 1484 . 1496)))
          ("CONFIG_MYSQL_HOST" . ((string "\"mysql_host\"" 1439 . 1451)))
          )

    )
   (semanticdb-table "lbSim.cc"
    :major-mode 'c++-mode
    :tags 
        '( ("stdio.h" include (:system-flag t) nil [158 176])
            ("unistd.h" include (:system-flag t) nil [177 196])
            ("stdlib.h" include (:system-flag t) nil [197 216])
            ("dht/LogUtils.h" include (:system-flag t) nil [218 243])
            ("dht/StringUtils.h" include (:system-flag t) nil [244 272])
            ("LbSimControllerTransport.h" include nil nil [274 311])
            ("LbSimContext.h" include nil nil [312 337])
            ("LbValidator.h" include nil nil [338 362])
            ("LoadBalancer.h" include nil nil [363 388])
            ("LbFarmConfig.h" include nil nil [389 414])
            ("LbJobSchema.h" include nil nil [415 439])
            ("lbSim.h" include nil nil [441 459])
            ("dht/test_wrappers.h" include (:system-flag t) nil [460 490])
            ("SimParams.h" include (:system-flag t) nil [491 513])
            ("LB_LOG4CPP_CONF" variable (:constant-flag t) nil [559 574])
            ("std" using (:type ("std" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [606 626])
            ("log" variable
               (:typemodifiers ("static")
                :type ("log4cpp::Category" type (:type "class") nil nil))
                nil [628 731])
            ("recreateFarmDb" function
               (:parent "lbSim"
                :type ("LbCode::ResponseCode" type (:type "class") nil nil))
                nil [780 1598])
            ("createFarmDb" function
               (:parent "lbSim"
                :type ("LbCode::ResponseCode" type (:type "class") nil nil))
                nil [1645 3811])
            ("setupFarmConfig" function
               (:parent "lbSim"
                :type ("LbCode::ResponseCode" type (:type "class") nil nil))
                nil [3813 4435])
            ("printAvgSuLoad" function
               (:parent "lbSim"
                :type "void")
                nil [4437 5008])
            ("printHeader" function
               (:parent "lbSim"
                :arguments 
                  ( ("runIndex" variable (:type "int") (reparse-symbol arg-sub-list) [5035 5048]))                  
                :type "void")
                nil [5010 5324])
            ("iterationNeeded" function
               (:parent "lbSim"
                :arguments 
                  ( ("runIndex" variable (:type "int") (reparse-symbol arg-sub-list) [5355 5368])
                    ("startTv" variable
                       (:reference 1
                        :type ("timeval" type
                             (:prototype t
                              :type "struct")
                              nil nil))
                        (reparse-symbol arg-sub-list) [5369 5393]))                  
                :type "bool")
                nil [5326 6595])
            ("executeLb" function
               (:parent "lbSim"
                :type ("LbCode::ResponseCode" type (:type "class") nil nil))
                nil [6597 7523])
            ("validateFarmState" function
               (:parent "lbSim"
                :type ("LbCode::ResponseCode" type (:type "class") nil nil))
                nil [7525 7637])
            ("runSimTest" function
               (:parent "lbSim"
                :type ("LbCode::ResponseCode" type (:type "class") nil nil))
                nil [7639 8373])
            ("setupTestConfig1" function
               (:parent "lbSim"
                :type ("LbCode::ResponseCode" type (:type "class") nil nil))
                nil [8375 8451])
            ("runTestCases" function
               (:parent "lbSim"
                :arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) [8479 8484]))                  
                :type "bool")
                nil [8453 10525])
            ("init" function
               (:parent "lbSim"
                :type "void")
                nil [10527 11411])
            ("runTests" function
               (:arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) [11427 11432]))                  
                :type "bool")
                nil [11413 11501])
            ("main" function
               (:arguments 
                  ( ("argc" variable (:type "int") (reparse-symbol arg-sub-list) [11512 11521])
                    ("argv" variable
                       (:pointer 1
                        :dereference 1
                        :type "char")
                        (reparse-symbol arg-sub-list) [11522 11535]))                  
                :type "int")
                nil [11503 11766]))          
    :file "lbSim.cc"
    :pointmax 11919
    :fsize 11918
    :lastmodtime '(20328 58301)
    :unmatched-syntax 'nil
    :lexical-table 
        '(("LB_LOG4CPP_CONF" . ((string "\"../conf/log4cpp_test.conf\"" 577 . 604)))
          )

    )
   )
  :file "!homes!dbao!svndev!trunk!dht!controller!loadBalancer!simulator!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.0"
  )
