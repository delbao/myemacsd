;; Object design/
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "design/"
  :tables (list 
   (semanticdb-table "TabletMetadata.cc"
    :major-mode 'c++-mode
    :tags 
        '( ("record_timeline_type" variable (:type ("" type
                 (:members 
                    ( ("MASTERFUL" variable
                         (:constant-flag t
                          :type "int")
                          (reparse-symbol enumsubparts) [4844 4854])
                      ("MERGING" variable
                         (:constant-flag t
                          :type "int")
                          (reparse-symbol enumsubparts) [4931 5002]))                    
                  :type "enum")
                  nil nil)) nil [4829 5024])
            ("override" type
               (:members 
                  ( ("bad_region" variable (:type ("string" type (:type "class") nil nil)) (reparse-symbol classsubparts) [6212 6230])
                    ("good_region" variable (:type ("string" type (:type "class") nil nil)) (reparse-symbol classsubparts) [6235 6254])
                    ("timestamp" variable (:type "long") (reparse-symbol classsubparts) [6259 6274])
                    ("is_major" variable (:type "bool") (reparse-symbol classsubparts) [6279 6293])
                    ("add" function
                       (:arguments 
                          ( ("newOverride" variable (:type ("override" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [6308 6329]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [6299 7132])
                    ("garbageCollect" function
                       (:arguments 
                          ( ("" variable (:type ("olderByTime" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7309 7321]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [7289 7572]))                  
                :type "class")
                nil [6191 7757])
            ("save" function
               (:type ("override" type
                     (:prototype t
                      :type "class")
                      nil nil)
                :parent "TabletMetadata")
                nil [6191 7757])
            ("follow_overrides" function
               (:parent "StorageUnit"
                :arguments 
                  ( ("" variable (:type ("tablet_metadata" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [8753 8769])
                    ("" variable (:type ("region" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [8770 8777]))                  
                :type "int")
                nil [8723 11268]))          
    :file "TabletMetadata.cc"
    :pointmax 11269
    :fsize 11268
    :lastmodtime '(20425 22449)
    :unmatched-syntax '((semantic-list 5180 . 6149) (symbol 5158 . 5180) (STRUCT 5151 . 5157) (semantic-list 4512 . 4782) (symbol 4486 . 4512) (STRUCT 4479 . 4485) (semantic-list 159 . 4272) (symbol 127 . 159) (STRUCT 120 . 126) (punctuation 4036 . 4037) (semantic-list 3381 . 4036) (punctuation 3247 . 3248) (punctuation 3149 . 3150) (semantic-list 2197 . 2630) (punctuation 2094 . 2095) (punctuation 2056 . 2057) (semantic-list 1155 . 2056) (punctuation 1073 . 1074) (punctuation 4036 . 4037) (semantic-list 3381 . 4036) (punctuation 3247 . 3248) (punctuation 3149 . 3150) (semantic-list 2197 . 2630) (punctuation 2094 . 2095) (punctuation 2056 . 2057) (semantic-list 1155 . 2056) (punctuation 1073 . 1074))
    )
   (semanticdb-table "ZookeeperTCSeqID.cc"
    :major-mode 'c++-mode
    :tags 
        '( ("start" function
               (:parent "TC"
                :type "int")
                nil [225 353])
            ("any_db_change" function
               (:parent "TC"
                :type "int")
                nil [394 542]))          
    :file "ZookeeperTCSeqID.cc"
    :pointmax 3051
    :fsize 3050
    :lastmodtime '(20425 22449)
    :unmatched-syntax '((semantic-list 2957 . 3051) (symbol 2952 . 2956) (symbol 2942 . 2951) (symbol 2939 . 2941) (symbol 2936 . 2938) (symbol 2927 . 2935) (symbol 2923 . 2926) (symbol 2918 . 2922) (symbol 2913 . 2917) (symbol 2910 . 2912) (symbol 2900 . 2909) (symbol 2895 . 2899) (symbol 2891 . 2894) (symbol 2888 . 2890) (symbol 2885 . 2887) (symbol 2876 . 2884) (symbol 2872 . 2875) (IF 2869 . 2871) (punctuation 2867 . 2868) (symbol 2859 . 2867) (semantic-list 2856 . 2858) (symbol 2842 . 2856) (punctuation 2839 . 2840) (symbol 2830 . 2839) (symbol 2825 . 2829) (symbol 2812 . 2824) (symbol 2808 . 2811) (symbol 2805 . 2807) (symbol 2800 . 2804) (symbol 2796 . 2799) (punctuation 2794 . 2795) (symbol 2786 . 2794) (symbol 2779 . 2785) (symbol 2770 . 2778) (symbol 2767 . 2769) (symbol 2762 . 2766) (FOR 2758 . 2761) (symbol 2748 . 2757) (semantic-list 2745 . 2747) (symbol 2732 . 2745) (punctuation 2729 . 2730) (symbol 2725 . 2729) (semantic-list 2722 . 2724) (symbol 2717 . 2722) (symbol 2713 . 2716) (symbol 2708 . 2712) (symbol 2703 . 2707) (symbol 2699 . 2702) (symbol 2696 . 2698) (symbol 2693 . 2695) (symbol 2684 . 2692) (symbol 2680 . 2683) (symbol 2676 . 2679) (symbol 2666 . 2675) (symbol 2662 . 2665) (symbol 2659 . 2661) (symbol 2655 . 2658) (punctuation 2653 . 2654) (symbol 2651 . 2653) (symbol 2642 . 2650) (symbol 2638 . 2641) (FOR 2634 . 2637) (symbol 2625 . 2633) (symbol 2619 . 2624) (symbol 2616 . 2618) (semantic-list 2608 . 2615) (symbol 2603 . 2608) (punctuation 2602 . 2603) (punctuation 2601 . 2602) (symbol 2593 . 2601) (symbol 2588 . 2592) (punctuation 2586 . 2587) (symbol 2578 . 2586) (symbol 2571 . 2577) (symbol 2562 . 2570) (symbol 2559 . 2561) (symbol 2554 . 2558) (FOR 2550 . 2553) (symbol 2540 . 2549) (semantic-list 2537 . 2539) (symbol 2527 . 2537) (punctuation 2524 . 2525) (symbol 2513 . 2524) (symbol 2508 . 2512) (symbol 2506 . 2507) (string 2426 . 2506) (symbol 2424 . 2426) (punctuation 2422 . 2423) (symbol 2420 . 2422) (symbol 2415 . 2419) (symbol 2408 . 2414) (symbol 2404 . 2407) (symbol 2395 . 2403) (symbol 2391 . 2394) (symbol 2383 . 2390) (symbol 2379 . 2382) (symbol 2372 . 2378) (symbol 2368 . 2371) (symbol 2361 . 2367) (FOR 2357 . 2360) (symbol 2351 . 2356) (symbol 2344 . 2350) (symbol 2337 . 2343) (symbol 2333 . 2336) (punctuation 2331 . 2332) (symbol 2322 . 2331) (symbol 2315 . 2321) (symbol 2308 . 2314) (semantic-list 2206 . 2306) (symbol 2199 . 2205) (symbol 2184 . 2198) (IF 2181 . 2183) (semantic-list 2178 . 2180) (symbol 2174 . 2178) (punctuation 2173 . 2174) (punctuation 2172 . 2173) (symbol 2164 . 2172) (symbol 2159 . 2163) (punctuation 2157 . 2158) (symbol 2153 . 2157) (symbol 2143 . 2152) (VIRTUAL 2135 . 2142) (symbol 2131 . 2134) (symbol 2126 . 2130) (symbol 2121 . 2125) (symbol 2116 . 2120) (symbol 2112 . 2115) (symbol 2109 . 2111) (symbol 2103 . 2108) (string 2094 . 2102) (symbol 2090 . 2093) (symbol 2083 . 2089) (symbol 2080 . 2082) (CLASS 2074 . 2079) (symbol 2069 . 2073) (punctuation 2067 . 2068) (semantic-list 2035 . 2067) (symbol 2030 . 2034) (symbol 2026 . 2029) (symbol 2023 . 2025) (symbol 2008 . 2022) (symbol 2005 . 2007) (symbol 1996 . 2004) (NEW 1992 . 1995) (symbol 1990 . 1991) (symbol 1983 . 1989) (punctuation 1981 . 1982) (symbol 1972 . 1981) (symbol 1967 . 1971) (symbol 1955 . 1966) (punctuation 1954 . 1955) (symbol 1946 . 1954) (symbol 1939 . 1945) (symbol 1935 . 1938) (symbol 1930 . 1934) (symbol 1923 . 1929) (symbol 1920 . 1922) (symbol 1914 . 1919) (symbol 1905 . 1913) (symbol 1903 . 1904) (symbol 1899 . 1902) (CLASS 1893 . 1898) (symbol 1888 . 1892) (symbol 1883 . 1887) (punctuation 1881 . 1882) (symbol 1877 . 1881) (symbol 1863 . 1876) (symbol 1859 . 1862) (symbol 1854 . 1858) (symbol 1848 . 1853) (symbol 1838 . 1847) (symbol 1835 . 1837) (symbol 1830 . 1834) (symbol 1826 . 1829) (symbol 1823 . 1825) (symbol 1816 . 1822) (symbol 1811 . 1815) (symbol 1808 . 1810) (punctuation 1806 . 1807) (semantic-list 1747 . 1806) (CLASS 1741 . 1746) (close-paren 1805 . 1806) (symbol 1796 . 1805) (symbol 1793 . 1795) (symbol 1780 . 1792) (symbol 1777 . 1779) (symbol 1772 . 1776) (symbol 1767 . 1771) (CLASS 1761 . 1766) (symbol 1752 . 1760) (symbol 1748 . 1751) (open-paren 1747 . 1748) (close-paren 1805 . 1806) (symbol 1796 . 1805) (symbol 1793 . 1795) (symbol 1780 . 1792) (symbol 1777 . 1779) (symbol 1772 . 1776) (symbol 1767 . 1771) (CLASS 1761 . 1766) (symbol 1752 . 1760) (symbol 1748 . 1751) (open-paren 1747 . 1748) (symbol 1732 . 1740) (symbol 1728 . 1731) (symbol 1719 . 1727) (symbol 1714 . 1718) (symbol 1709 . 1713) (symbol 1705 . 1708) (symbol 1701 . 1704) (symbol 1689 . 1700) (symbol 1682 . 1688) (symbol 1678 . 1681) (symbol 1675 . 1677) (symbol 1670 . 1674) (symbol 1667 . 1669) (symbol 1661 . 1666) (symbol 1658 . 1660) (punctuation 1656 . 1657) (symbol 1648 . 1656) (symbol 1644 . 1647) (symbol 1637 . 1643) (symbol 1634 . 1636) (punctuation 1632 . 1633) (symbol 1628 . 1632) (symbol 1624 . 1627) (symbol 1621 . 1623) (semantic-list 1592 . 1620) (symbol 1583 . 1591) (symbol 1580 . 1582) (symbol 1571 . 1579) (NEW 1567 . 1570) (symbol 1565 . 1566) (symbol 1558 . 1564) (punctuation 1556 . 1557) (symbol 1547 . 1556) (semantic-list 1544 . 1546) (symbol 1524 . 1544) (punctuation 1521 . 1522) (semantic-list 1519 . 1521) (symbol 1499 . 1519) (symbol 1496 . 1498) (symbol 1491 . 1495) (symbol 1487 . 1490) (symbol 1481 . 1486) (symbol 1472 . 1480) (symbol 1468 . 1471) (symbol 1453 . 1467) (symbol 1449 . 1451) (symbol 1438 . 1448) (symbol 1433 . 1437) (symbol 1424 . 1432) (symbol 1419 . 1423) (symbol 1416 . 1418) (punctuation 1415 . 1416) (symbol 1399 . 1415) (symbol 1395 . 1398))
    )
   (semanticdb-table "SuLockingMethodology12.cc"
    :major-mode 'c++-mode
    :tags 
        '( ("LockManager" type
               (:members 
                  ( ("public" label nil (reparse-symbol classsubparts) [21 28])
                    ("err_t" variable (:type ("" type
                         (:members 
                            ( ("LOCK_OK" variable
                                 (:constant-flag t
                                  :type "int")
                                  (reparse-symbol enumsubparts) [48 56])
                              ("LOCK_PROCESS_DIED" variable
                                 (:constant-flag t
                                  :type "int")
                                  (reparse-symbol enumsubparts) [103 184])
                              ("LOCK_SYSERROR" variable
                                 (:constant-flag t
                                  :type "int")
                                  (reparse-symbol enumsubparts) [171 185])
                              ("LOCK_UNAVAIL" variable
                                 (:constant-flag t
                                  :type "int")
                                  (reparse-symbol enumsubparts) [226 239]))                            
                          :type "enum")
                          nil nil)) (reparse-symbol classsubparts) [33 323])
                    ("lock_type" variable (:type ("" type
                         (:members 
                            ( ("LOCK_READ" variable
                                 (:constant-flag t
                                  :type "int")
                                  (reparse-symbol enumsubparts) [343 353])
                              ("LOCK_WRITE" variable
                                 (:constant-flag t
                                  :type "int")
                                  (reparse-symbol enumsubparts) [362 373]))                            
                          :type "enum")
                          nil nil)) (reparse-symbol classsubparts) [328 390])
                    ("unlock" function
                       (:prototype-flag t
                        :arguments 
                          ( ("" variable (:type ("key" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [432 436]))                          
                        :type ("err_t" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [419 437])
                    ("private" label nil (reparse-symbol classsubparts) [438 446])
                    ("allocateLock" function
                       (:prototype-flag t
                        :arguments 
                          ( ("" variable (:type ("key" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [468 472]))                          
                        :type "int")
                        (reparse-symbol classsubparts) [451 473])
                    ("releaseLock" function
                       (:prototype-flag t
                        :arguments 
                          ( ("" variable (:type ("key" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [495 499])
                            ("do_unlock" variable (:type "bool") (reparse-symbol arg-sub-list) [500 515]))                          
                        :type "bool")
                        (reparse-symbol classsubparts) [478 516])
                    ("findFreeDescriptor" function
                       (:prototype-flag t
                        :type "int")
                        (reparse-symbol classsubparts) [521 546])
                    ("error" variable (:type ("err_t" type (:type "class") nil nil)) (reparse-symbol classsubparts) [551 563])
                    ("init" function
                       (:prototype-flag t
                        :type "bool")
                        (reparse-symbol classsubparts) [568 580])
                    ("lastId" variable (:type "int") (reparse-symbol classsubparts) [585 596])
                    ("" type
                       (:members 
                          ( ("DO_UNLOCK" variable
                               (:constant-flag t
                                :type "int")
                                (reparse-symbol enumsubparts) [616 626])
                            ("DONT_UNLOCK" variable
                               (:constant-flag t
                                :type "int")
                                (reparse-symbol enumsubparts) [635 647]))                          
                        :type "enum")
                        (reparse-symbol classsubparts) [601 654])
                    ("LockDescriptor" type
                       (:members 
                          ( ("busy" variable (:type "bool") (reparse-symbol classsubparts) [692 702])
                            ("nusers" variable (:type "int") (reparse-symbol classsubparts) [711 722]))                          
                        :type "struct")
                        (reparse-symbol classsubparts) [660 766]))                  
                :type "class")
                nil [1 770])
            ("init" function (:type "bool") nil [1559 1746])
            ("addPid" function
               (:arguments 
                  ( ("" variable (:type ("id" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1760 1763])
                    ("" variable (:type ("pid" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1764 1768]))                  
                :type "bool")
                nil [1748 1966])
            ("removePid" function
               (:arguments 
                  ( ("" variable (:type ("id" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1983 1986])
                    ("" variable (:type ("pid" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1987 1991]))                  
                :type "bool")
                nil [1968 2190])
            ("findFreeDescriptor" function (:type "int") nil [2192 3117])
            ("allocateLock" function
               (:arguments 
                  ( ("" variable (:type ("key" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3136 3140]))                  
                :type "int")
                nil [3119 4102])
            ("releaseLock" function
               (:arguments 
                  ( ("" variable (:type ("key" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4121 4125])
                    ("" variable (:type ("op" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4126 4129]))                  
                :type "bool")
                nil [4104 4667])
            ("lock" function
               (:arguments 
                  ( ("" variable (:type ("key" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4680 4684])
                    ("" variable (:type ("rw" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4685 4688]))                  
                :type ("err_t" type (:type "class") nil nil))
                nil [4669 5056])
            ("unlock" function
               (:arguments 
                  ( ("" variable (:type ("key" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5071 5075]))                  
                :type ("err_t" type (:type "class") nil nil))
                nil [5058 5163]))          
    :file "SuLockingMethodology12.cc"
    :pointmax 5164
    :fsize 5163
    :lastmodtime '(20425 22449)
    :unmatched-syntax '((semantic-list 405 . 414) (symbol 401 . 405) (symbol 395 . 400))
    )
   (semanticdb-table "ClientScanImpl.cc"
    :major-mode 'c++-mode
    :tags 
        '( ("DHT" type
               (:members 
                  ( ("ScanRequestParams" type
                       (:superclasses 
                          ( ("RequestParamBase" type
                               (:protection "public"
                                :type "class")
                                nil nil))                          
                        :type "class")
                        (reparse-symbol namespacesubparts) [20 654])
                    ("ScanRequest" type
                       (:members 
                          ( ("params_" variable (:type ("ScanRequestParams" type (:type "class") nil nil)) (reparse-symbol classsubparts) [689 715])
                            ("cont_" variable
                               (:pointer 1
                                :type ("Continuation" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [724 744])
                            ("numRecordsRetrieved_" variable (:type "int") (reparse-symbol classsubparts) [753 782])
                            ("done_" variable (:type "bool") (reparse-symbol classsubparts) [791 809])
                            ("incParser_" variable (:type ("IncrementalParser" type (:type "class") nil nil)) (reparse-symbol classsubparts) [818 847])
                            ("buffrdRecords_" variable (:type ("list" type
                                 (:template-specifier 
                                    ( ("pair" type nil nil nil))                                    
                                  :type "class")
                                  nil nil)) (reparse-symbol classsubparts) [1119 1165])
                            ("ScanRequest" function
                               (:constructor-flag t
                                :type ("ScanRequest" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [1175 1190])
                            ("setup" function
                               (:arguments 
                                  ( ("params" variable (:type ("ScanRequestParams" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1210 1235])
                                    ("timeout" variable (:type "int") (reparse-symbol arg-sub-list) [1236 1248]))                                  
                                :type "int")
                                (reparse-symbol classsubparts) [1200 1772])
                            ("receive" function
                               (:arguments 
                                  ( ("key" variable
                                       (:reference 1
                                        :type ("std::string" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [2022 2039])
                                    ("" variable
                                       (:pointer 1
                                        :type ("DHT::Data" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [2040 2051])
                                    ("" variable (:type ("resultData" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2052 2063])
                                    ("done" variable
                                       (:reference 1
                                        :type "bool")
                                        (reparse-symbol arg-sub-list) [2086 2097])
                                    ("timeout" variable (:type "int") (reparse-symbol arg-sub-list) [2098 2110]))                                  
                                :type "int")
                                (reparse-symbol classsubparts) [2010 2641])
                            ("private" label nil (reparse-symbol classsubparts) [2647 2655])
                            ("makeNextCurlCall" function (:type "int") (reparse-symbol classsubparts) [2673 4939])
                            ("callback" function
                               (:arguments 
                                  ( ("data" variable
                                       (:pointer 1
                                        :type "void")
                                        (reparse-symbol arg-sub-list) [4963 4975]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [4949 5567]))                          
                        :type "class")
                        (reparse-symbol namespacesubparts) [661 5578])
                    ("Continuation" type
                       (:members 
                          ( ("endHashKey" variable (:type ("uint32_t" type (:type "class") nil nil)) (reparse-symbol classsubparts) [5625 5659])
                            ("startHashKey" variable (:type ("uint32_t" type (:type "class") nil nil)) (reparse-symbol classsubparts) [5625 5659])
                            ("excludedKeys" variable (:type ("vector" type
                                 (:template-specifier 
                                    ( ("string" type nil nil nil))                                    
                                  :type "class")
                                  nil nil)) (reparse-symbol classsubparts) [5668 5698])
                            ("advance" function
                               (:arguments 
                                  ( ("nextKeyRetrieved" variable (:type ("string" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5721 5745]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [5708 6013]))                          
                        :type "class")
                        (reparse-symbol namespacesubparts) [5597 6020]))                  
                :type "namespace")
                nil [1 6039]))          
    :file "ClientScanImpl.cc"
    :pointmax 6061
    :fsize 6060
    :lastmodtime '(20425 22449)
    :unmatched-syntax '((punctuation 2050 . 2051))
    )
   )
  :file "!homes!dbao!svndev!branches!releases!current!dht!design!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.0"
  )
