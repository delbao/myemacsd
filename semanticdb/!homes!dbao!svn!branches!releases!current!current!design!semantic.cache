;; Object design/
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "design/"
  :tables (list 
   (semanticdb-table "AccessRecord12.cc"
    :major-mode 'c++-mode
    :tags 
        '( ("get" function
               (:parent "StorageUnit"
                :arguments 
                  ( ("" variable (:type ("table" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [631 637])
                    ("" variable (:type ("key" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [638 642]))                  
                :type "int")
                nil [614 3333])
            ("forward_read" function
               (:arguments 
                  ( ("" variable (:type ("key" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3354 3358])
                    ("" variable (:type ("region_to_forward_to" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3359 3380]))                  
                :type "void")
                nil [3336 4085]))          
    :file "AccessRecord12.cc"
    :pointmax 4087
    :fsize 4086
    :lastmodtime '(20598 3588)
    :unmatched-syntax 'nil
    )
   (semanticdb-table "WriteRecord12.cc"
    :major-mode 'c++-mode
    :tags 
        '( ("set" function
               (:parent "StorageUnit"
                :arguments 
                  ( ("" variable (:type ("table" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [663 669])
                    ("" variable (:type ("key" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [670 674])
                    ("" variable (:type ("data" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [675 680]))                  
                :type "int")
                nil [646 3427])
            ("local_set" function
               (:parent "StorageUnit"
                :arguments 
                  ( ("" variable (:type ("record" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3609 3616])
                    ("" variable (:type ("data" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3617 3622])
                    ("" variable (:type ("record_mastership_type" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3623 3646]))                  
                :type "int")
                nil [3586 6143])
            ("publish_and_write_to_disk" function
               (:parent "StorageUnit"
                :arguments 
                  ( ("" variable (:type ("record" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [6510 6517])
                    ("this_op_full_sync" variable (:type "bool") (reparse-symbol arg-sub-list) [6518 6541]))                  
                :type "int")
                nil [6471 7545]))          
    :file "WriteRecord12.cc"
    :pointmax 7550
    :fsize 7549
    :lastmodtime '(20598 3588)
    :unmatched-syntax 'nil
    )
   (semanticdb-table "WriteRecord16.cc"
    :major-mode 'c++-mode
    :tags 
        '( ("set" function
               (:parent "StorageUnit"
                :arguments 
                  ( ("" variable (:type ("table" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [663 669])
                    ("" variable (:type ("key" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [670 674])
                    ("" variable (:type ("input_data" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [675 686]))                  
                :type "int")
                nil [646 1775]))          
    :file "WriteRecord16.cc"
    :pointmax 1777
    :fsize 1776
    :lastmodtime '(20598 3588)
    :unmatched-syntax 'nil
    )
   (semanticdb-table "ZookeeperTCSeqID.cc"
    :major-mode 'c++-mode
    :tags 
        '( ("start" function
               (:parent "TC"
                :type "int")
                nil [225 353])
            ("any_db_change" function
               (:parent "TC"
                :type "int")
                nil [394 542]))          
    :file "ZookeeperTCSeqID.cc"
    :pointmax 3051
    :fsize 3050
    :lastmodtime '(20598 3588)
    :unmatched-syntax '((semantic-list 2957 . 3051) (symbol 2952 . 2956) (symbol 2942 . 2951) (symbol 2939 . 2941) (symbol 2936 . 2938) (symbol 2927 . 2935) (symbol 2923 . 2926) (symbol 2918 . 2922) (symbol 2913 . 2917) (symbol 2910 . 2912) (symbol 2900 . 2909) (symbol 2895 . 2899) (symbol 2891 . 2894) (symbol 2888 . 2890) (symbol 2885 . 2887) (symbol 2876 . 2884) (symbol 2872 . 2875) (IF 2869 . 2871) (punctuation 2867 . 2868) (symbol 2859 . 2867) (semantic-list 2856 . 2858) (symbol 2842 . 2856) (punctuation 2839 . 2840) (symbol 2830 . 2839) (symbol 2825 . 2829) (symbol 2812 . 2824) (symbol 2808 . 2811) (symbol 2805 . 2807) (symbol 2800 . 2804) (symbol 2796 . 2799) (punctuation 2794 . 2795) (symbol 2786 . 2794) (symbol 2779 . 2785) (symbol 2770 . 2778) (symbol 2767 . 2769) (symbol 2762 . 2766) (FOR 2758 . 2761) (symbol 2748 . 2757) (semantic-list 2745 . 2747) (symbol 2732 . 2745) (punctuation 2729 . 2730) (symbol 2725 . 2729) (semantic-list 2722 . 2724) (symbol 2717 . 2722) (symbol 2713 . 2716) (symbol 2708 . 2712) (symbol 2703 . 2707) (symbol 2699 . 2702) (symbol 2696 . 2698) (symbol 2693 . 2695) (symbol 2684 . 2692) (symbol 2680 . 2683) (symbol 2676 . 2679) (symbol 2666 . 2675) (symbol 2662 . 2665) (symbol 2659 . 2661) (symbol 2655 . 2658) (punctuation 2653 . 2654) (symbol 2651 . 2653) (symbol 2642 . 2650) (symbol 2638 . 2641) (FOR 2634 . 2637) (symbol 2625 . 2633) (symbol 2619 . 2624) (symbol 2616 . 2618) (semantic-list 2608 . 2615) (symbol 2603 . 2608) (punctuation 2602 . 2603) (punctuation 2601 . 2602) (symbol 2593 . 2601) (symbol 2588 . 2592) (punctuation 2586 . 2587) (symbol 2578 . 2586) (symbol 2571 . 2577) (symbol 2562 . 2570) (symbol 2559 . 2561) (symbol 2554 . 2558) (FOR 2550 . 2553) (symbol 2540 . 2549) (semantic-list 2537 . 2539) (symbol 2527 . 2537) (punctuation 2524 . 2525) (symbol 2513 . 2524) (symbol 2508 . 2512) (symbol 2506 . 2507) (string 2426 . 2506) (symbol 2424 . 2426) (punctuation 2422 . 2423) (symbol 2420 . 2422) (symbol 2415 . 2419) (symbol 2408 . 2414) (symbol 2404 . 2407) (symbol 2395 . 2403) (symbol 2391 . 2394) (symbol 2383 . 2390) (symbol 2379 . 2382) (symbol 2372 . 2378) (symbol 2368 . 2371) (symbol 2361 . 2367) (FOR 2357 . 2360) (symbol 2351 . 2356) (symbol 2344 . 2350) (symbol 2337 . 2343) (symbol 2333 . 2336) (punctuation 2331 . 2332) (symbol 2322 . 2331) (symbol 2315 . 2321) (symbol 2308 . 2314) (semantic-list 2206 . 2306) (symbol 2199 . 2205) (symbol 2184 . 2198) (IF 2181 . 2183) (semantic-list 2178 . 2180) (symbol 2174 . 2178) (punctuation 2173 . 2174) (punctuation 2172 . 2173) (symbol 2164 . 2172) (symbol 2159 . 2163) (punctuation 2157 . 2158) (symbol 2153 . 2157) (symbol 2143 . 2152) (VIRTUAL 2135 . 2142) (symbol 2131 . 2134) (symbol 2126 . 2130) (symbol 2121 . 2125) (symbol 2116 . 2120) (symbol 2112 . 2115) (symbol 2109 . 2111) (symbol 2103 . 2108) (string 2094 . 2102) (symbol 2090 . 2093) (symbol 2083 . 2089) (symbol 2080 . 2082) (CLASS 2074 . 2079) (symbol 2069 . 2073) (punctuation 2067 . 2068) (semantic-list 2035 . 2067) (symbol 2030 . 2034) (symbol 2026 . 2029) (symbol 2023 . 2025) (symbol 2008 . 2022) (symbol 2005 . 2007) (symbol 1996 . 2004) (NEW 1992 . 1995) (symbol 1990 . 1991) (symbol 1983 . 1989) (punctuation 1981 . 1982) (symbol 1972 . 1981) (symbol 1967 . 1971) (symbol 1955 . 1966) (punctuation 1954 . 1955) (symbol 1946 . 1954) (symbol 1939 . 1945) (symbol 1935 . 1938) (symbol 1930 . 1934) (symbol 1923 . 1929) (symbol 1920 . 1922) (symbol 1914 . 1919) (symbol 1905 . 1913) (symbol 1903 . 1904) (symbol 1899 . 1902) (CLASS 1893 . 1898) (symbol 1888 . 1892) (symbol 1883 . 1887) (punctuation 1881 . 1882) (symbol 1877 . 1881) (symbol 1863 . 1876) (symbol 1859 . 1862) (symbol 1854 . 1858) (symbol 1848 . 1853) (symbol 1838 . 1847) (symbol 1835 . 1837) (symbol 1830 . 1834) (symbol 1826 . 1829) (symbol 1823 . 1825) (symbol 1816 . 1822) (symbol 1811 . 1815) (symbol 1808 . 1810) (punctuation 1806 . 1807) (semantic-list 1747 . 1806) (CLASS 1741 . 1746) (close-paren 1805 . 1806) (symbol 1796 . 1805) (symbol 1793 . 1795) (symbol 1780 . 1792) (symbol 1777 . 1779) (symbol 1772 . 1776) (symbol 1767 . 1771) (CLASS 1761 . 1766) (symbol 1752 . 1760) (symbol 1748 . 1751) (open-paren 1747 . 1748) (close-paren 1805 . 1806) (symbol 1796 . 1805) (symbol 1793 . 1795) (symbol 1780 . 1792) (symbol 1777 . 1779) (symbol 1772 . 1776) (symbol 1767 . 1771) (CLASS 1761 . 1766) (symbol 1752 . 1760) (symbol 1748 . 1751) (open-paren 1747 . 1748) (symbol 1732 . 1740) (symbol 1728 . 1731) (symbol 1719 . 1727) (symbol 1714 . 1718) (symbol 1709 . 1713) (symbol 1705 . 1708) (symbol 1701 . 1704) (symbol 1689 . 1700) (symbol 1682 . 1688) (symbol 1678 . 1681) (symbol 1675 . 1677) (symbol 1670 . 1674) (symbol 1667 . 1669) (symbol 1661 . 1666) (symbol 1658 . 1660) (punctuation 1656 . 1657) (symbol 1648 . 1656) (symbol 1644 . 1647) (symbol 1637 . 1643) (symbol 1634 . 1636) (punctuation 1632 . 1633) (symbol 1628 . 1632) (symbol 1624 . 1627) (symbol 1621 . 1623) (semantic-list 1592 . 1620) (symbol 1583 . 1591) (symbol 1580 . 1582) (symbol 1571 . 1579) (NEW 1567 . 1570) (symbol 1565 . 1566) (symbol 1558 . 1564) (punctuation 1556 . 1557) (symbol 1547 . 1556) (semantic-list 1544 . 1546) (symbol 1524 . 1544) (punctuation 1521 . 1522) (semantic-list 1519 . 1521) (symbol 1499 . 1519) (symbol 1496 . 1498) (symbol 1491 . 1495) (symbol 1487 . 1490) (symbol 1481 . 1486) (symbol 1472 . 1480) (symbol 1468 . 1471) (symbol 1453 . 1467) (symbol 1449 . 1451) (symbol 1438 . 1448) (symbol 1433 . 1437) (symbol 1424 . 1432) (symbol 1419 . 1423) (symbol 1416 . 1418) (punctuation 1415 . 1416) (symbol 1399 . 1415) (symbol 1395 . 1398))
    )
   )
  :file "!homes!dbao!svn!branches!releases!current!current!design!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.0"
  )
