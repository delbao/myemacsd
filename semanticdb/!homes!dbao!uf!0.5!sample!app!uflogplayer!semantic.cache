;; Object uflogplayer/
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "uflogplayer/"
  :tables (list 
   (semanticdb-table "UFCurl.cpp"
    :major-mode 'c++-mode
    :tags 
        '( ("string" include (:system-flag t) nil [1 18])
            ("iostream" include (:system-flag t) nil [19 38])
            ("sstream" include (:system-flag t) nil [39 57])
            ("ostream" include (:system-flag t) nil [58 76])
            ("time.h" include (:system-flag t) nil [77 94])
            ("iomanip" include (:system-flag t) nil [95 113])
            ("uf/core/UFIO.H" include (:system-flag t) nil [141 166])
            ("uf/core/UFConnectionPool.H" include (:system-flag t) nil [199 236])
            ("Utility.h" include nil nil [239 259])
            ("uflogplayer.h" include nil nil [260 284])
            ("UFCurl.h" include nil nil [285 304])
            ("std" using (:type ("std" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [306 326])
            ("UFCurl" function
               (:constructor-flag t
                :parent "UFCurl"
                :type ("UFCurl" type (:type "class") nil nil))
                nil [402 708])
            ("UFCurl" function
               (:destructor-flag t
                :parent "UFCurl"
                :type "void")
                nil [784 825])
            ("setUrl" function
               (:parent "UFCurl"
                :arguments 
                  ( ("url" variable
                       (:reference 1
                        :constant-flag t
                        :type ("string" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [921 939]))                  
                :type "bool")
                nil [901 970])
            ("setWriteCallback" function
               (:parent "UFCurl"
                :arguments 
                  ( ("fnPtr" variable (:type ("UFCurlWriteCallbackFn" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1076 1104])
                    ("ptr" variable
                       (:pointer 1
                        :type "void")
                        (reparse-symbol arg-sub-list) [1105 1115]))                  
                :type "bool")
                nil [1046 1197])
            ("setMaxBytesPerSecond" function
               (:parent "UFCurl"
                :arguments 
                  ( ("bytesPerSecond" variable (:type ("size_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1307 1329]))                  
                :type "bool")
                nil [1273 1348])
            ("go" function
               (:parent "UFCurl"
                :type ("UFCurl::Result" type (:type "class") nil nil))
                nil [1424 2863])
            ("GET_RESPONSE_TIMEOUT" variable (:type ("TIME_IN_US" type (:type "class") nil nil)) nil [2866 2903])
            ("NEWLINE" variable (:type ("string" type (:type "class") nil nil)) nil [2904 2928])
            ("DOUBLE_NEWLINE" variable (:type ("string" type (:type "class") nil nil)) nil [2929 2964])
            ("DOUBLE_NEWLINE_LENGTH" variable (:type "unsigned int") nil [2965 3026])
            ("readData" function
               (:parent "UFCurl"
                :arguments 
                  ( ("connClosed" variable
                       (:reference 1
                        :type "bool")
                        (reparse-symbol arg-sub-list) [3133 3150]))                  
                :type ("UFCurl::Result" type (:type "class") nil nil))
                nil [3101 7708])
            ("SLEEP_BETWEEN_CONN_SETUP" variable (:type "unsigned int") nil [7711 7753])
            ("CONNECT_AND_REQUEST_TIMEOUT" variable (:type ("TIME_IN_US" type (:type "class") nil nil)) nil [7754 7803])
            ("DEFAULT_TIME_TO_WAIT_AFTER_FAILED_CONNECT" variable (:type ("size_t" type (:type "class") nil nil)) nil [7804 7857])
            ("DEFAULT_SIMULTANEOUS_CONNS_PER_HOST" variable (:type ("size_t" type (:type "class") nil nil)) nil [7858 7906])
            ("DEFAULT_MAX_CONNECT_BACKLOG_PER_THREAD" variable (:type ("size_t" type (:type "class") nil nil)) nil [7907 7958])
            ("writeData" function
               (:parent "UFCurl"
                :arguments 
                  ( ("data" variable
                       (:reference 1
                        :constant-flag t
                        :type ("string" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [8068 8087]))                  
                :type ("UFCurl::Result" type (:type "class") nil nil))
                nil [8035 8426])
            ("remote_addr" variable (:type ("string" type (:type "class") nil nil)) nil [8428 8452])
            ("sockBuf" variable (:type "int") nil [8453 8469])
            ("getConn" function
               (:pointer 1
                :parent "UFCurl"
                :type ("UFIO" type (:type "class") nil nil))
                nil [8544 9438])
            ("getCurrentTimeMilli" function
               (:parent "UFCurl"
                :type ("uint64_t" type (:type "class") nil nil))
                nil [9514 9712])
            ("calcSleepTime" function
               (:parent "UFCurl"
                :arguments 
                  ( ("lDesired" variable (:type "long") (reparse-symbol arg-sub-list) [9815 9829])
                    ("lCurrent" variable (:type "long") (reparse-symbol arg-sub-list) [9830 9844])
                    ("iPacketSize" variable (:type "int") (reparse-symbol arg-sub-list) [9844 9860]))                  
                :type "long")
                nil [9788 10976]))          
    :file "UFCurl.cpp"
    :pointmax 10977
    :fsize 10976
    :lastmodtime '(20622 62378)
    :unmatched-syntax 'nil
    )
   (semanticdb-table "Utility.h"
    :file "Utility.h"
    :fsize 6145
    :lastmodtime '(20622 62378)
    )
   (semanticdb-table "uflogplayer.h"
    :file "uflogplayer.h"
    :fsize 1710
    :lastmodtime '(20622 62378)
    )
   (semanticdb-table "UFCurl.h"
    :file "UFCurl.h"
    :fsize 1367
    :lastmodtime '(20622 62378)
    )
   )
  :file "!homes!dbao!uf!0.5!sample!app!uflogplayer!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.0"
  )
